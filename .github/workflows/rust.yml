name: CI

on:
  push:
    branches:
      - master
  pull_request:

env:
  # https://doc.rust-lang.org/cargo/reference/profiles.html#release
  RUSTFLAGS: -Coverflow-checks=y -Cdebug-assertions=y
  # https://doc.rust-lang.org/cargo/reference/profiles.html#incremental
  CARGO_INCREMENTAL: 1
  # https://nexte.st/book/pre-built-binaries.html#using-nextest-in-github-actions
  CARGO_TERM_COLOR: always

jobs:
  run_checks:
    runs-on: ubuntu-latest
    name: Run some basic checks and tests
    steps:
      #
      # Setup
      #

      - name: Checkout PR
        uses: actions/checkout@v2

      - name: Set up cargo/rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: "1.67.0"
          components: rustfmt, clippy

      - name: Install markdownlint
        run: |
          npm install -g markdownlint-cli

      - name: Setup OCaml (because of ocaml-gen)
        run: |
          sudo apt update
          sudo apt install -y ocaml

      # https://github.com/Swatinem/rust-cache
      - name: Cache Rust stuff
        uses: Swatinem/rust-cache@v1

      #
      # Doc & Spec
      #

      - name: Install cargo-spec for specifications
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-spec
          version: 0.4.1

      - name: Build the kimchi specification
        run: |
          cd book/specifications
          cd kimchi && make build

      - name: Build the polynomial commitment specification
        run: |
          cd book/specifications
          cd poly-commitment && make build

      - name: Check that up-to-date specification is checked in
        run: |
          git diff --exit-code

      #
      # Coding guidelines
      #

      - name: Enforce formating
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Lint (clippy)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --tests --all-targets -- -D warnings

      - name: Run Clippy (beta)
        uses: actions-rs/clippy-check@v1
        continue-on-error: true
        with:
          name: Clippy (beta)
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets -- -W clippy::all

      #
      # Build
      #

      - name: Ensure that everything builds
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets --all-features

      #
      # Tests
      #

      # https://nexte.st/book/pre-built-binaries.html#using-nextest-in-github-actions
      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest

      - name: Test with latest nextest release (faster than cargo test)
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --all-features --release

      - name: Doc tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --release --doc
