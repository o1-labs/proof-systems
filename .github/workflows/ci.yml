name: CI

on:
  workflow_dispatch:
  pull_request:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  # https://doc.rust-lang.org/cargo/reference/profiles.html#release
  RUSTFLAGS: -Coverflow-checks=y -Cdebug-assertions=y
  # https://doc.rust-lang.org/cargo/reference/profiles.html#incremental
  CARGO_INCREMENTAL: 1
  # https://nexte.st/book/pre-built-binaries.html#using-nextest-in-github-actions
  CARGO_TERM_COLOR: always
  # 30 MB of stack for Keccak tests
  RUST_MIN_STACK: 31457280

jobs:
  run_mdbook:
    name: Building MDBook
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust_toolchain_version: ["1.79"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Use shared Rust toolchain setting up steps
        uses: ./.github/actions/toolchain-shared
        with:
          rust_toolchain_version: ${{ matrix.rust_toolchain_version }}

      - name: Build the mdbook
        run: |
          cd book
          make deps
          make build

  run_checks:
    name: Run checks and tests
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        rust_toolchain_version: ["1.79", "1.80", "1.81", "1.82"]
        # FIXME: currently not available for 5.0.0.
        # It might be related to boxroot dependency, and we would need to bump
        # up the ocaml-rs dependency
        ocaml_version: ["4.14"]
        node: [20]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Use shared Rust toolchain setting up steps
        uses: ./.github/actions/toolchain-shared
        with:
          rust_toolchain_version: ${{ matrix.rust_toolchain_version }}

      - name: Apply the Rust smart cacheing
        uses: Swatinem/rust-cache@v2

      - name: Use shared OCaml setting up steps
        uses: ./.github/actions/ocaml-shared
        with:
          ocaml_version: ${{ matrix.ocaml_version }}

      - name: Install markdownlint
        run: |
          # FIXME: 0.39.0 makes the CI fail
          npm install -g markdownlint-cli@0.38.0

      #
      # Doc & Spec
      #

      - name: Install cargo-spec for specifications
        run: |
          eval $(opam env)
          cargo install --locked cargo-spec

      - name: Build the kimchi specification
        run: |
          cd book/specifications/kimchi
          make build

      - name: Build the polynomial commitment specification
        run: |
          cd book/specifications/poly-commitment
          make build

      - name: Check that up-to-date specification is checked in
        run: |
          git diff --exit-code ":(exclude)rust-toolchain"

      #
      # Coding guidelines
      #

      - name: Lint (clippy)
        run: |
          eval $(opam env)
          make lint

      #
      # Build
      #

      - name: Ensure that everything builds
        run: |
          eval $(opam env)
          make

      #
      # Tests
      #

      - name: Install test dependencies
        run: |
          make install-test-deps

      - name: Build the MIPS binaries
        uses: ./.github/actions/build-mips

      - name: Doc tests
        run: |
          eval $(opam env)
          make test-doc

      - name: Run non-heavy tests without the code coverage
        run: |
          eval $(opam env)
          make nextest
