(function() {var implementors = {
"arrabbiata":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"arrabbiata/columns/enum.Column.html\" title=\"enum arrabbiata::columns::Column\">Column</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>"]],
"folding":[["impl&lt;F, Col, Config: <a class=\"trait\" href=\"folding/trait.FoldingConfig.html\" title=\"trait folding::FoldingConfig\">FoldingConfig</a>&lt;Column = Col&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprInner.html\" title=\"enum kimchi::circuits::expr::ExprInner\">ExprInner</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantExprInner.html\" title=\"enum kimchi::circuits::expr::ConstantExprInner\">ConstantExprInner</a>&lt;F, <a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;, Col&gt;&gt;&gt; for <a class=\"enum\" href=\"folding/expressions/enum.FoldingCompatibleExpr.html\" title=\"enum folding::expressions::FoldingCompatibleExpr\">FoldingCompatibleExpr</a>&lt;Config&gt;<span class=\"where fmt-newline\">where\n    Config::<a class=\"associatedtype\" href=\"folding/trait.FoldingConfig.html#associatedtype.Curve\" title=\"type folding::FoldingConfig::Curve\">Curve</a>: AffineRepr&lt;ScalarField = F&gt;,\n    Config::<a class=\"associatedtype\" href=\"folding/trait.FoldingConfig.html#associatedtype.Challenge\" title=\"type folding::FoldingConfig::Challenge\">Challenge</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;,</span>"],["impl&lt;F, Col, Config: <a class=\"trait\" href=\"folding/trait.FoldingConfig.html\" title=\"trait folding::FoldingConfig\">FoldingConfig</a>&lt;Column = Col&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprInner.html\" title=\"enum kimchi::circuits::expr::ExprInner\">ExprInner</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantExprInner.html\" title=\"enum kimchi::circuits::expr::ConstantExprInner\">ConstantExprInner</a>&lt;F, <a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;&gt;, Col&gt;&gt;&gt; for <a class=\"enum\" href=\"folding/expressions/enum.FoldingCompatibleExpr.html\" title=\"enum folding::expressions::FoldingCompatibleExpr\">FoldingCompatibleExpr</a>&lt;Config&gt;<span class=\"where fmt-newline\">where\n    Config::<a class=\"associatedtype\" href=\"folding/trait.FoldingConfig.html#associatedtype.Curve\" title=\"type folding::FoldingConfig::Curve\">Curve</a>: AffineRepr&lt;ScalarField = F&gt;,\n    Config::<a class=\"associatedtype\" href=\"folding/trait.FoldingConfig.html#associatedtype.Challenge\" title=\"type folding::FoldingConfig::Challenge\">Challenge</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;,</span>"],["impl&lt;F, Col, Config: <a class=\"trait\" href=\"folding/trait.FoldingConfig.html\" title=\"trait folding::FoldingConfig\">FoldingConfig</a>&lt;Column = Col&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantExprInner.html\" title=\"enum kimchi::circuits::expr::ConstantExprInner\">ConstantExprInner</a>&lt;F, <a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;&gt;&gt; for <a class=\"enum\" href=\"folding/expressions/enum.FoldingCompatibleExpr.html\" title=\"enum folding::expressions::FoldingCompatibleExpr\">FoldingCompatibleExpr</a>&lt;Config&gt;<span class=\"where fmt-newline\">where\n    Config::<a class=\"associatedtype\" href=\"folding/trait.FoldingConfig.html#associatedtype.Curve\" title=\"type folding::FoldingConfig::Curve\">Curve</a>: AffineRepr&lt;ScalarField = F&gt;,\n    Config::<a class=\"associatedtype\" href=\"folding/trait.FoldingConfig.html#associatedtype.Challenge\" title=\"type folding::FoldingConfig::Challenge\">Challenge</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;,</span>"],["impl&lt;F, Config: <a class=\"trait\" href=\"folding/trait.FoldingConfig.html\" title=\"trait folding::FoldingConfig\">FoldingConfig</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantExprInner.html\" title=\"enum kimchi::circuits::expr::ConstantExprInner\">ConstantExprInner</a>&lt;F, <a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;&gt; for <a class=\"enum\" href=\"folding/expressions/enum.FoldingCompatibleExprInner.html\" title=\"enum folding::expressions::FoldingCompatibleExprInner\">FoldingCompatibleExprInner</a>&lt;Config&gt;<span class=\"where fmt-newline\">where\n    Config::<a class=\"associatedtype\" href=\"folding/trait.FoldingConfig.html#associatedtype.Curve\" title=\"type folding::FoldingConfig::Curve\">Curve</a>: AffineRepr&lt;ScalarField = F&gt;,\n    Config::<a class=\"associatedtype\" href=\"folding/trait.FoldingConfig.html#associatedtype.Challenge\" title=\"type folding::FoldingConfig::Challenge\">Challenge</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;,</span>"],["impl&lt;F, Col, Config: <a class=\"trait\" href=\"folding/trait.FoldingConfig.html\" title=\"trait folding::FoldingConfig\">FoldingConfig</a>&lt;Column = Col&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprInner.html\" title=\"enum kimchi::circuits::expr::ExprInner\">ExprInner</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantExprInner.html\" title=\"enum kimchi::circuits::expr::ConstantExprInner\">ConstantExprInner</a>&lt;F, <a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;, Col&gt;&gt; for <a class=\"enum\" href=\"folding/expressions/enum.FoldingCompatibleExprInner.html\" title=\"enum folding::expressions::FoldingCompatibleExprInner\">FoldingCompatibleExprInner</a>&lt;Config&gt;<span class=\"where fmt-newline\">where\n    Config::<a class=\"associatedtype\" href=\"folding/trait.FoldingConfig.html#associatedtype.Curve\" title=\"type folding::FoldingConfig::Curve\">Curve</a>: AffineRepr&lt;ScalarField = F&gt;,\n    Config::<a class=\"associatedtype\" href=\"folding/trait.FoldingConfig.html#associatedtype.Challenge\" title=\"type folding::FoldingConfig::Challenge\">Challenge</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;,</span>"]],
"internal_tracing":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/std/time/struct.SystemTime.html\" title=\"struct std::time::SystemTime\">SystemTime</a>&gt; for <a class=\"enum\" href=\"internal_tracing/enum.TimeInput.html\" title=\"enum internal_tracing::TimeInput\">TimeInput</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.u64.html\">u64</a>&gt; for <a class=\"enum\" href=\"internal_tracing/enum.TimeInput.html\" title=\"enum internal_tracing::TimeInput\">TimeInput</a>"]],
"ivc":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt; for <a class=\"enum\" href=\"ivc/plonkish_lang/enum.PlonkishChallenge.html\" title=\"enum ivc::plonkish_lang::PlonkishChallenge\">PlonkishChallenge</a>"]],
"kimchi":[["impl&lt;'a, F: Field, Column, ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.u64.html\">u64</a>&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/struct.RuntimeTable.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::RuntimeTable\">RuntimeTable</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/caml/struct.CamlRuntimeTable.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::caml::CamlRuntimeTable\">CamlRuntimeTable</a>&lt;CamlF&gt;<span class=\"where fmt-newline\">where\n    F: PrimeField,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;F&gt;,</span>"],["impl&lt;G, CamlG, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/proof/struct.RecursionChallenge.html\" title=\"struct kimchi::proof::RecursionChallenge\">RecursionChallenge</a>&lt;G&gt;&gt; for <a class=\"struct\" href=\"kimchi/proof/caml/struct.CamlRecursionChallenge.html\" title=\"struct kimchi::proof::caml::CamlRecursionChallenge\">CamlRecursionChallenge</a>&lt;CamlG, CamlF&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr,\n    CamlG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;G&gt;,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;G::ScalarField&gt;,</span>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/caml/struct.CamlRuntimeTableSpec.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::caml::CamlRuntimeTableSpec\">CamlRuntimeTableSpec</a>&gt; for <a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/struct.RuntimeTableSpec.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::RuntimeTableSpec\">RuntimeTableSpec</a>"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/gate/caml/struct.CamlCircuitGate.html\" title=\"struct kimchi::circuits::gate::caml::CamlCircuitGate\">CamlCircuitGate</a>&lt;CamlF&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/gate/struct.CircuitGate.html\" title=\"struct kimchi::circuits::gate::CircuitGate\">CircuitGate</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CamlF&gt; + PrimeField,</span>"],["impl&lt;G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SRS&lt;G&gt;&gt; for <a class=\"struct\" href=\"kimchi/precomputed_srs/struct.TestSRS.html\" title=\"struct kimchi::precomputed_srs::TestSRS\">TestSRS</a>&lt;G&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/constraints/struct.FeatureFlags.html\" title=\"struct kimchi::circuits::constraints::FeatureFlags\">FeatureFlags</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/struct.JsValue.html\" title=\"struct wasm_bindgen::JsValue\">JsValue</a>"],["impl&lt;F: Field, Column&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.u64.html\">u64</a>&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;F, Column&gt;"],["impl&lt;G&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/precomputed_srs/struct.TestSRS.html\" title=\"struct kimchi::precomputed_srs::TestSRS\">TestSRS</a>&lt;G&gt;&gt; for SRS&lt;G&gt;"],["impl&lt;F: Field, ChallengeTerm&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.u64.html\">u64</a>&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/lookup/tables/caml/struct.CamlLookupTable.html\" title=\"struct kimchi::circuits::lookup::tables::caml::CamlLookupTable\">CamlLookupTable</a>&lt;CamlF&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/lookup/tables/struct.LookupTable.html\" title=\"struct kimchi::circuits::lookup::tables::LookupTable\">LookupTable</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: PrimeField,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;F&gt;,</span>"],["impl&lt;F, ChallengeTerm&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantTerm.html\" title=\"enum kimchi::circuits::expr::ConstantTerm\">ConstantTerm</a>&lt;F&gt;&gt; for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantExprInner.html\" title=\"enum kimchi::circuits::expr::ConstantExprInner\">ConstantExprInner</a>&lt;F, ChallengeTerm&gt;"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"kimchi/circuits/gate/struct.CircuitGate.html\" title=\"struct kimchi::circuits::gate::CircuitGate\">CircuitGate</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/gate/caml/struct.CamlCircuitGate.html\" title=\"struct kimchi::circuits::gate::caml::CamlCircuitGate\">CamlCircuitGate</a>&lt;CamlF&gt;<span class=\"where fmt-newline\">where\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;F&gt;,\n    F: PrimeField,</span>"],["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/gate/struct.CircuitGate.html\" title=\"struct kimchi::circuits::gate::CircuitGate\">CircuitGate</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/gate/caml/struct.CamlCircuitGate.html\" title=\"struct kimchi::circuits::gate::caml::CamlCircuitGate\">CamlCircuitGate</a>&lt;CamlF&gt;<span class=\"where fmt-newline\">where\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;F&gt;,\n    F: PrimeField,</span>"],["impl&lt;'a, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"kimchi/circuits/constraints/struct.ConstraintSystem.html\" title=\"struct kimchi::circuits::constraints::ConstraintSystem\">ConstraintSystem</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/gate/struct.Circuit.html\" title=\"struct kimchi::circuits::gate::Circuit\">Circuit</a>&lt;'a, F&gt;<span class=\"where fmt-newline\">where\n    F: PrimeField,</span>"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/lookup/tables/struct.LookupTable.html\" title=\"struct kimchi::circuits::lookup::tables::LookupTable\">LookupTable</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/lookup/tables/caml/struct.CamlLookupTable.html\" title=\"struct kimchi::circuits::lookup::tables::caml::CamlLookupTable\">CamlLookupTable</a>&lt;CamlF&gt;<span class=\"where fmt-newline\">where\n    F: PrimeField,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;F&gt;,</span>"],["impl&lt;F, ChallengeTerm&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantTerm.html\" title=\"enum kimchi::circuits::expr::ConstantTerm\">ConstantTerm</a>&lt;F&gt;&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;"],["impl&lt;G, CamlG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/proof/struct.ProverCommitments.html\" title=\"struct kimchi::proof::ProverCommitments\">ProverCommitments</a>&lt;G&gt;&gt; for <a class=\"struct\" href=\"kimchi/prover/caml/struct.CamlProverCommitments.html\" title=\"struct kimchi::prover::caml::CamlProverCommitments\">CamlProverCommitments</a>&lt;CamlG&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr,\n    CamlPolyComm&lt;CamlG&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PolyComm&lt;G&gt;&gt;,</span>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/lookup/lookups/struct.LookupFeatures.html\" title=\"struct kimchi::circuits::lookup::lookups::LookupFeatures\">LookupFeatures</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/struct.JsValue.html\" title=\"struct wasm_bindgen::JsValue\">JsValue</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/wires/struct.Wire.html\" title=\"struct kimchi::circuits::wires::Wire\">Wire</a>&gt; for <a class=\"struct\" href=\"kimchi/circuits/wires/caml/struct.CamlWire.html\" title=\"struct kimchi::circuits::wires::caml::CamlWire\">CamlWire</a>"],["impl&lt;G, CamlG, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"struct\" href=\"kimchi/proof/struct.ProverProof.html\" title=\"struct kimchi::proof::ProverProof\">ProverProof</a>&lt;G, OpeningProof&lt;G&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;G as AffineRepr&gt;::ScalarField, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>&gt;)&gt; for <a class=\"struct\" href=\"kimchi/prover/caml/struct.CamlProofWithPublic.html\" title=\"struct kimchi::prover::caml::CamlProofWithPublic\">CamlProofWithPublic</a>&lt;CamlG, CamlF&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr,\n    CamlG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;G&gt;,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;G::ScalarField&gt;,</span>"],["impl&lt;'a, F, Column, ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantTerm.html\" title=\"enum kimchi::circuits::expr::ConstantTerm\">ConstantTerm</a>&lt;F&gt;&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/caml/struct.CamlRuntimeTableCfg.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::caml::CamlRuntimeTableCfg\">CamlRuntimeTableCfg</a>&lt;CamlF&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/struct.RuntimeTableCfg.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::RuntimeTableCfg\">RuntimeTableCfg</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: PrimeField,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;F&gt;,</span>"],["impl&lt;G, CamlG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/proof/struct.LookupCommitments.html\" title=\"struct kimchi::proof::LookupCommitments\">LookupCommitments</a>&lt;G&gt;&gt; for <a class=\"struct\" href=\"kimchi/prover/caml/struct.CamlLookupCommitments.html\" title=\"struct kimchi::prover::caml::CamlLookupCommitments\">CamlLookupCommitments</a>&lt;CamlG&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr,\n    CamlPolyComm&lt;CamlG&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PolyComm&lt;G&gt;&gt;,</span>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/prover/internal_traces/struct.Traces.html\" title=\"struct kimchi::prover::internal_traces::Traces\">Traces</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/scalars/struct.RandomOracles.html\" title=\"struct kimchi::circuits::scalars::RandomOracles\">RandomOracles</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/scalars/caml/struct.CamlRandomOracles.html\" title=\"struct kimchi::circuits::scalars::caml::CamlRandomOracles\">CamlRandomOracles</a>&lt;CamlF&gt;<span class=\"where fmt-newline\">where\n    F: Field,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;F&gt;,</span>"],["impl&lt;'a, F, ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ChallengeTerm&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/wires/struct.Wire.html\" title=\"struct kimchi::circuits::wires::Wire\">Wire</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/struct.JsValue.html\" title=\"struct wasm_bindgen::JsValue\">JsValue</a>"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/scalars/caml/struct.CamlRandomOracles.html\" title=\"struct kimchi::circuits::scalars::caml::CamlRandomOracles\">CamlRandomOracles</a>&lt;CamlF&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/scalars/struct.RandomOracles.html\" title=\"struct kimchi::circuits::scalars::RandomOracles\">RandomOracles</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;F&gt;,\n    F: Field,</span>"],["impl&lt;F, Column, ChallengeTerm&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantExprInner.html\" title=\"enum kimchi::circuits::expr::ConstantExprInner\">ConstantExprInner</a>&lt;F, ChallengeTerm&gt;&gt;&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;"],["impl&lt;G, CamlG, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/proof/caml/struct.CamlRecursionChallenge.html\" title=\"struct kimchi::proof::caml::CamlRecursionChallenge\">CamlRecursionChallenge</a>&lt;CamlG, CamlF&gt;&gt; for <a class=\"struct\" href=\"kimchi/proof/struct.RecursionChallenge.html\" title=\"struct kimchi::proof::RecursionChallenge\">RecursionChallenge</a>&lt;G&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CamlG&gt;,\n    G::ScalarField: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CamlF&gt;,</span>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/lookup/lookups/struct.LookupInfo.html\" title=\"struct kimchi::circuits::lookup::lookups::LookupInfo\">LookupInfo</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/struct.JsValue.html\" title=\"struct wasm_bindgen::JsValue\">JsValue</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/prover/internal_traces/struct.Traces.html\" title=\"struct kimchi::prover::internal_traces::Traces\">Traces</a>&gt; for <a class=\"struct\" href=\"kimchi/prover/internal_traces/caml/struct.CamlTraces.html\" title=\"struct kimchi::prover::internal_traces::caml::CamlTraces\">CamlTraces</a>"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/caml/struct.CamlRuntimeTable.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::caml::CamlRuntimeTable\">CamlRuntimeTable</a>&lt;CamlF&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/struct.RuntimeTable.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::RuntimeTable\">RuntimeTable</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: PrimeField,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;F&gt;,</span>"],["impl&lt;G, CamlG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/prover/caml/struct.CamlProverCommitments.html\" title=\"struct kimchi::prover::caml::CamlProverCommitments\">CamlProverCommitments</a>&lt;CamlG&gt;&gt; for <a class=\"struct\" href=\"kimchi/proof/struct.ProverCommitments.html\" title=\"struct kimchi::proof::ProverCommitments\">ProverCommitments</a>&lt;G&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr,\n    PolyComm&lt;G&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CamlPolyComm&lt;CamlG&gt;&gt;,</span>"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.72.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"kimchi/proof/struct.PointEvaluations.html\" title=\"struct kimchi::proof::PointEvaluations\">PointEvaluations</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;CamlF, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>&gt;&gt;&gt;, <a class=\"struct\" href=\"kimchi/proof/caml/struct.CamlProofEvaluations.html\" title=\"struct kimchi::proof::caml::CamlProofEvaluations\">CamlProofEvaluations</a>&lt;CamlF&gt;)&gt; for <a class=\"struct\" href=\"kimchi/proof/struct.ProofEvaluations.html\" title=\"struct kimchi::proof::ProofEvaluations\">ProofEvaluations</a>&lt;<a class=\"struct\" href=\"kimchi/proof/struct.PointEvaluations.html\" title=\"struct kimchi::proof::PointEvaluations\">PointEvaluations</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;F&gt;&gt;&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CamlF&gt;,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span>"],["impl&lt;'a, F, ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ChallengeTerm&gt; for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantExprInner.html\" title=\"enum kimchi::circuits::expr::ConstantExprInner\">ConstantExprInner</a>&lt;F, ChallengeTerm&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/lookup/lookups/struct.LookupPatterns.html\" title=\"struct kimchi::circuits::lookup::lookups::LookupPatterns\">LookupPatterns</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/wasm-bindgen/0.2/wasm_bindgen/struct.JsValue.html\" title=\"struct wasm_bindgen::JsValue\">JsValue</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/wires/caml/struct.CamlWire.html\" title=\"struct kimchi::circuits::wires::caml::CamlWire\">CamlWire</a>&gt; for <a class=\"struct\" href=\"kimchi/circuits/wires/struct.Wire.html\" title=\"struct kimchi::circuits::wires::Wire\">Wire</a>"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/struct.RuntimeTableCfg.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::RuntimeTableCfg\">RuntimeTableCfg</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/caml/struct.CamlRuntimeTableCfg.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::caml::CamlRuntimeTableCfg\">CamlRuntimeTableCfg</a>&lt;CamlF&gt;<span class=\"where fmt-newline\">where\n    F: PrimeField,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;F&gt;,</span>"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/proof/struct.ProofEvaluations.html\" title=\"struct kimchi::proof::ProofEvaluations\">ProofEvaluations</a>&lt;<a class=\"struct\" href=\"kimchi/proof/struct.PointEvaluations.html\" title=\"struct kimchi::proof::PointEvaluations\">PointEvaluations</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;F, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>&gt;&gt;&gt;&gt; for (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.72.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"kimchi/proof/struct.PointEvaluations.html\" title=\"struct kimchi::proof::PointEvaluations\">PointEvaluations</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;CamlF&gt;&gt;&gt;, <a class=\"struct\" href=\"kimchi/proof/caml/struct.CamlProofEvaluations.html\" title=\"struct kimchi::proof::caml::CamlProofEvaluations\">CamlProofEvaluations</a>&lt;CamlF&gt;)<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;F&gt;,</span>"],["impl&lt;G, CamlG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/prover/caml/struct.CamlLookupCommitments.html\" title=\"struct kimchi::prover::caml::CamlLookupCommitments\">CamlLookupCommitments</a>&lt;CamlG&gt;&gt; for <a class=\"struct\" href=\"kimchi/proof/struct.LookupCommitments.html\" title=\"struct kimchi::proof::LookupCommitments\">LookupCommitments</a>&lt;G&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr,\n    PolyComm&lt;G&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CamlPolyComm&lt;CamlG&gt;&gt;,</span>"],["impl&lt;G, CamlG, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/prover/caml/struct.CamlProofWithPublic.html\" title=\"struct kimchi::prover::caml::CamlProofWithPublic\">CamlProofWithPublic</a>&lt;CamlG, CamlF&gt;&gt; for (<a class=\"struct\" href=\"kimchi/proof/struct.ProverProof.html\" title=\"struct kimchi::proof::ProverProof\">ProverProof</a>&lt;G, OpeningProof&lt;G&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;G::ScalarField&gt;)<span class=\"where fmt-newline\">where\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: AffineRepr + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CamlG&gt;,\n    G::ScalarField: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CamlF&gt;,</span>"],["impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/struct.RuntimeTableCfg.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::RuntimeTableCfg\">RuntimeTableCfg</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/struct.RuntimeTableSpec.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::RuntimeTableSpec\">RuntimeTableSpec</a>"],["impl&lt;'a, F, Column, ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ChallengeTerm&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/struct.RuntimeTableSpec.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::RuntimeTableSpec\">RuntimeTableSpec</a>&gt; for <a class=\"struct\" href=\"kimchi/circuits/lookup/runtime_tables/caml/struct.CamlRuntimeTableSpec.html\" title=\"struct kimchi::circuits::lookup::runtime_tables::caml::CamlRuntimeTableSpec\">CamlRuntimeTableSpec</a>"]],
"kimchi_msm":[["impl&lt;Pair: Pairing&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kimchi_msm/precomputed_srs/struct.TestPairingSRS.html\" title=\"struct kimchi_msm::precomputed_srs::TestPairingSRS\">TestPairingSRS</a>&lt;Pair&gt;&gt; for PairingSRS&lt;Pair&gt;"],["impl&lt;Pair: Pairing&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PairingSRS&lt;Pair&gt;&gt; for <a class=\"struct\" href=\"kimchi_msm/precomputed_srs/struct.TestPairingSRS.html\" title=\"struct kimchi_msm::precomputed_srs::TestPairingSRS\">TestPairingSRS</a>&lt;Pair&gt;"]],
"kimchi_visu":[["impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;F, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.array.html\">15</a>]&gt; for <a class=\"struct\" href=\"kimchi_visu/witness/struct.Witness.html\" title=\"struct kimchi_visu::witness::Witness\">Witness</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: Field,</span>"]],
"mina_poseidon":[["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"mina_poseidon/sponge/struct.ScalarChallenge.html\" title=\"struct mina_poseidon::sponge::ScalarChallenge\">ScalarChallenge</a>&lt;F&gt;&gt; for <a class=\"struct\" href=\"mina_poseidon/sponge/caml/struct.CamlScalarChallenge.html\" title=\"struct mina_poseidon::sponge::caml::CamlScalarChallenge\">CamlScalarChallenge</a>&lt;CamlF&gt;<span class=\"where fmt-newline\">where\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;F&gt;,</span>"],["impl&lt;F, CamlF&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"mina_poseidon/sponge/caml/struct.CamlScalarChallenge.html\" title=\"struct mina_poseidon::sponge::caml::CamlScalarChallenge\">CamlScalarChallenge</a>&lt;CamlF&gt;&gt; for <a class=\"struct\" href=\"mina_poseidon/sponge/struct.ScalarChallenge.html\" title=\"struct mina_poseidon::sponge::ScalarChallenge\">ScalarChallenge</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;F&gt;,</span>"]],
"mina_signer":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"mina_signer/pubkey/enum.PubKeyError.html\" title=\"enum mina_signer::pubkey::PubKeyError\">PubKeyError</a>&gt; for <a class=\"enum\" href=\"mina_signer/keypair/enum.KeypairError.html\" title=\"enum mina_signer::keypair::KeypairError\">KeypairError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"mina_signer/enum.NetworkId.html\" title=\"enum mina_signer::NetworkId\">NetworkId</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.u8.html\">u8</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"mina_signer/seckey/enum.SecKeyError.html\" title=\"enum mina_signer::seckey::SecKeyError\">SecKeyError</a>&gt; for <a class=\"enum\" href=\"mina_signer/keypair/enum.KeypairError.html\" title=\"enum mina_signer::keypair::KeypairError\">KeypairError</a>"]],
"mvpoly":[["impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>, F: PrimeField&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"mvpoly/prime/struct.Dense.html\" title=\"struct mvpoly::prime::Dense\">Dense</a>&lt;F, N, D&gt;&gt; for <a class=\"struct\" href=\"mvpoly/monomials/struct.Sparse.html\" title=\"struct mvpoly::monomials::Sparse\">Sparse</a>&lt;F, N, D&gt;"],["impl&lt;F: PrimeField, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>, const M: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>, const D_PRIME: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"mvpoly/monomials/struct.Sparse.html\" title=\"struct mvpoly::monomials::Sparse\">Sparse</a>&lt;F, N, D&gt;&gt; for <a class=\"enum\" href=\"https://doc.rust-lang.org/1.72.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"mvpoly/monomials/struct.Sparse.html\" title=\"struct mvpoly::monomials::Sparse\">Sparse</a>&lt;F, M, D_PRIME&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;"],["impl&lt;F: PrimeField, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;F&gt; for <a class=\"struct\" href=\"mvpoly/prime/struct.Dense.html\" title=\"struct mvpoly::prime::Dense\">Dense</a>&lt;F, N, D&gt;"],["impl&lt;F: PrimeField, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;F&gt; for <a class=\"struct\" href=\"mvpoly/monomials/struct.Sparse.html\" title=\"struct mvpoly::monomials::Sparse\">Sparse</a>&lt;F, N, D&gt;"]],
"o1_utils":[["impl&lt;A, I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"o1_utils/adjacent_pairs/struct.AdjacentPairs.html\" title=\"struct o1_utils::adjacent_pairs::AdjacentPairs\">AdjacentPairs</a>&lt;A, I&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = A, IntoIter = I&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = A&gt;,</span>"]],
"o1vm":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"o1vm/interpreters/mips/column/enum.ColumnAlias.html\" title=\"enum o1vm::interpreters::mips::column::ColumnAlias\">ColumnAlias</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"o1vm/interpreters/keccak/column/enum.ColumnAlias.html\" title=\"enum o1vm::interpreters::keccak::column::ColumnAlias\">ColumnAlias</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"o1vm/interpreters/keccak/column/enum.Steps.html\" title=\"enum o1vm::interpreters::keccak::column::Steps\">Steps</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"o1vm/interpreters/riscv32im/interpreter/enum.Instruction.html\" title=\"enum o1vm::interpreters::riscv32im::interpreter::Instruction\">Instruction</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"o1vm/interpreters/riscv32im/column/enum.Column.html\" title=\"enum o1vm::interpreters::riscv32im::column::Column\">Column</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"o1vm/interpreters/mips/interpreter/enum.Instruction.html\" title=\"enum o1vm::interpreters::mips::interpreter::Instruction\">Instruction</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.usize.html\">usize</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"o1vm/cli/cannon/struct.MipsVmConfigurationArgs.html\" title=\"struct o1vm::cli::cannon::MipsVmConfigurationArgs\">MipsVmConfigurationArgs</a>&gt; for <a class=\"struct\" href=\"o1vm/cannon/struct.VmConfiguration.html\" title=\"struct o1vm::cannon::VmConfiguration\">VmConfiguration</a>"]],
"poly_commitment":[["impl&lt;G, CamlG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"poly_commitment/commitment/struct.PolyComm.html\" title=\"struct poly_commitment::commitment::PolyComm\">PolyComm</a>&lt;G&gt;&gt; for <a class=\"struct\" href=\"poly_commitment/commitment/caml/struct.CamlPolyComm.html\" title=\"struct poly_commitment::commitment::caml::CamlPolyComm\">CamlPolyComm</a>&lt;CamlG&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr,\n    CamlG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;G&gt;,</span>"],["impl&lt;G, CamlF, CamlG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"poly_commitment/ipa/struct.OpeningProof.html\" title=\"struct poly_commitment::ipa::OpeningProof\">OpeningProof</a>&lt;G&gt;&gt; for <a class=\"struct\" href=\"poly_commitment/ipa/caml/struct.CamlOpeningProof.html\" title=\"struct poly_commitment::ipa::caml::CamlOpeningProof\">CamlOpeningProof</a>&lt;CamlG, CamlF&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr,\n    CamlG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;G&gt;,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;G::ScalarField&gt;,</span>"],["impl&lt;'a, G, CamlG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"poly_commitment/commitment/caml/struct.CamlPolyComm.html\" title=\"struct poly_commitment::commitment::caml::CamlPolyComm\">CamlPolyComm</a>&lt;CamlG&gt;&gt; for <a class=\"struct\" href=\"poly_commitment/commitment/struct.PolyComm.html\" title=\"struct poly_commitment::commitment::PolyComm\">PolyComm</a>&lt;G&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.reference.html\">&amp;'a CamlG</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CamlG&gt;,</span>"],["impl&lt;G, CamlF, CamlG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"poly_commitment/ipa/caml/struct.CamlOpeningProof.html\" title=\"struct poly_commitment::ipa::caml::CamlOpeningProof\">CamlOpeningProof</a>&lt;CamlG, CamlF&gt;&gt; for <a class=\"struct\" href=\"poly_commitment/ipa/struct.OpeningProof.html\" title=\"struct poly_commitment::ipa::OpeningProof\">OpeningProof</a>&lt;G&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr,\n    CamlG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;G&gt;,\n    CamlF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;G::ScalarField&gt;,</span>"],["impl&lt;'a, G, CamlG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"poly_commitment/commitment/struct.PolyComm.html\" title=\"struct poly_commitment::commitment::PolyComm\">PolyComm</a>&lt;G&gt;&gt; for <a class=\"struct\" href=\"poly_commitment/commitment/caml/struct.CamlPolyComm.html\" title=\"struct poly_commitment::commitment::caml::CamlPolyComm\">CamlPolyComm</a>&lt;CamlG&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr,\n    CamlG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;G&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.72.1/std/primitive.reference.html\">&amp;'a G</a>&gt;,</span>"],["impl&lt;G, CamlG&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"poly_commitment/commitment/caml/struct.CamlPolyComm.html\" title=\"struct poly_commitment::commitment::caml::CamlPolyComm\">CamlPolyComm</a>&lt;CamlG&gt;&gt; for <a class=\"struct\" href=\"poly_commitment/commitment/struct.PolyComm.html\" title=\"struct poly_commitment::commitment::PolyComm\">PolyComm</a>&lt;G&gt;<span class=\"where fmt-newline\">where\n    G: AffineRepr + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CamlG&gt;,</span>"],["impl&lt;Key: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Value: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"poly_commitment/hash_map_cache/struct.HashMapCache.html\" title=\"struct poly_commitment::hash_map_cache::HashMapCache\">HashMapCache</a>&lt;Key, Value&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.72.1/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;Key, Value&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()