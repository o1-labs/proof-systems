var searchIndex = new Map(JSON.parse('[["arkworks",{"t":"FFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOO","n":["WasmBigInteger256","WasmGPallas","WasmGVesta","WasmPallasGProjective","WasmPastaFp","WasmPastaFq","WasmVestaGProjective","add","","","","as_ref","","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","deref","","","","","","","","","deref_mut","","","","","","","describe","","","","","","","describe_vector","","","","drop","","","","","","","flatten","","fmt","","","","from","","","","","","","","","","","","","","","","","from_abi","","","","","","","infinity","","init","","","","","","","into","","","","","","","into_abi","","","","","","","is_none","","","","","","long_ref_from_abi","","","","neg","","","","none","","","","","","ref_from_abi","","","","ref_mut_from_abi","","","","return_abi","","","","","","","sub","","","","to_owned","","","","","","try_from","","","","","","","try_from_js_value","","","","try_into","","","","","","","type_id","","","","","","","unflatten","","vector_from_abi","","","","vector_into_abi","","","","vzip","","","","","","","x","","y",""],"q":[[0,"arkworks"],[223,"arkworks::group_projective"],[224,"arkworks::group_affine"],[225,"arkworks::pasta_fp"],[226,"arkworks::pasta_fq"],[227,"alloc::vec"],[228,"core::fmt"],[229,"mina_curves::pasta::curves::pallas"],[230,"mina_curves::pasta::curves::vesta"],[231,"mina_curves::pasta::fields::fp"],[232,"mina_curves::pasta::fields::fq"],[233,"arkworks::bigint_256"],[234,"core::result"],[235,"wasm_bindgen"],[236,"core::any"],[237,"alloc::boxed"]],"i":"```````b0f010Bjjl43nA`43265103265103265103265104326655104326510432651032654326510103210433322266655511004326510324326510432651043265103265103265665532651032653265432651066553265104326510326543265104326510103265326543265103232","f":"```````{{bb}b}{{{d{b}}{d{b}}}c{}}{{ff}f}{{{d{f}}{d{f}}}c{}}{{{d{b}}}{{d{b}}}}{{{d{f}}}{{d{f}}}}{d{{d{c}}}{}}000000{{{d{h}}}{{d{hc}}}{}}000000{{{d{j}}}j}{{{d{l}}}l}{{{d{b}}}b}{{{d{f}}}f}{{{d{n}}}n}{{{d{A`}}}A`}{{d{d{hc}}}Ab{}}00000{{dAd}Ab}00000{Af{{d{c}}}{}}00{{{d{b}}}{{d{c}}}{}}11{{{d{f}}}{{d{c}}}{}}22{Af{{d{hc}}}{}}000000{{}Ab}0000000000{AfAb}000000{n{{Ah{Ad}}}}{A`{{Ah{Ad}}}}{{{d{j}}{d{hAj}}}Al}{{{d{l}}{d{hAj}}}Al}{{{d{n}}{d{hAj}}}Al}{{{d{A`}}{d{hAj}}}Al}{cc{}}{Anj}1{{{d{An}}}j}{B`l}3{{{d{B`}}}l}{{{d{Bb}}}b}5{Bbb}{{{d{Bd}}}f}{Bdf}8{Bfn}99{BhA`}{cBj{}}{Blj}{Bll}{Blb}{Blf}{cn{}}{cA`{}}{jBn}{lBn}{{}Af}000000{{}c{}}000000{Bjc{}}{jBl}{lBl}{bBl}{fBl}{nc{}}{A`c{}}{{{d{c}}}Bn{}}00000{ce{}{}}000{bc{}}{{{d{b}}}c{}}{{{d{f}}}c{}}{fc{}}{{}c{}}00000{ce{}{}}000{ce{}{}}000{{}}000000{{bb}c{}}{{{d{b}}{d{b}}}c{}}{{ff}c{}}{{{d{f}}{d{f}}}c{}}{dc{}}00000{c{{C`{e}}}{}{}}000000{Cb{{C`{jc}}}{}}{Cb{{C`{lc}}}{}}{Cb{{C`{bc}}}{}}{Cb{{C`{fc}}}{}}{{}{{C`{c}}}{}}000000{dCd}000000{{{Ah{Ad}}}n}{{{Ah{Ad}}}A`}{c{{Ch{{Cf{j}}}}}{}}{c{{Ch{{Cf{l}}}}}{}}{c{{Ch{{Cf{b}}}}}{}}{c{{Ch{{Cf{f}}}}}{}}{{{Ch{{Cf{j}}}}}c{}}{{{Ch{{Cf{l}}}}}c{}}{{{Ch{{Cf{b}}}}}c{}}{{{Ch{{Cf{f}}}}}c{}}{{}c{}}000000{jn}{lA`}10","D":"Al","p":[[5,"WasmPallasGProjective",0,223],[1,"reference",null,null,1],[5,"WasmVestaGProjective",0,223],[0,"mut"],[5,"WasmGPallas",0,224],[5,"WasmGVesta",0,224],[5,"WasmPastaFp",0,225],[5,"WasmPastaFq",0,226],[1,"unit"],[1,"u8"],[1,"usize"],[5,"Vec",227],[5,"Formatter",228],[8,"Result",228],[8,"Pallas",229],[8,"Vesta",230],[8,"ProjectivePallas",229],[8,"ProjectiveVesta",230],[8,"Fp",231],[8,"Fq",232],[5,"WasmBigInteger256",0,233],[1,"u32"],[1,"bool"],[6,"Result",234,null,1],[5,"JsValue",235],[5,"TypeId",236],[1,"slice"],[5,"Box",237,null,1]],"r":[[0,233],[1,224],[2,224],[3,223],[4,225],[5,226],[6,223],[7,223],[8,223],[9,223],[10,223],[11,223],[12,223],[13,233],[14,224],[15,224],[16,223],[17,223],[18,225],[19,226],[20,233],[21,224],[22,224],[23,223],[24,223],[25,225],[26,226],[27,224],[28,224],[29,223],[30,223],[31,225],[32,226],[33,224],[34,224],[35,223],[36,223],[37,225],[38,226],[39,224],[40,224],[41,223],[42,223],[43,225],[44,226],[45,233],[46,224],[47,224],[48,223],[49,223],[50,223],[51,223],[52,225],[53,226],[54,233],[55,224],[56,224],[57,223],[58,223],[59,225],[60,226],[61,233],[62,224],[63,224],[64,223],[65,223],[66,225],[67,226],[68,224],[69,224],[70,223],[71,223],[72,233],[73,224],[74,224],[75,223],[76,223],[77,225],[78,226],[79,225],[80,226],[81,224],[82,224],[83,225],[84,226],[85,233],[86,224],[87,224],[88,224],[89,224],[90,224],[91,224],[92,223],[93,223],[94,223],[95,223],[96,223],[97,223],[98,225],[99,225],[100,226],[101,226],[102,233],[103,224],[104,224],[105,223],[106,223],[107,225],[108,226],[109,224],[110,224],[111,233],[112,224],[113,224],[114,223],[115,223],[116,225],[117,226],[118,233],[119,224],[120,224],[121,223],[122,223],[123,225],[124,226],[125,233],[126,224],[127,224],[128,223],[129,223],[130,225],[131,226],[132,224],[133,224],[134,223],[135,223],[136,225],[137,226],[138,224],[139,224],[140,223],[141,223],[142,223],[143,223],[144,223],[145,223],[146,224],[147,224],[148,223],[149,223],[150,225],[151,226],[152,224],[153,224],[154,223],[155,223],[156,224],[157,224],[158,223],[159,223],[160,233],[161,224],[162,224],[163,223],[164,223],[165,225],[166,226],[167,223],[168,223],[169,223],[170,223],[171,224],[172,224],[173,223],[174,223],[175,225],[176,226],[177,233],[178,224],[179,224],[180,223],[181,223],[182,225],[183,226],[184,224],[185,224],[186,223],[187,223],[188,233],[189,224],[190,224],[191,223],[192,223],[193,225],[194,226],[195,233],[196,224],[197,224],[198,223],[199,223],[200,225],[201,226],[202,225],[203,226],[204,224],[205,224],[206,223],[207,223],[208,224],[209,224],[210,223],[211,223],[212,233],[213,224],[214,224],[215,223],[216,223],[217,225],[218,226],[219,224],[220,224],[221,224],[222,224]],"b":[[7,"impl-Add-for-WasmPallasGProjective"],[8,"impl-Add-for-%26WasmPallasGProjective"],[9,"impl-Add-for-WasmVestaGProjective"],[10,"impl-Add-for-%26WasmVestaGProjective"],[86,"impl-From%3CAffine%3CPallasParameters%3E%3E-for-WasmGPallas"],[88,"impl-From%3C%26Affine%3CPallasParameters%3E%3E-for-WasmGPallas"],[89,"impl-From%3CAffine%3CVestaParameters%3E%3E-for-WasmGVesta"],[91,"impl-From%3C%26Affine%3CVestaParameters%3E%3E-for-WasmGVesta"],[92,"impl-From%3C%26Projective%3CPallasParameters%3E%3E-for-WasmPallasGProjective"],[94,"impl-From%3CProjective%3CPallasParameters%3E%3E-for-WasmPallasGProjective"],[95,"impl-From%3C%26Projective%3CVestaParameters%3E%3E-for-WasmVestaGProjective"],[96,"impl-From%3CProjective%3CVestaParameters%3E%3E-for-WasmVestaGProjective"],[142,"impl-Neg-for-WasmPallasGProjective"],[143,"impl-Neg-for-%26WasmPallasGProjective"],[144,"impl-Neg-for-%26WasmVestaGProjective"],[145,"impl-Neg-for-WasmVestaGProjective"],[167,"impl-Sub-for-WasmPallasGProjective"],[168,"impl-Sub-for-%26WasmPallasGProjective"],[169,"impl-Sub-for-WasmVestaGProjective"],[170,"impl-Sub-for-%26WasmVestaGProjective"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAANEACAAAAFUAVwAAAFkAAQBcAAEAXwACAGMAAABmABAAfgBhAA==","P":[[8,"Add::Output"],[9,""],[10,"Add::Output"],[11,""],[13,"T"],[27,""],[33,"T"],[39,""],[45,"T"],[48,"Deref::Target"],[49,"T"],[51,"Deref::Target"],[52,"T"],[61,""],[85,"T"],[86,""],[87,"T"],[88,""],[90,"T"],[91,""],[93,"T"],[94,""],[97,"T"],[98,""],[99,"T"],[101,""],[102,"FromWasmAbi::Abi"],[103,""],[107,"FromWasmAbi::Abi"],[109,""],[118,"U"],[125,"IntoWasmAbi::Abi"],[126,""],[130,"IntoWasmAbi::Abi"],[132,"FromWasmAbi::Abi"],[138,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[142,"Neg::Output"],[146,"IntoWasmAbi::Abi"],[152,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[156,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[160,""],[167,"Sub::Output"],[171,"T"],[177,"U,T"],[184,"TryFromJsValue::Error"],[188,"U"],[195,""],[204,"VectorFromWasmAbi::Abi"],[208,"VectorIntoWasmAbi::Abi"],[212,"V"],[219,""]]}],["arrabbiata",{"t":"SSSSSSSSCCCCCCCCCCCCPGFPPPPONNNNNNNOONNNNNNNNNNNNNNNONNNNNNNNNNNONNNNNNNNNNNNGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNOPPPPGPIPPGFPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFONNNNNNNNNNNNNNNONNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNKTFTRMMNNNNNMNNNMNMNNMMMMNNNNNCCCCFNNNNNNNNNNNNHPPGKPPPPRPGSRMMMMMMNNNNNNNMMNMMNNNNMNNMHMNNNMMNNNNMMMMMMMHHMMMNNNNNNNNNMMHHFONNOOONNOONNNNNONNOOONNNNFFNNNNNNNOOONNNNNNNNNNONNNNNNNNNOOONNNNNNNNNNNNNNOOOOONNNNNNOONNNNONOOOOOONNNNNOONOONNNNNNONNONONO","n":["MAXIMUM_FIELD_SIZE_IN_BITS","MAX_DEGREE","MIN_SRS_LOG2_SIZE","MV_POLYNOMIAL_ARITY","NUMBER_OF_COLUMNS","NUMBER_OF_GADGETS","NUMBER_OF_VALUES_TO_ABSORB_PUBLIC_IO","VERIFIER_CIRCUIT_SIZE","challenge","cli","column","constraint","curve","decider","interpreter","logup","poseidon_3_60_0_5_5_fp","poseidon_3_60_0_5_5_fq","setup","witness","Beta","ChallengeTerm","Challenges","ConstraintCombiner","ConstraintHomogeniser","Gamma","RelationCombiner","beta","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","constraint_combiner","constraint_homogeniser","default","deref","","deref_mut","","deserialize","drop","","eq","equivalent","","fmt","","from","","gamma","index","","index_mut","","init","","into","","is_alpha","latex","ocaml","relation_combiner","serialize","text","to_owned","to_string","try_from","","try_into","","type_id","","vzip","","Commands","Execute","ExecuteArgs","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","","borrow_mut","","command","","command_for_update","","deref","","deref_mut","","drop","","from","","from_arg_matches","","from_arg_matches_mut","","group_id","has_subcommand","init","","into","","n","srs_size","try_from","","try_into","","type_id","","update_from_arg_matches","","update_from_arg_matches_mut","","vzip","","zkapp","Add","App","Atom","Cache","Column","Double","E","EllipticCurveAddition","EllipticCurveScaling","Gadget","GadgetIter","IfFeature","Mul","NoOp","PoseidonFullRound","PoseidonSpongeAbsorb","Pow","PublicInput","Selector","Square","Sub","X","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","deref","","","deref_mut","","","drop","","","eq","","equivalent","","fmt","","","from","","","","hash","init","","","into","","","into_iter","is_alpha","iter","latex","len","next","next_back","nth","ocaml","par_bridge","size_hint","text","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","Env","a","add_constraint","allocate","allocate_next_row","assert_equal","assert_zero","bitmask_be","borrow","borrow_mut","clone","clone_into","clone_to_uninit","coin_folding_combiner","compute_lambda","constant","constrain_boolean","constraints","default","deref","deref_mut","double_ec_point","drop","fetch_input","fetch_value_to_absorb","fmt","from","get_all_constraints","get_all_constraints_for_verifier","get_all_constraints_indexed_by_gadget","get_poseidon_mds_matrix","get_poseidon_round_constant","idx_var","idx_var_next_row","init","into","inverse","is_same_ec_point","load_poseidon_state","load_temporary_accumulators","new","one","read_position","reset","save_poseidon_state","save_temporary_accumulators","square","to_owned","try_from","try_into","type_id","vzip","write_column","zero","ArrabbiataCurve","NAME","PlonkSpongeConstants","SPONGE_CONSTANTS","SpongeConstants","absorb_curve_points","absorb_fq","borrow","borrow_mut","clone","clone_into","clone_to_uninit","create_new_sponge","deref","deref_mut","drop","endos","from","get_curve_params","init","into","other_curve_endo","other_curve_sponge_params","sponge_params","squeeze_challenge","to_owned","try_from","try_into","type_id","vzip","column_env","proof","prover","verifier","Proof","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip","prove","EllipticCurveAddition","EllipticCurveScaling","Instruction","InterpreterEnv","Left","NoOp","PoseidonFullRound","PoseidonSpongeAbsorb","Position","Right","Side","VERIFIER_STARTING_INSTRUCTION","Variable","add_constraint","allocate","allocate_next_row","assert_equal","assert_zero","bitmask_be","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","coin_folding_combiner","compute_lambda","compute_x5","constant","constrain_boolean","deref","","deref_mut","","double_ec_point","drop","","fetch_input","fetch_next_instruction","fetch_value_to_absorb","fmt","from","","get_poseidon_mds_matrix","get_poseidon_round_constant","init","","into","","inverse","is_same_ec_point","load_poseidon_state","load_temporary_accumulators","one","read_position","reset","run_app","run_ivc","save_poseidon_state","save_temporary_accumulators","square","to_owned","try_from","","try_into","","type_id","","vzip","","write_column","zero","static_params","","IndexedRelation","app_size","borrow","borrow_mut","circuit_gates","constraints_fp","constraints_fq","deref","deref_mut","domain_fp","domain_fq","drop","from","get_srs_blinders","get_srs_size","init","initial_sponge","into","new","selectors_comm","srs_e1","srs_e2","try_from","try_into","type_id","vzip","Env","Program","absorb_state","","accumulate_commitment_blinder","accumulate_committed_state","","accumulate_program_state","","accumulated_challenges","accumulated_committed_state","accumulated_program_state","add_constraint","allocate","allocate_next_row","assert_equal","assert_zero","bitmask_be","borrow","","borrow_mut","","challenges","coin_challenge","","coin_folding_combiner","commit_state","","compute_lambda","compute_output","constant","constrain_boolean","current_instruction","current_iteration","current_row","deref","","deref_mut","","double_ec_point","drop","","fetch_input","fetch_instruction","fetch_value_to_absorb","from","","get_poseidon_mds_matrix","get_poseidon_round_constant","idx_values_to_absorb","idx_var","idx_var_next_row","idx_var_pi","indexed_relation","init","","into","","inverse","is_same_ec_point","last_program_digest_after_execution","last_program_digest_before_execution","load_poseidon_state","load_temporary_accumulators","new","","next_state","one","previous_challenges","previous_committed_state","program_e1","program_e2","prover_sponge_state","r","read_position","reset","reset_for_next_iteration","save_poseidon_state","save_temporary_accumulators","sponge_e1","sponge_e2","square","state","temporary_accumulators","try_from","","try_into","","type_id","","verifier_sponge_state","vzip","","witness","write_column","z0","zero","zi"],"q":[[0,"arrabbiata"],[20,"arrabbiata::challenge"],[77,"arrabbiata::cli"],[125,"arrabbiata::column"],[216,"arrabbiata::constraint"],[270,"arrabbiata::curve"],[300,"arrabbiata::decider"],[304,"arrabbiata::decider::proof"],[317,"arrabbiata::decider::prover"],[318,"arrabbiata::interpreter"],[391,"arrabbiata::poseidon_3_60_0_5_5_fp"],[392,"arrabbiata::poseidon_3_60_0_5_5_fq"],[393,"arrabbiata::setup"],[419,"arrabbiata::witness"],[517,"num_traits::identities"],[518,"core::result"],[519,"serde::de"],[520,"core::fmt"],[521,"kimchi::circuits::expr"],[522,"std::collections::hash::map"],[523,"alloc::string"],[524,"serde::ser"],[525,"core::any"],[526,"clap_builder::builder::command"],[527,"clap_builder::parser::matches::arg_matches"],[528,"clap_builder"],[529,"clap_builder::util::id"],[530,"core::option"],[531,"core::hash"],[532,"rayon::iter::par_bridge"],[533,"num_bigint::bigint"],[534,"core::clone"],[535,"alloc::vec"],[536,"mina_poseidon::sponge"],[537,"mina_poseidon::constants"],[538,"mina_poseidon::poseidon"],[539,"ark_ff::fields::prime"],[540,"core::marker"],[541,"core::ops::arith"],[542,"mina_curves::pasta::fields::fp"],[543,"mina_curves::pasta::fields::fq"],[544,"kimchi::circuits::domains"],[545,"poly_commitment::ipa"]],"i":"````````````````````l``0000f0101111000010110111111010000001011110111101010101`C``Bl01101010101010101010101010101000101010101010EdCh11`1`00``110001Cl02201Cj1201201201201201201201212220122012201201012100001001201201201201201`Df0000000000000000000000000000000000000000000000000000`Dj`0000F`0000100010100111100000`````Ff00000000000`Cn0``Ef111Gb1``000000012122220000012120120`02120012120000000``00021212121200```Hd000000000000000000000000``HlFd0101011100000010100100100000000101001000010000000010100000001000110000000000000010101001000000","f":"{{}b}{{}d}000000```````````````````{f}{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{{{h{l}}}l}{{h{h{jc}}}n{}}{{hA`}n}55{{}{{f{c}}}Ab}{d{{h{c}}}{}}0{d{{h{jc}}}{}}0{c{{Ad{l}}}Af}{dn}0{{{h{l}}{h{l}}}Ah}{{h{h{c}}}Ah{}}0{{{h{l}}{h{jAj}}}Al}0{cc{}}0>{{{h{{f{c}}}}d}{{h{e}}}{}{}}{{{h{{f{c}}}}l}{{h{e}}}{}{}}{{{h{j{f{c}}}}d}{{h{jc}}}{}}{{{h{j{f{c}}}}l}{{h{jc}}}{}}{{}d}0{{}c{}}0{hAh}{{h{h{j{B`{Anc}}}}}Bb{}}0{f}{{{h{l}}c}AdBd}2{hc{}}{hBb}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{hBf}0{{}c{}}0```{BhBh}000{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{{}Bh}000{d{{h{c}}}{}}0{d{{h{jc}}}{}}0{dn}0{cc{}}0{{{h{Bj}}}{{Ad{BlBn}}}}{{{h{Bj}}}{{Ad{C`Bn}}}}{{{h{jBj}}}{{Ad{BlBn}}}}{{{h{jBj}}}{{Ad{C`Bn}}}}{{}{{Cd{Cb}}}}{{{h{Cf}}}Ah}{{}d}0{{}c{}}0{Blb}{Bld}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{hBf}0{{{h{jBl}}{h{Bj}}}{{Ad{nBn}}}}{{{h{jC`}}{h{Bj}}}{{Ad{nBn}}}}{{{h{jBl}}{h{jBj}}}{{Ad{nBn}}}}{{{h{jC`}}{h{jBj}}}{{Ad{nBn}}}}{{}c{}}0{BlBb}``````````````````````{h{{h{c}}}{}}00{{{h{j}}}{{h{jc}}}{}}00{{{h{Ch}}}Ch}{{{h{Cj}}}Cj}{{{h{Cl}}}Cl}{{h{h{jc}}}n{}}00{{hA`}n}00{d{{h{c}}}{}}00{d{{h{jc}}}{}}00{dn}00{{{h{Ch}}{h{Ch}}}Ah}{{{h{Cl}}{h{Cl}}}Ah}{{h{h{c}}}Ah{}}0{{{h{Ch}}{h{jAj}}}Al}{{{h{Cj}}{h{jAj}}}Al}{{{h{Cl}}{h{jAj}}}Al}{cc{}}{CnCh}11{{{h{Ch}}{h{jc}}}nD`}{{}d}00{{}c{}}00{{}c{}}{{{h{Cl}}}Ah}{{}Cj}{{{h{Cl}}{h{j{B`{AnCl}}}}}Bb}{{{h{Cj}}}d}{{{h{jCj}}}{{Cd{c}}}{}}0{{{h{jCj}}d}{{Cd{c}}}{}}3{{}{{Db{c}}}{}}{{{h{Cj}}}{{Dd{d{Cd{d}}}}}}5{hc{}}00{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{hBf}00{{}c{}}00`{DfDh}{{{h{j{Df{c}}}}e}nDj{}}{{{h{j{Df{c}}}}}eDj{}}0{{{h{j{Df{c}}}}ee}nDj{}}2{{{h{j{Df{c}}}}{h{e}}DlDlg}eDj{}{}}{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{{h{{Df{c}}}}}{{Df{c}}}{DnDj}}{{h{h{jc}}}n{}}{{hA`}n}{{{h{j{Df{c}}}}e}gDj{}{}}{{{h{j{Df{c}}}}eggggg}gDj{}{}}{{{h{{Df{c}}}}Dh}eDj{}};{DfE`}{{}{{Df{c}}}Dj}{d{{h{c}}}{}}{d{{h{jc}}}{}}{{{h{j{Df{c}}}}eegg}{{Dd{gg}}}Dj{}{}}{dn}88{{{h{{Df{c}}}}{h{jAj}}}Al{EbDj}}{cc{}}{{{h{{Df{c}}}}}{{E`{Ed}}}Dj}0{{{h{{Df{c}}}}}{{B`{Ch{E`{Ed}}}}}Dj}{{{h{j{Df{c}}}}dd}eDj{}}{{{h{{Df{c}}}}dd}eDj{}}{Dfd}0{{}d}{{}c{}}{{{h{j{Df{c}}}}eg}gDj{}{}}{{{h{j{Df{c}}}}egggg}gDj{}{}}{{{h{j{Df{c}}}}ed}gDj{}{}}{{{h{j{Df{c}}}}eeEf}{{Dd{gg}}}Dj{}{}}{{}{{Df{c}}}Dj}{{{h{{Df{c}}}}}eDj{}}{{{h{{Df{c}}}}e}gDj{}{}}{{{h{j{Df{c}}}}}nDj}{{{h{j{Df{c}}}}ed}nDj{}}{{{h{j{Df{c}}}}eeEf}nDj{}}9{hc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{hBf}{{}c{}}>9`````{{{h{j{Eh{ce}}}}{h{{El{{Dj{}{{Ej{e}}}}}}}}}n{}En}{{{h{j{Eh{ce}}}}g}n{}{}{}}{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{{h{F`}}}F`}{{h{h{jc}}}n{}}{{hA`}n}{{}{{Eh{ce}}}{}{}}{d{{h{c}}}{}}{d{{h{jc}}}{}}{dn}{{}{{h{{Dd{ce}}}}}{}{}}{cc{}}{{}{{Dd{cc}}}{}}{{}d}{{}c{}}{{}{{h{c}}}{}}{{}{{h{{Fb{c}}}}}{}}{{}{{h{{Fb{c}}}}}{}}{{{h{j{Eh{ce}}}}}g{}{}{}}{hc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{hBf}{{}c{}}`````{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{d{{h{c}}}{}}{d{{h{jc}}}{}}{dn}{cc{}}{{}d}{{}c{}};:98{{{h{{Fd{cegi}}}}}{{Ad{FfBb}}}FhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}}```````````{{}Cn}`{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}e}n{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}}c{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}0{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}ee}n{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}2{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}{h{e}}DlDlc}e{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}==<<{{{h{Cn}}}Cn}{{h{h{jc}}}n{}}{{hA`}n}{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}c}e{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}ceeeee}e{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{{Gb{}{{Fn{c}}{G`{e}}}}}}e}e{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{{Gb{}{{Fn{c}}{G`{e}}}}}}Dh}e{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}:{d{{h{c}}}{}}0{d{{h{jc}}}{}}0{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}ccee}{{Dd{ee}}}{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{dn}07{CnCn}8{{{h{Cn}}{h{jAj}}}Al}{cc{}}0{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}dd}e{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{{Gb{}{{Fn{c}}{G`{e}}}}}}dd}e{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{}d}0{{}c{}}0{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}ce}e{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}ceeee}e{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}cd}e{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}ccEf}{{Dd{ee}}}{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{{Gb{}{{Fn{c}}{G`{e}}}}}}}e{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{{Gb{}{{Fn{c}}{G`{e}}}}}}c}e{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}}n{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{jc}}}nGb}{{{h{jc}}Cn}nGb}{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}ed}n{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}{{{h{j{Gb{}{{Fn{c}}{G`{e}}}}}}eeEf}n{DnGd}{Dn{Gh{e}{{Gf{e}}}}{Gj{e}{{Gf{e}}}}{Gl{e}{{Gf{e}}}}EbAbGn}}:{hc{}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{hBf}0{{}c{}}0?;{{}{{h{{Fb{H`}}}}}}{{}{{h{{Fb{Hb}}}}}}`{Hdd}{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{HdE`}{HdB`}0{d{{h{c}}}{}}{d{{h{jc}}}{}}{HdHf}0{dn}{cc{}}{{{h{{Hd{cegi}}}}}{{Dd{gi}}}FhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}}{{{h{{Hd{cegi}}}}}dFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}}{{}d}{HdHh}{{}c{}}{d{{Hd{cegi}}}FhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}}{HdDd}{HdHj}0{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{hBf}{{}c{}}``{{{h{j{Hl{ceg}}}}Dh}{{E`{Dh}}}FhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}}{{{h{j{Fd{cegi}}}}}nFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}}0{{{h{j{Hl{ceg}}}}Dh}nFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}}1{{{h{j{Hl{ceg}}}}Dh{h{{El{{E`{Dh}}}}}}}nFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}}2{Hlf}{HlE`}0{{{h{j{Fd{cegi}}}}k}nFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}}{{{h{j{Fd{cegi}}}}}kFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}}0{{{h{j{Fd{cegi}}}}kk}nFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}}2{{{h{j{Fd{cegi}}}}{h{k}}DlDlm}kFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}{}}{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{Fdf}{{{h{{Hl{ceg}}}}{E`{Dh}}}{{Dd{Dh{E`{Dh}}}}}FhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}}{{{h{j{Fd{cegi}}}}l}nFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}}{{{h{j{Fd{cegi}}}}k}mFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}{}}{{{h{j{Hl{ceg}}}}{h{{Hj{g}}}}Hf{h{{El{{E`{Dh}}}}}}}nFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}}?{{{h{j{Fd{cegi}}}}kmmmmm}mFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}{}}{{{h{j{Fd{cegi}}}}}nFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}}{{{h{{Fd{cegi}}}}Dh}kFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}}={FdCn}{Fdb}{Fdd}{d{{h{c}}}{}}0{d{{h{jc}}}{}}0{{{h{j{Fd{cegi}}}}kkmm}{{Dd{mm}}}FhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}{}}{dn}0;{{{h{{Fd{cegi}}}}}CnFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}}<{cc{}}0{{{h{j{Fd{cegi}}}}dd}kFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}}{{{h{{Fd{cegi}}}}dd}kFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}}8888{FdHd}{{}d}0{{}c{}}0{{{h{j{Fd{cegi}}}}km}mFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}{}}{{{h{j{Fd{cegi}}}}kmmmm}mFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}{}}{FdDh}0{{{h{j{Fd{cegi}}}}kd}mFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}{}}{{{h{j{Fd{cegi}}}}kkEf}{{Dd{mm}}}FhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}{}}{{dg}{{Hl{ceg}}}FhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}}{{Dh{Hd{cegi}}}{{Fd{cegi}}}FhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}}{FdHh}{{{h{{Fd{cegi}}}}}kFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}}{Hlf}{HlE`}{FdHl}049{{{h{{Fd{cegi}}}}k}mFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}{}}{{{h{j{Fd{cegi}}}}}nFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}}0{{{h{j{Fd{cegi}}}}kd}nFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}}{{{h{j{Fd{cegi}}}}kkEf}nFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}}88?8{FdDd}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{hBf}0<{{}c{}}0{FdE`}{{{h{j{Fd{cegi}}}}km}mFhFh{{Dj{}{{Fj{c}}{Fl{e}}}}}{{Dj{}{{Fj{e}}{Fl{c}}}}}{}{}}{FdDh}?0","D":"AEf","p":[[1,"u64"],[1,"usize"],[5,"Challenges",20],[1,"reference",null,null,1],[0,"mut"],[6,"ChallengeTerm",20],[1,"unit"],[1,"u8"],[10,"Zero",517],[6,"Result",518,null,1],[10,"Deserializer",519],[1,"bool"],[5,"Formatter",520],[8,"Result",520],[5,"CacheId",521],[5,"HashMap",522],[5,"String",523],[10,"Serializer",524],[5,"TypeId",525],[5,"Command",526],[5,"ArgMatches",527],[5,"ExecuteArgs",77],[8,"Error",528],[6,"Commands",77],[5,"Id",529],[6,"Option",530,null,1],[1,"str"],[6,"Gadget",125],[5,"GadgetIter",125],[6,"Column",125],[6,"Instruction",318],[10,"Hasher",531],[5,"IterBridge",532],[1,"tuple",null,null,1],[5,"Env",216],[5,"BigInt",533],[10,"ArrabbiataCurve",270],[1,"u32"],[10,"Clone",534],[5,"Vec",535],[10,"Debug",520],[8,"E",125],[6,"Side",318],[5,"DefaultFqSponge",536],[17,"SpongeConstants"],[1,"slice"],[10,"SpongeConstants",537],[5,"PlonkSpongeConstants",270],[5,"ArithmeticSpongeParams",538],[5,"Env",419],[5,"Proof",304],[10,"PrimeField",539],[17,"ScalarField"],[17,"BaseField"],[17,"Position"],[17,"Variable"],[10,"InterpreterEnv",318],[10,"Copy",540],[17,"Output"],[10,"Add",541],[10,"Sub",541],[10,"Mul",541],[10,"One",517],[8,"Fp",542],[8,"Fq",543],[5,"IndexedRelation",393],[5,"EvaluationDomains",544],[1,"array"],[5,"SRS",545],[5,"Program",419]],"r":[],"b":[[48,"impl-Debug-for-ChallengeTerm"],[49,"impl-Display-for-ChallengeTerm"],[53,"impl-Index%3Cusize%3E-for-Challenges%3CF%3E"],[54,"impl-Index%3CChallengeTerm%3E-for-Challenges%3CF%3E"],[55,"impl-IndexMut%3Cusize%3E-for-Challenges%3CF%3E"],[56,"impl-IndexMut%3CChallengeTerm%3E-for-Challenges%3CF%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFoBRQAAAAAACQADABEAAQAUAAAAFgABABoAAAAdAAYAJgAMADUABgA+AAIAQgAgAGUABwBvAA8AgAAGAIkAAQCOACQAtAAAALcAAwC+ABsA2wASAO8AAwD2AAUA/gAOAA4BAAARAQIAFgEEABwBAgAiAQAAKAEEAC4BAAAyAQQAOAEAADoBAwA/AQEAQwEBAEcBAQBMAQAAUgEGAFwBBQBjAQEAaAEAAG0BAQB9AQgAiAEBAIwBAQCQAQIAlQEAAJcBAgCcAQAAoAEDALABBAC2AQMAwAEAAMIBAQDHAQMAzAEEANMBAQDXAQAA2gEBAN8BAADiAQMA5wEAAO4BAADxAQEA9AEBAPgBBQD/AQEAAgIAAAQCAAA=","P":[[28,"T"],[32,""],[33,"T"],[34,""],[37,"F"],[38,"T"],[42,"__D"],[43,""],[46,"K"],[48,""],[50,"T"],[52,""],[53,"F,Index::Output"],[55,"F"],[57,""],[59,"U"],[61,""],[62,"ChallengeTerm"],[64,""],[65,"__S"],[66,"ChallengeTerm"],[67,"T"],[68,""],[69,"U,T"],[71,"U"],[73,""],[75,"V"],[80,""],[84,"T"],[88,""],[92,"T"],[96,""],[98,"T"],[100,""],[108,"U"],[110,""],[112,"U,T"],[114,"U"],[116,""],[122,"V"],[124,""],[147,"T"],[153,""],[156,"T"],[159,""],[162,"T"],[168,""],[173,"K"],[175,""],[178,"T"],[179,""],[180,"T"],[182,"__H"],[183,""],[186,"U"],[189,"I"],[190,""],[194,"Iterator::Item"],[197,""],[198,"T"],[199,""],[201,"T"],[204,"U,T"],[207,"U"],[210,""],[213,"V"],[217,""],[218,"C,InterpreterEnv::Variable"],[219,"C,InterpreterEnv::Position"],[221,"C,InterpreterEnv::Variable"],[223,"C,InterpreterEnv::Variable,InterpreterEnv::Position"],[224,"T"],[226,"C"],[227,"T"],[228,""],[229,"C,InterpreterEnv::Position,InterpreterEnv::Variable"],[231,"C,InterpreterEnv::Variable"],[233,""],[234,"C"],[235,"T"],[237,"C,InterpreterEnv::Position,InterpreterEnv::Variable"],[238,""],[239,"C,InterpreterEnv::Position,InterpreterEnv::Variable"],[241,"C"],[242,"T"],[243,"C"],[246,"C,InterpreterEnv::Variable"],[248,""],[251,"U"],[252,"C,InterpreterEnv::Position,InterpreterEnv::Variable"],[256,"C"],[257,"C,InterpreterEnv::Variable"],[258,"C,InterpreterEnv::Position,InterpreterEnv::Variable"],[259,"C"],[260,"C,InterpreterEnv::Variable"],[262,"C,InterpreterEnv::Position,InterpreterEnv::Variable"],[263,"T"],[264,"U,T"],[265,"U"],[266,""],[267,"V"],[268,"C,InterpreterEnv::Position,InterpreterEnv::Variable"],[269,"C,InterpreterEnv::Variable"],[275,"CommitmentCurve::Params,ArrabbiataCurve::SpongeConstants"],[276,"CommitmentCurve::Params,ArrabbiataCurve::SpongeConstants,AffineRepr::BaseField"],[277,"T"],[279,""],[280,"T"],[281,""],[282,"CommitmentCurve::Params,ArrabbiataCurve::SpongeConstants"],[283,"T"],[285,""],[286,"AffineRepr::BaseField,AffineRepr::ScalarField"],[287,"T"],[288,"AffineRepr::BaseField"],[289,""],[290,"U"],[291,"AffineRepr::ScalarField"],[292,"AffineRepr::BaseField"],[293,"AffineRepr::ScalarField"],[294,"CommitmentCurve::Params,ArrabbiataCurve::SpongeConstants,AffineRepr::ScalarField"],[295,"T"],[296,"U,T"],[297,"U"],[298,""],[299,"V"],[305,"T"],[309,""],[310,"T"],[311,""],[312,"U"],[313,"U,T"],[314,"U"],[315,""],[316,"V"],[317,"Fp,Fq,E1,E2"],[329,""],[331,"InterpreterEnv::Position,InterpreterEnv::Variable"],[337,"T"],[341,""],[342,"T"],[343,""],[344,"InterpreterEnv::Position,InterpreterEnv::Variable"],[349,"T"],[353,"InterpreterEnv::Position,InterpreterEnv::Variable"],[354,""],[356,"InterpreterEnv::Position,InterpreterEnv::Variable"],[357,""],[358,"InterpreterEnv::Position,InterpreterEnv::Variable"],[359,""],[360,"T"],[362,"InterpreterEnv::Position,InterpreterEnv::Variable"],[364,""],[366,"U"],[368,"InterpreterEnv::Position,InterpreterEnv::Variable"],[375,"E"],[377,"InterpreterEnv::Position,InterpreterEnv::Variable"],[380,"T"],[381,"U,T"],[383,"U"],[385,""],[387,"V"],[389,"InterpreterEnv::Position,InterpreterEnv::Variable"],[391,""],[395,"T"],[397,""],[400,"T"],[402,""],[405,"T"],[406,"Fp,Fq,E1,E2"],[408,""],[410,"U"],[411,"Fp,Fq,E1,E2"],[412,""],[415,"U,T"],[416,"U"],[417,""],[418,"V"],[421,"Fp,Fq,E"],[422,"Fp,Fq,E1,E2"],[424,"Fp,Fq,E"],[425,"Fp,Fq,E1,E2"],[426,"Fp,Fq,E"],[427,"Fp,Fq,E1,E2"],[428,""],[431,"Fp,Fq,E1,E2,InterpreterEnv::Variable"],[432,"Fp,Fq,E1,E2,InterpreterEnv::Position"],[434,"Fp,Fq,E1,E2,InterpreterEnv::Variable"],[436,"Fp,Fq,E1,E2,InterpreterEnv::Variable,InterpreterEnv::Position"],[437,"T"],[441,""],[442,"Fp,Fq,E"],[443,"Fp,Fq,E1,E2"],[444,"Fp,Fq,E1,E2,InterpreterEnv::Position,InterpreterEnv::Variable"],[445,"Fp,Fq,E"],[446,"Fp,Fq,E1,E2"],[447,"Fp,Fq,E1,E2,InterpreterEnv::Position,InterpreterEnv::Variable"],[448,"Fp,Fq,E1,E2"],[449,"Fp,Fq,E1,E2,InterpreterEnv::Variable"],[451,""],[454,"T"],[458,"Fp,Fq,E1,E2,InterpreterEnv::Position,InterpreterEnv::Variable"],[459,""],[461,"Fp,Fq,E1,E2,InterpreterEnv::Position,InterpreterEnv::Variable"],[462,"Fp,Fq,E1,E2"],[463,"Fp,Fq,E1,E2,InterpreterEnv::Position,InterpreterEnv::Variable"],[464,"T"],[466,"Fp,Fq,E1,E2,InterpreterEnv::Variable"],[468,""],[475,"U"],[477,"Fp,Fq,E1,E2,InterpreterEnv::Position,InterpreterEnv::Variable"],[479,""],[481,"Fp,Fq,E1,E2,InterpreterEnv::Position,InterpreterEnv::Variable"],[483,"Fp,Fq,E"],[484,"Fp,Fq,E1,E2"],[485,""],[486,"Fp,Fq,E1,E2,InterpreterEnv::Variable"],[487,""],[493,"Fp,Fq,E1,E2,InterpreterEnv::Position,InterpreterEnv::Variable"],[494,"Fp,Fq,E1,E2"],[496,"Fp,Fq,E1,E2,InterpreterEnv::Variable"],[498,""],[500,"Fp,Fq,E1,E2,InterpreterEnv::Position,InterpreterEnv::Variable"],[501,""],[503,"U,T"],[505,"U"],[507,""],[510,"V"],[512,""],[513,"Fp,Fq,E1,E2,InterpreterEnv::Position,InterpreterEnv::Variable"],[514,""],[515,"Fp,Fq,E1,E2,InterpreterEnv::Variable"],[516,""]]}],["bench_cross_terms",{"t":"HHH","n":["bench_sparse_cross_terms_computation_ec_addition","bench_sparse_cross_terms_computation_scaled","main"],"q":[[0,"bench_cross_terms"]],"i":"```","f":"{{}b}00","D":"`","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAMAEAAAAAAAAQACAAMA","P":[]}],["export_test_vectors",{"t":"CHCPPPPGGNNNNNNNNNNNNNNNNNNNNHNNNNNNNNFFNNNNNNNNNNNNNNHNNONNOOHHNNONNNNNNNN","n":["inner","main","vectors","B10","Hex","Kimchi","Legacy","Mode","ParamType","borrow","","borrow_mut","","deref","","deref_mut","","drop","","fmt","","from","","from_str","","init","","into","","main","try_from","","try_into","","type_id","","vzip","","TestVector","TestVectors","borrow","","borrow_mut","","deref","","deref_mut","","drop","","fmt","","from","","generate","init","","input","into","","name","output","poseidon","rand_fields","serialize","","test_vectors","try_from","","try_into","","type_id","","vzip",""],"q":[[0,"export_test_vectors"],[3,"export_test_vectors::inner"],[38,"export_test_vectors::vectors"],[75,"core::fmt"],[76,"core::result"],[77,"core::any"],[78,"alloc::vec"],[79,"alloc::string"],[80,"mina_curves::pasta::fields::fp"],[81,"mina_poseidon::poseidon"],[82,"rand::rng"],[83,"serde::ser"]],"i":"```j0A`0``10101010101010101010`10101010``AhAj101010101010`1001010``10110101010","f":"`{{}b}```````{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{h{{d{c}}}{}}0{h{{d{fc}}}{}}0{hb}0{{{d{j}}{d{fl}}}n}{{{d{A`}}{d{fl}}}n}{cc{}}0{{{d{Ab}}}{{Ad{jc}}}{}}{{{d{Ab}}}{{Ad{A`c}}}{}}{{}h}0{{}c{}}0<{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{dAf}0{{}c{}}0``??>>==<<;;{{{d{Ah}}{d{fl}}}n}{{{d{Aj}}{d{fl}}}n}::{{jA`}Ah}88{AjAl}88{AhAn}{AjAn}{{{d{{Bb{B`}}}}{d{{Bd{B`}}}}}B`}{{{d{fc}}Bf}{{Al{B`}}}Bh}{{{d{Ah}}c}AdBj}{{{d{Aj}}c}AdBj}{AhAl}>>==<<;;","D":"Ah","p":[[1,"unit"],[1,"reference",null,null,1],[0,"mut"],[1,"usize"],[6,"Mode",3],[5,"Formatter",75],[8,"Result",75],[6,"ParamType",3],[1,"str"],[6,"Result",76,null,1],[5,"TypeId",77],[5,"TestVectors",38],[5,"TestVector",38],[5,"Vec",78],[5,"String",79],[8,"Fp",80],[1,"slice"],[5,"ArithmeticSpongeParams",81],[1,"u8"],[10,"Rng",82],[10,"Serializer",83]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAD8ABwAAAAEAAwASABgAAwAeABYAOAACAD0AAQBBAAoA","P":[[9,"T"],[17,""],[21,"T"],[23,"FromStr::Err"],[25,""],[27,"U"],[29,""],[30,"U,T"],[32,"U"],[34,""],[36,"V"],[40,"T"],[48,""],[52,"T"],[54,""],[58,"U"],[60,""],[64,"__S"],[66,""],[67,"U,T"],[69,"U"],[71,""],[73,"V"]]}],["flamegraph",{"t":"HH","n":["black_box","main"],"q":[[0,"flamegraph"]],"i":"``","f":"{cc{}}{{}b}","D":"b","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAgA=","P":[[0,"T"],[1,""]]}],["folding",{"t":"GRRPRREEKKFFERPPEEPRGRRRERNNNNNNNNMCNNNNNNMCNCNNNNNNNNONNNNNNNCOCONNNOONNNNNNNNNNCNNNNMNNNNNNCOOMOCOOOONNNNNNNNNNNNNNNNNNNOKGFKFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNMNNNNNNNNNNNNNNNOOPPPPGPPPNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNPPGPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPGPPPGPPKGGGFPPPPPPPPGPPPPFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKKKKKFFKONNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNMNMNNNNNNNONNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNONNNNOFFNNNNNNNNNNOONNNNNNOHNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Alphas","Challenge","Column","Combinations","Curve","Env","ExpExtension","FoldingCompatibleExpr","FoldingConfig","FoldingEnv","FoldingOutput","FoldingScheme","Instance","","Left","Powers","RelaxedInstance","RelaxedWitness","Right","Selector","Side","Srs","Structure","","Witness","","borrow","","","","borrow_mut","","","","challenge","checker","clone","","clone_into","","clone_to_uninit","","col","columns","combine","decomposable_folding","deref","","","","deref_mut","","","","domain","drop","","","","eq","equivalent","","eval_leaf","expression","expressions","extended_witness_generator","fmt","fold_instance_pair","fold_instance_witness_pair","folded_instance","folded_witness","from","","","","get","get_number_of_additional_columns","init","","","","instance_witness","into","","","","new","","","new_sized","other","pair","powers","quadraticization","relaxed_extended_left_instance","relaxed_extended_right_instance","selector","srs","standard_config","structure","t_0","t_1","to_absorb","to_owned","","try_from","","","","try_into","","","","type_id","","","","verify_fold","vzip","","","","zero_vec","Checker","Column","ExtendedProvider","Provide","Provider","Selector","X","borrow","","","borrow_mut","","","check","check_rec","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","fmt","from","","","hash","init","","","inner_provider","instance","","into","","","is_witness","new","","resolve","","","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","witness","","Alpha","Challenge","Constant","Error","ExtendedFoldingColumn","Inner","Selector","WitnessExtended","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","DecomposableFoldingScheme","borrow","borrow_mut","deref","deref_mut","drop","fold_instance_pair","fold_instance_witness_pair","from","get_number_of_additional_columns","init","into","new","try_from","try_into","type_id","vzip","Col","Const","EvalLeaf","Result","add","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","","from","init","into","map","mul","","sub","to_owned","to_string","try_from","try_into","type_id","unwrap","vzip","Add","","Alpha","Atom","","Cell","Challenge","Constant","Degree","Double","","Error","ExpExtension","ExtendedWitness","Extensions","FoldingColumnTrait","FoldingCompatibleExpr","FoldingCompatibleExprInner","FoldingExp","IntegratedFoldingExpr","Mul","","Neg","One","Pos","Pow","","Selector","Sign","Square","","Sub","","Term","Two","U","Zero","add","","","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","cmp","default","degree","deref","","","","","","","","deref_mut","","","","","","","","double","drop","","","","","","","","eq","","","","","","equivalent","","","","","","exp","extract_terms","final_expression","flatten_quad_columns","fmt","","","","","","","","","folding_expression","from","","","","","","","","","","","","","hash","","init","","","","","","","","into","","","","","","","","is_witness","map_variable","mul","","","","neg","","partial_cmp","sign","simplify","sub","","to_owned","","","","","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","vzip","","","","","","","","ExtendedInstance","ExtendedWitness","Foldable","Instance","RelaxableInstance","RelaxablePair","RelaxableWitness","RelaxedInstance","RelaxedWitness","Witness","blinder","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","combine","","","","","deref","","","","deref_mut","","","","drop","","","","eq","","equivalent","","","","error_commitment","error_vec","extended","","extended_instance","extended_witness","fmt","","from","","","","get_alphas","","get_blinder","","get_extended_column","get_extended_column_commitment","init","","","","instance","into","","","","is_extended","relax","","","","","","","to_absorb","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","u","vzip","","","","witness","ExtendedWitnessGenerator","Quadraticized","borrow","","borrow_mut","","deref","","deref_mut","","drop","","extended_witness_generator","extra_constraints","from","","init","","into","","original_constraints","quadraticize","try_from","","try_into","","type_id","","vzip","","EmptyStructure","Env","StandardConfig","borrow","","","borrow_mut","","","challenge","clone","clone_into","clone_to_uninit","col","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","fmt","from","","","hash","index","init","","","into","","","new","selector","to_owned","try_from","","","try_into","","","type_id","","","vzip","",""],"q":[[0,"folding"],[123,"folding::checker"],[188,"folding::columns"],[217,"folding::decomposable_folding"],[234,"folding::eval_leaf"],[263,"folding::expressions"],[482,"folding::instance_witness"],[596,"folding::quadraticization"],[626,"folding::standard_config"],[680,"folding::error_term"],[681,"num_traits::identities"],[682,"core::clone"],[683,"ark_ff::fields"],[684,"kimchi::circuits::gate"],[685,"ark_poly::domain::radix2"],[686,"core::fmt"],[687,"poly_commitment::commitment"],[688,"mina_poseidon::sponge"],[689,"core::option"],[690,"alloc::vec"],[691,"core::result"],[692,"core::any"],[693,"ark_poly::evaluations::univariate"],[694,"core::hash"],[695,"alloc::collections::btree::map"],[696,"core::ops::arith"],[697,"core::ops::function"],[698,"alloc::string"],[699,"core::cmp"],[700,"core::iter::traits::iterator"],[701,"alloc::boxed"],[702,"kimchi::circuits::berkeley_columns"],[703,"kimchi::circuits::expr"],[704,"core::marker"],[705,"core::ops::index"],[706,"kimchi::curve"],[707,"core::default"]],"i":"`Cd0A`11```````1j1``02`22h`3AnCj3410342`3434342`4`1034103411034444`1`1411001034411034`10342144304`0021`100034103410341034110341`````E`0EfEd2102Dn033321321321333332133213121213321Eh32432432432432432El000`000000000000000000000000`En000000000000000Fb0`00000000000000000000000000DbGdGf21Ej00`321`10`````32GhGb1543`5454`030054032541GjBd2547631025476310254763102547631020Gn36587421365874217365874213658743377442`18365887421`3655588887421373658742136587421083872423288736587421836587421365874213658742136587421``````````CbHnId2Cn2130213021302130Ih3241324132413241242244413241313241If303254352343524CfIlCl76853687685768576857685876857``InBf10101010111010101`10101010```J`JjK`210211121210210210000021001210210221210210210210","f":"``````````````````````````{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{{{b{{h{}{{f{c}}}}}}ej}g{}{}{ln}}`{{{b{j}}}j}{{{b{{A`{c}}}}}{{A`{c}}}{nAb}}{{b{b{dc}}}Ad{}}0{{bAf}Ad}0{{{b{{h{}{{f{c}}}}}}eAhj}{{b{{Aj{g}}}}}{}{}{ln}}`{{{A`{c}}{A`{c}}c}{{A`{c}}}Ab}`{Al{{b{c}}}{}}000{Al{{b{dc}}}{}}000{AnB`}{AlAd}000{{{b{{A`{c}}}}{b{{A`{c}}}}}BbAb}{{b{b{c}}}Bb{}}0`{AnBd}`{AnBf}{{{b{{A`{c}}}}{b{dBh}}}Bj{BlAb}}{{{b{{An{c}}}}eg{C`{Bn}}{b{di}}}CbCdCfCfCh}{{{b{{An{c}}}}eg{b{di}}}{{Cj{c}}}CdClClCh}{CjCb}{CjCn}{cc{}}000{{{b{{A`{c}}}}Al}{{D`{c}}}Ab}{{{b{{An{c}}}}}AlCd}{{}Al}000`{{}c{}}000{{{b{c}}{C`{{b{e}}}}{C`{{b{g}}}}}{{h{}{{f{c}}}}}{}{}{}}{{{Dd{{Db{c}}}}bB`b}{{Df{{An{c}}{Db{c}}}}}Cd}{c{{A`{c}}}Ab}{{cAl}{{A`{c}}}Ab}{jj}{{{Cj{c}}}{{Df{CbCn}}}Cd}{{{A`{c}}}{{Dd{c}}}Ab}`=={{{b{{h{}{{f{c}}}}}}{b{e}}j}{{b{{Aj{g}}}}}{}{}{ln}}{Anb}`{An}{CjBn}0{CjDf}{bc{}}0{c{{Dh{e}}}{}{}}000{{}{{Dh{c}}}{}}000{bDj}000{{{b{{An{c}}}}CbCbBnBn{b{de}}}CbCdCh}{{}c{}}000{AnDl}```````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Dn}}{b{{Db{c}}}}B`}AdCd}{{{b{Dn}}{Db{c}}B`}DdCd}{{{b{E`}}}E`}{{b{b{dc}}}Ad{}}{{bAf}Ad}{Al{{b{c}}}{}}00{Al{{b{dc}}}{}}00{AlAd}00{{{b{E`}}{b{E`}}}Bb}{{b{b{c}}}Bb{}}0{{{b{E`}}{b{dBh}}}Bj}{cc{}}00{{{b{E`}}{b{dc}}}AdEb}{{}Al}00{EdEf}{Ef}{EdCb}{{}c{}}00{{{b{E`}}}Bb}{{}{{Ef{c}}}Cd}{{CbCn}{{Ed{c}}}Cd}{{{b{Eh}}{Ej{c}}B`}DdCd}{{{b{{Ef{c}}}}{Ej{c}}B`}DdCd}{{{b{{Ed{c}}}}{Ej{c}}B`}DdCd}{bc{}}{c{{Dh{e}}}{}{}}00{{}{{Dh{c}}}{}}00{bDj}00{{}c{}}00={EdCn}````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{El{c}}}}}{{El{c}}}Cd}{{b{b{dc}}}Ad{}}{{bAf}Ad}{Al{{b{c}}}{}}{Al{{b{dc}}}{}}{AlAd}{{{b{{El{c}}}}{b{{El{c}}}}}BbCd}{{b{b{c}}}Bb{}}0{{{b{{El{c}}}}{b{dBh}}}BjCd}{cc{}}{{{b{{El{c}}}}{b{de}}}AdCdEb}{{}Al}{{}c{}}{bc{}}{c{{Dh{e}}}{}{}}{{}{{Dh{c}}}{}}{bDj}{{}c{}}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{Al{{b{c}}}{}}{Al{{b{dc}}}{}}{AlAd}{{{b{{En{c}}}}eg{C`{Bn}}{b{di}}}CbCdCfCfCh}{{{b{{En{c}}}}egD`{b{di}}}{{Cj{c}}}CdClClCh}?{{{b{{En{c}}}}}AlCd}>={{{F`{{Dd{{Db{c}}}}}}{Dd{{Db{c}}}}bB`b}{{Df{{En{c}}{Db{c}}}}}Cd}<;:9````{{{Fb{c}}{Fb{c}}}{{Fb{c}}}{{Ff{}{{Fd{}}}}n}}98{{{b{{Fb{c}}}}}{{Fb{c}}}n}{{b{b{dc}}}Ad{}}{{bAf}Ad}:98{{{b{{Fb{c}}}}{b{dBh}}}BjBl}{{{b{{Fb{c}}}}{b{dBh}}}BjFh}{cc{}}{{}Al}{{}c{}}{{{Fb{c}}eg}{{Fb{c}}}n{{Fj{{b{c}}}{{Fd{c}}}}}{{Fj{{b{dc}}}}}}{{{Fb{c}}c}{{Fb{c}}}{{Fl{}{{Fd{}}}}n}}{{{Fb{c}}{Fb{c}}}{{Fb{c}}}{{Fl{}{{Fd{}}}}n}}{{{Fb{c}}{Fb{c}}}{{Fb{c}}}{{Fn{}{{Fd{}}}}n}}{bc{}}{bG`}{c{{Dh{e}}}{}{}}{{}{{Dh{c}}}{}}{bDj}{{{Fb{c}}}{{Dd{c}}}{nn}}{{}c{}}`````````````````````````````````````{{GbGb}c{}}{{{Db{c}}{Db{c}}}{{Db{c}}}Cd}{{{Gd{c}}{Gd{c}}}{{Gd{c}}}Cd}{b{{b{c}}}{}}0000000{{{b{d}}}{{b{dc}}}{}}0000000{{{b{Gb}}}Gb}{{{b{{Gf{c}}}}}{{Gf{c}}}Cd}{{{b{{Ej{c}}}}}{{Ej{c}}}Cd}{{{b{{Db{c}}}}}{{Db{c}}}Cd}{{{b{{Gd{c}}}}}{{Gd{c}}}Cd}{{{b{Gh}}}Gh}{{{b{{Gj{c}}}}}{{Gj{c}}}Cd}{{{b{{Bd{c}}}}}{{Bd{c}}}Cd}{{b{b{dc}}}Ad{}}0000000{{bAf}Ad}0000000{{{b{Gb}}{b{Gb}}}Gl}{{}{{Bd{c}}}Cd}{{{b{Gn}}}Gb}{Al{{b{c}}}{}}0000000{Al{{b{dc}}}{}}0000000{{{Gd{c}}}{{Gd{c}}}Cd}{AlAd}0000000{{{b{Gb}}{b{Gb}}}Bb}{{{b{{Gf{c}}}}{b{{Gf{c}}}}}BbCd}{{{b{{Ej{c}}}}{b{{Ej{c}}}}}BbCd}{{{b{{Db{c}}}}{b{{Db{c}}}}}BbCd}{{{b{{Gd{c}}}}{b{{Gd{c}}}}}BbCd}{{{b{Gh}}{b{Gh}}}Bb}{{b{b{c}}}Bb{}}00000{GjGd}{{{Gd{c}}}{{Hb{H`}}}Cd}{{{Bd{c}}}{{Db{c}}}Cd}{{{Db{c}}{b{Fj}}}{{Db{c}}}Cd}{{{b{Gb}}{b{dBh}}}Bj}{{{b{{Gf{c}}}}{b{dBh}}}BjCd}{{{b{{Ej{c}}}}{b{dBh}}}BjCd}{{{b{{Db{c}}}}{b{dBh}}}BjCd}0{{{b{{Gd{c}}}}{b{dBh}}}BjCd}{{{b{Gh}}{b{dBh}}}Bj}{{{b{{Gj{c}}}}{b{dBh}}}Bj{BlCd}}{{{b{{Bd{c}}}}{b{dBh}}}BjCd}{{{Dd{{Db{c}}}}}{{Df{{Bd{c}}{Bf{c}}Al}}}Cd}{cc{}}0{{{Hf{cHd}}}{{Ej{e}}}{}Cd}{{{Hh{{Hf{cHd}}e}}}{{Ej{g}}}{}{}{{Cd{}{{Hj{e}}}}}}2{{{Hl{{Hh{{Hl{{Hf{cHd}}}}e}}}}}{{Db{g}}}{}{}{{Cd{}{{Hj{e}}}}}}{{{Hl{{Hf{cHd}}}}}{{Db{g}}}{}{}{{Cd{}{{Hj{e}}}}}}4{{{Hl{{Hh{{Hf{cHd}}e}}}}}{{Db{g}}}{}{}{{Cd{}{{Hj{e}}}}}}5555{{{b{Gb}}{b{dc}}}AdEb}{{{b{{Gd{c}}}}{b{de}}}AdCdEb}{{}Al}0000000{{}c{}}0000000{{{b{Gn}}}Bb}{{{Db{c}}{b{Fj}}}{{Db{c}}}Cd}{{{b{Gb}}{b{Gb}}}c{}}{{{Db{c}}{Db{c}}}{{Db{c}}}Cd}{{{Gd{c}}{Gd{c}}}{{Gd{c}}}Cd}{{{b{{Gj{c}}}}{b{{Gj{c}}}}}eCd{}}{GhGh}{{{Gj{c}}}eCd{}}{{{b{Gb}}{b{Gb}}}{{D`{Gl}}}}{GjGh}{{{Db{c}}}{{Gd{c}}}Cd}76{bc{}}0000000{bG`}{c{{Dh{e}}}{}{}}0000000{{}{{Dh{c}}}{}}0000000{bDj}0000000{{}c{}}0000000``````````{Cb}{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{{{b{{Hn{ce}}}}}{{Hn{ce}}}{nI`}{n{Ib{c}}}}{{{b{{Id{ce}}}}}{{Id{ce}}}{nI`}{n{If{c}}}}{{{b{{Cb{ce}}}}}{{Cb{ce}}}{nI`}{n{If{c}}}}{{{b{{Cn{ce}}}}}{{Cn{ce}}}{nI`}{n{Ib{c}}}}{{b{b{dc}}}Ad{}}000{{bAf}Ad}000{{IhIhc}IhAb}{{{Hn{ce}}{Hn{ce}}}{{Hn{ce}}}I`{{Ib{c}}}}{{{Id{ce}}{Id{ce}}}{{Id{ce}}}I`{{If{c}}}}{{{Cb{ce}}{Cb{ce}}}{{Cb{ce}}}I`{{If{c}}}}{{{Cn{ce}}{Cn{ce}}}{{Cn{ce}}}I`{{Ib{c}}}}{Al{{b{c}}}{}}000{Al{{b{dc}}}{}}000{AlAd}000{{{b{{Id{ce}}}}{b{{Id{ce}}}}}Bb{IjI`}{Ij{If{c}}}}{{{b{{Cb{ce}}}}{b{{Cb{ce}}}}}Bb{IjI`}{Ij{If{c}}}}{{b{b{c}}}Bb{}}000{CbBn}{CnDl}{HnF`}{IdDd}{CbId}{CnHn}{{{b{{Hn{ce}}}}{b{dBh}}}Bj{BlI`}{Bl{Ib{c}}}}{{{b{{Cn{ce}}}}{b{dBh}}}Bj{BlI`}{Bl{Ib{c}}}}{cc{}}000{{{b{If}}}{{b{A`}}}}{{{b{{Id{ce}}}}}{{b{A`}}}I`{{If{c}}}}{{{b{If}}}}{{{b{{Id{ce}}}}}{}I`{{If{c}}}}{{{b{{Cn{ce}}}}{b{Al}}}{{D`{{b{{Dl{B`}}}}}}}I`{{Ib{c}}}}{{{b{{Cb{ce}}}}Al}{{D`{{b{{Bn{c}}}}}}}I`{{If{c}}}}{{}Al}000{Id}{{}c{}}000{{{b{{Hn{ce}}}}}BbI`{{Ib{c}}}}{Cf{{Cb{ce}}}I`{{If{c}}}}{{Il{b{{Dl{B`}}}}}{{Cn{ce}}}I`{{Ib{c}}}}{{Cl{b{{Dl{B`}}}}}{{Df{{Cb{ce}}{Cn{cg}}}}}I`{{If{c}}}{{Ib{c}}}}{{{b{{Dl{B`}}}}}{{Cn{ce}}}{}{}}{{}{{Cb{ce}}}{}{}}{{{Cb{ce}}}{{Cb{ce}}}I`{{If{c}}}}{{{Cn{ce}}{b{{Dl{B`}}}}}{{Cn{ce}}}I`{{Ib{c}}}}{{{b{If}}}{{Df{Dd{Dd{c}}}}}I`}{{{b{{Id{ce}}}}}{{Df{Dd{Dd{c}}}}}I`{{If{c}}}}{{{b{{Cb{ce}}}}}{{Df{Dd{Dd{c}}}}}I`{{If{c}}}}{bc{}}000{c{{Dh{e}}}{}{}}000{{}{{Dh{c}}}{}}000{bDj}000{Cb}{{}c{}}000{Hn}``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{Al{{b{c}}}{}}0{Al{{b{dc}}}{}}0{AlAd}0{InBf}{InDd}{cc{}}0{{}Al}0{{}c{}}03{{{Dd{{Gd{c}}}}}{{Df{{In{c}}Al}}}Cd}{c{{Dh{e}}}{}{}}0{{}{{Dh{c}}}{}}0{bDj}0??```===<<<{{{b{{J`{cegikmo}}}}gj}{}I`{GnJbJd}{}Jf{n{Jh{e}{{Fd{Aj}}}}}{{If{c}}{Jh{g}{{Fd{}}}}n}{{Ib{c}}n{Jh{e}{{Fd{Aj}}}}{Jh{i}{{Fd{Aj}}}}}}{{{b{{Jj{c}}}}}{{Jj{c}}}{nJl}}{{b{b{dc}}}Ad{}}{{bAf}Ad}{{{b{{J`{cegikmo}}}}eAhj}{{b{Aj}}}I`{GnJbJd}{}Jf{n{Jh{e}{{Fd{Aj}}}}}{{If{c}}{Jh{g}{{Fd{}}}}n}{{Ib{c}}n{Jh{e}{{Fd{Aj}}}}{Jh{i}{{Fd{Aj}}}}}}{{}{{Jj{c}}}{JnJl}}{Al{{b{c}}}{}}00{Al{{b{dc}}}{}}00{AlAd}00{{{b{{K`{cegikmoAa}}}}{b{{K`{cegikmoAa}}}}}Bb{}{}{}{}{}{}{}{}}{{b{b{c}}}Bb{}}0{{{b{{K`{cegikmoAa}}}}{b{dBh}}}Bj{}{}{}{}{}{}{}{}}{cc{}}00{{{b{{K`{cegikmoAa}}}}{b{dAc}}}Ad{}{}{}{}{}{}{}{}Eb}{{{b{{Jj{c}}}}e}{{b{g}}}Jl{}{}}{{}Al}00{{}c{}}00{{{b{c}}{C`{{b{i}}}}{C`{{b{o}}}}}{{J`{ekgmAaio}}}{}I`{}{{If{e}}{Jh{g}{{Fd{}}}}n}{GnJbJd}Jf{{Ib{e}}n{Jh{k}{{Fd{Aj}}}}{Jh{m}{{Fd{Aj}}}}}{n{Jh{k}{{Fd{Aj}}}}}}{{{b{{J`{cegikmo}}}}{b{i}}j}{{b{Aj}}}I`{GnJbJd}{}Jf{n{Jh{e}{{Fd{Aj}}}}}{{If{c}}{Jh{g}{{Fd{}}}}n}{{Ib{c}}n{Jh{e}{{Fd{Aj}}}}{Jh{i}{{Fd{Aj}}}}}}{bc{}}{c{{Dh{e}}}{}{}}00{{}{{Dh{c}}}{}}00{bDj}00{{}c{}}00","D":"ABl","p":[[1,"reference",null,null,1],[0,"mut"],[17,"Structure"],[10,"FoldingEnv",0],[6,"Side",0,680],[10,"Zero",681],[10,"Clone",682],[6,"Alphas",0],[10,"Field",683],[1,"unit"],[1,"u8"],[6,"CurrOrNext",684],[1,"slice"],[1,"usize"],[5,"FoldingScheme",0],[5,"Radix2EvaluationDomain",685],[1,"bool"],[5,"IntegratedFoldingExpr",263],[5,"ExtendedWitnessGenerator",596],[5,"Formatter",686],[8,"Result",686],[10,"Debug",686],[5,"PolyComm",687],[1,"array"],[5,"RelaxedInstance",482],[10,"FoldingConfig",0],[10,"RelaxableInstance",482],[10,"FqSponge",688],[5,"FoldingOutput",0],[10,"RelaxablePair",482],[5,"RelaxedWitness",482],[6,"Option",689,null,1],[6,"FoldingCompatibleExpr",263],[5,"Vec",690],[1,"tuple",null,null,1],[6,"Result",691,null,1],[5,"TypeId",692],[5,"Evaluations",693],[10,"Checker",123],[6,"Column",123],[10,"Hasher",694],[5,"ExtendedProvider",123],[5,"Provider",123],[10,"Provide",123],[6,"FoldingCompatibleExprInner",263],[6,"ExtendedFoldingColumn",188],[5,"DecomposableFoldingScheme",217],[5,"BTreeMap",695],[6,"EvalLeaf",234],[17,"Output"],[10,"Add",696],[10,"Display",686],[10,"Fn",697],[10,"Mul",696],[10,"Sub",696],[5,"String",698],[6,"Degree",263],[6,"FoldingExp",263],[6,"ExpExtension",263],[6,"Sign",263],[5,"Term",263],[6,"Ordering",699],[10,"FoldingColumnTrait",263],[10,"Iterator",700],[5,"Box",701,null,1],[6,"BerkeleyChallengeTerm",702],[6,"ConstantExprInner",703],[6,"ExprInner",703],[17,"Column"],[6,"Operations",703],[5,"ExtendedWitness",482],[10,"CommitmentCurve",687],[10,"Witness",482],[5,"ExtendedInstance",482],[10,"Instance",482],[10,"Foldable",482],[10,"PartialEq",699],[10,"RelaxableWitness",482],[5,"Quadraticized",596],[5,"Env",626],[10,"Eq",699],[10,"Hash",694],[10,"Copy",704],[10,"Index",705],[5,"EmptyStructure",626],[10,"KimchiCurve",706],[10,"Default",707],[5,"StandardConfig",626]],"r":[[6,263],[7,263],[12,482],[14,680],[16,482],[17,482],[18,680],[20,680],[24,482],[28,680],[32,680],[36,680],[38,680],[40,680],[48,680],[52,680],[57,680],[73,680],[79,680],[84,680],[90,680],[103,680],[107,680],[111,680],[115,680],[120,680]],"b":[[247,"impl-Debug-for-EvalLeaf%3C\'a,+F%3E"],[248,"impl-Display-for-EvalLeaf%3C\'a,+F%3E"],[253,"impl-Mul%3CF%3E-for-EvalLeaf%3C\'a,+F%3E"],[254,"impl-Mul-for-EvalLeaf%3C\'a,+F%3E"],[390,"impl-Display-for-FoldingCompatibleExpr%3CC%3E"],[391,"impl-Debug-for-FoldingCompatibleExpr%3CC%3E"],[399,"impl-From%3CConstantExprInner%3CF,+BerkeleyChallengeTerm%3E%3E-for-FoldingCompatibleExprInner%3CConfig%3E"],[400,"impl-From%3CExprInner%3CConstantExprInner%3CF,+BerkeleyChallengeTerm%3E,+Col%3E%3E-for-FoldingCompatibleExprInner%3CConfig%3E"],[402,"impl-From%3COperations%3CExprInner%3COperations%3CConstantExprInner%3CF,+BerkeleyChallengeTerm%3E%3E,+Col%3E%3E%3E-for-FoldingCompatibleExpr%3CConfig%3E"],[403,"impl-From%3COperations%3CConstantExprInner%3CF,+BerkeleyChallengeTerm%3E%3E%3E-for-FoldingCompatibleExpr%3CConfig%3E"],[405,"impl-From%3COperations%3CExprInner%3CConstantExprInner%3CF,+BerkeleyChallengeTerm%3E,+Col%3E%3E%3E-for-FoldingCompatibleExpr%3CConfig%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABICPgADAAEABgADAAwAAQAPAAUAFwAAABkAAAAbAAcAJQAFAC0AAAAvABEAQgABAEwAAABOAAMAWAAFAGIAAABkAAAAaAANAHcAIwCeAAYAqAAUAMUACwDSAAEA1QAKAOQAAADnAAUA7gALAPsAAAD9AAwACwEEABEBAQAXAQAAHAEGACUBAwAqAQAALAEtAFsBJgCEAQgAkAEBAJMBAQCWAQAAmwEJAK0BAACvATMA5QEDAOsBAQDuARMAAwIBAAYCEgAfAgEAJgIAACsCAwA1AgIAOgIBAD8CDwBQAgMAVQINAGUCAQBpAgAAawIHAHYCGACSAgQAmgIOAA==","P":[[26,"T"],[34,"FoldingEnv::Structure,Chal,F"],[36,""],[37,"F"],[38,"T"],[40,""],[42,"FoldingEnv::Structure,Col,F"],[44,"F"],[46,"T"],[54,""],[59,"F"],[60,"K"],[63,""],[66,"F"],[67,"CF,A,B,Sponge"],[69,""],[71,"T"],[75,"F"],[76,"CF"],[77,""],[82,"U"],[86,"FoldingEnv::Structure,I,W"],[87,"CF"],[88,"F"],[90,""],[91,"C"],[92,"F"],[94,""],[96,"FoldingEnv::Structure,Selector,F"],[97,""],[103,"T"],[105,"U,T"],[109,"U"],[113,""],[117,"CF,Sponge"],[118,"V"],[122,""],[130,"T"],[136,"C"],[138,""],[139,"T"],[140,""],[141,"T"],[147,""],[151,"K"],[153,""],[154,"T"],[157,"__H"],[158,""],[164,"U"],[167,""],[168,"C"],[173,"T"],[174,"U,T"],[177,"U"],[180,""],[183,"V"],[186,""],[196,"T"],[198,"C"],[199,"T"],[200,""],[201,"T"],[203,""],[204,"C"],[205,"K"],[207,"C"],[208,"T"],[209,"C,__HC"],[210,""],[211,"U"],[212,"T"],[213,"U,T"],[214,"U"],[215,""],[216,"V"],[218,"T"],[222,""],[223,"CF,A,B,Sponge"],[225,"T"],[226,"CF"],[227,""],[228,"U"],[229,"CF"],[230,"U,T"],[231,"U"],[232,""],[233,"V"],[238,"F"],[239,"T"],[241,"F"],[242,"T"],[243,""],[244,"T"],[246,""],[247,"F"],[249,"T"],[250,""],[251,"U"],[252,"F,M,I"],[253,"F"],[256,"T"],[257,""],[258,"U,T"],[259,"U"],[260,""],[261,"F"],[262,"V"],[300,"Add::Output"],[301,"C"],[303,"T"],[319,""],[320,"C"],[324,""],[325,"C"],[327,"T"],[335,""],[344,"C"],[345,""],[346,"T"],[362,"C"],[363,""],[372,"C"],[376,""],[377,"K"],[383,""],[384,"C"],[387,""],[388,"C"],[393,""],[394,"C"],[397,"T"],[399,"F,Config"],[400,"F,Col,Config"],[401,"T"],[402,"F,Col,Config"],[404,"T"],[405,"F,Col,Config"],[406,"T"],[410,"__H"],[411,"C,__HC"],[412,""],[420,"U"],[428,""],[429,"C"],[430,"Mul::Output"],[431,"C"],[433,"C,Mul::Output"],[434,""],[435,"C,Neg::Output"],[436,""],[438,"C"],[441,"T"],[449,""],[450,"U,T"],[458,"U"],[466,""],[474,"V"],[492,""],[493,"T"],[501,"G,W"],[502,"G,I"],[504,"G,W"],[505,"T"],[509,""],[513,"F"],[514,"G,W"],[515,"G,I"],[517,"G,W"],[518,"T"],[526,""],[530,"G,I"],[532,"K"],[536,""],[542,"G,W"],[544,"T"],[548,""],[549,"G,I"],[550,""],[551,"G,I"],[552,"G,W"],[553,"G,I"],[554,""],[559,"U"],[563,"G,W"],[564,"G,I"],[565,"G,W"],[566,"G,I,W"],[567,"G,W"],[568,"G,I"],[570,"G,W"],[571,"G"],[572,"G,I"],[574,"T"],[578,"U,T"],[582,"U"],[586,""],[591,"V"],[595,""],[598,"T"],[606,""],[610,"T"],[612,""],[614,"U"],[616,""],[617,"C"],[618,"U,T"],[620,"U"],[622,""],[624,"V"],[629,"T"],[635,"G,Col,Chall,Sel,Str,I,W"],[636,"G"],[637,"T"],[638,""],[639,"G,Col,Chall,Sel,Str,I,W"],[640,"G"],[641,"T"],[647,""],[650,"G,Col,Chall,I,W,Srs,Sel,Str"],[651,"K"],[653,"G,Col,Chall,I,W,Srs,Sel,Str"],[654,"T"],[657,"G,Col,Chall,I,W,Srs,Sel,Str,__HGColChallIWSrsSelStr"],[658,"G,Col,Index::Output"],[659,""],[662,"U"],[665,"FoldingEnv::Structure,G,Chall,I,Col,Sel,W,Str"],[666,"G,Col,Chall,Sel,Str,I,W"],[667,"T"],[668,"U,T"],[671,"U"],[674,""],[677,"V"]]}],["groupmap",{"t":"FKMNNNNNNNNNNHNNMNMNNNNNN","n":["BWParameters","GroupMap","batch_to_group_x","","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","get_y","init","into","setup","","to_group","","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"groupmap"],[25,"alloc::vec"],[26,"ark_ec::models::short_weierstrass"],[27,"core::clone"],[28,"core::option"],[29,"core::result"],[30,"core::any"]],"i":"``bj000000000`00101000000","f":"``{{{d{b}}{f{c}}}{{f{{h{c}}}}}{}}{{{d{{j{c}}}}f}{{f{h}}}l}{d{{d{c}}}{}}{{{d{n}}}{{d{nc}}}{}}{{{d{{j{c}}}}}{{j{c}}}{A`l}}{{d{d{nc}}}Ab{}}{{dAd}Ab}{Af{{d{c}}}{}}{Af{{d{nc}}}{}}{AfAb}{cc{}}{{}Ah}{{}Af}{{}c{}}{{}b}{{}{{j{c}}}l}{{{d{b}}c}{{Aj{cc}}}{}}{{{d{{j{c}}}}}Ajl}{dc{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{dAn}{{}c{}}","D":"h","p":[[10,"GroupMap",0],[1,"reference",null,null,1],[5,"Vec",25],[1,"array"],[5,"BWParameters",0],[10,"SWCurveConfig",26],[0,"mut"],[10,"Clone",27],[1,"unit"],[1,"u8"],[1,"usize"],[6,"Option",28,null,1],[1,"tuple",null,null,1],[6,"Result",29,null,1],[5,"TypeId",30]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABUAAwABAAsADwAAABEACAA=","P":[[2,"F"],[3,"G"],[4,"T"],[6,"G"],[7,"T"],[8,""],[9,"T"],[11,""],[12,"T"],[13,""],[15,"U"],[16,""],[17,"G"],[18,"F"],[19,"G"],[20,"T"],[21,"U,T"],[22,"U"],[23,""],[24,"V"]]}],["internal_tracing",{"t":"PPGPPPPPPGNNNNNNNNNNNNNNNQNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQHNHNNNNHNNNNNNNN","n":["Array","Bool","JsonValue","Microseconds","Null","Number","Object","String","SystemTime","TimeInput","as_array","as_array_mut","as_bool","as_f64","as_i64","as_null","as_number","as_object","as_object_mut","as_str","as_u64","borrow","","borrow_mut","","checkpoint","clone","clone_into","clone_to_uninit","decl_traces","default","deserialize","deserialize_any","","deserialize_bool","","deserialize_byte_buf","","deserialize_bytes","","deserialize_char","","deserialize_enum","","deserialize_f32","","deserialize_f64","","deserialize_i128","","deserialize_i16","","deserialize_i32","","deserialize_i64","","deserialize_i8","","deserialize_identifier","","deserialize_ignored_any","","deserialize_map","","deserialize_newtype_struct","","deserialize_option","","deserialize_seq","","deserialize_str","","deserialize_string","","deserialize_struct","","deserialize_tuple","","deserialize_tuple_struct","","deserialize_u128","","deserialize_u16","","deserialize_u32","","deserialize_u64","","deserialize_u8","","deserialize_unit","","deserialize_unit_struct","","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt","","from","","","","","","","","","","","","","","","","","","","","","","","","","","from_iter","","from_str","get","get_mut","index","index_mut","into","","into_deserializer","","is_array","is_boolean","is_f64","is_i64","is_null","is_number","is_object","is_string","is_u64","json","json_to_writer","micros","now_micros","pointer","pointer_mut","serialize","take","time_to_micros","to_owned","to_string","try_from","","try_into","","type_id",""],"q":[[0,"internal_tracing"],[202,"alloc::vec"],[203,"core::option"],[204,"serde_json::number"],[205,"alloc::string"],[206,"serde_json::map"],[207,"core::result"],[208,"serde::de"],[209,"serde_json::error"],[210,"core::fmt"],[211,"std::time"],[212,"core::convert"],[213,"alloc::borrow"],[214,"core::clone"],[215,"core::iter::traits::collect"],[216,"serde_json::value::index"],[217,"std::io"],[218,"serde::ser"],[219,"core::marker"],[220,"core::any"],[221,"serde_json"]],"i":"b0`Cn11110`111111111110101`111`11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110001111111111111111111111111111110111111111111``0`1111`11010101","f":"``````````{{{d{b}}}{{h{{d{{f{b}}}}}}}}{{{d{jb}}}{{h{{d{j{f{b}}}}}}}}{{{d{b}}}{{h{l}}}}{{{d{b}}}{{h{n}}}}{{{d{b}}}{{h{A`}}}}{{{d{b}}}{{h{Ab}}}}{{{d{b}}}{{h{{d{Ad}}}}}}{{{d{b}}}{{h{{d{{Ah{Afb}}}}}}}}{{{d{jb}}}{{h{{d{j{Ah{Afb}}}}}}}}{{{d{b}}}{{h{{d{Aj}}}}}}{{{d{b}}}{{h{Al}}}}{d{{d{c}}}{}}0{{{d{j}}}{{d{jc}}}{}}0`{{{d{b}}}b}{{d{d{jc}}}Ab{}}{{dAn}Ab}`{{}b}{c{{B`{b}}}Bb}{{bc}{{B`{Bd}}}Bf}{{{d{b}}c}{{B`{Bd}}}Bf}10010110{{{d{b}}{d{Aj}}{d{{Bh{{d{Aj}}}}}}c}{{B`{Bd}}}Bf}{{b{d{Aj}}{d{{Bh{{d{Aj}}}}}}c}{{B`{Bd}}}Bf}32322323323232322323{{{d{b}}{d{Aj}}c}{{B`{Bd}}}Bf}{{b{d{Aj}}c}{{B`{Bd}}}Bf}4554455423{{bBjc}{{B`{Bd}}}Bf}{{{d{b}}Bjc}{{B`{Bd}}}Bf}{{b{d{Aj}}Bjc}{{B`{Bd}}}Bf}{{{d{b}}{d{Aj}}Bjc}{{B`{Bd}}}Bf}89988998988945{{{d{{d{jb}}}}{d{Bj}}}l}{{{d{b}}{d{n}}}l}{{{d{{d{b}}}}{d{l}}}l}{{{d{{d{jb}}}}{d{l}}}l}{{{d{{d{jb}}}}{d{n}}}l}{{{d{b}}{d{b}}}l}{{{d{b}}{d{Aj}}}l}{{{d{b}}{d{{d{Aj}}}}}l}{{{d{b}}{d{Af}}}l}{{{d{b}}{d{Bl}}}l}{{{d{{d{b}}}}{d{Bl}}}l}{{{d{{d{jb}}}}{d{Bl}}}l}{{{d{b}}{d{Bn}}}l}{{{d{{d{b}}}}{d{Bn}}}l}{{{d{{d{jb}}}}{d{Bn}}}l}{{{d{b}}{d{C`}}}l}{{{d{{d{b}}}}{d{C`}}}l}{{{d{{d{jb}}}}{d{C`}}}l}{{{d{b}}{d{A`}}}l}{{{d{{d{b}}}}{d{A`}}}l}{{{d{{d{jb}}}}{d{A`}}}l}{{{d{b}}{d{l}}}l}{{{d{{d{b}}}}{d{Cb}}}l}{{{d{{d{jb}}}}{d{Cb}}}l}{{{d{b}}{d{An}}}l}{{{d{{d{b}}}}{d{An}}}l}{{{d{{d{jb}}}}{d{An}}}l}{{{d{b}}{d{Cd}}}l}{{{d{{d{b}}}}{d{Cd}}}l}{{{d{{d{jb}}}}{d{Cd}}}l}{{{d{b}}{d{Cf}}}l}{{{d{{d{b}}}}{d{Cf}}}l}{{{d{{d{jb}}}}{d{Cf}}}l}{{{d{b}}{d{Al}}}l}{{{d{{d{b}}}}{d{Al}}}l}{{{d{{d{jb}}}}{d{Al}}}l}{{{d{b}}{d{Bj}}}l}{{{d{{d{b}}}}{d{Bj}}}l}{{{d{{d{b}}}}{d{n}}}l}{{{d{b}}{d{Ch}}}l}{{{d{{d{b}}}}{d{Ch}}}l}{{{d{{d{jb}}}}{d{Ch}}}l}{{{d{b}}{d{Cb}}}l}{{{d{b}}{d{jCj}}}{{B`{AbCl}}}}0{AlCn}{cc{}}{D`Cn}1{{{h{c}}}b{{Db{b}}}}{Bnb}{C`b}{A`b}{Cbb}{Anb}{Cdb}{Cfb}{Alb}{Bjb}{Chb}{nb}{lb}{Afb}{{{d{Aj}}}b}{{{Dd{Aj}}}b}{Adb}{{{Ah{Afb}}}b}{{{f{c}}}b{{Db{b}}}}{{{d{{Bh{c}}}}}b{Df{Db{b}}}}{Abb}{Blb}{eb{{Db{b}}}{{Dj{}{{Dh{c}}}}}}{gb{{Db{Af}}}{{Db{b}}}{{Dj{}{{Dh{{Dl{ce}}}}}}}}{{{d{Aj}}}{{B`{bBd}}}}{{{d{b}}c}{{h{{d{b}}}}}Dn}{{{d{jb}}c}{{h{{d{jb}}}}}Dn}{{{d{b}}c}{{d{b}}}Dn}{{{d{jb}}c}{{d{jb}}}Dn}{{}c{}}0{b}{{{d{b}}}}{{{d{b}}}l}00000000`{{c{d{e}}}{{B`{AbBd}}}E`{EbEd}}{CnAl}{{}Al}{{{d{b}}{d{Aj}}}{{h{{d{b}}}}}}{{{d{jb}}{d{Aj}}}{{h{{d{jb}}}}}}{{{d{b}}c}B`Ef}{{{d{jb}}}b}{D`Al}{dc{}}{dAf}{c{{B`{e}}}{}{}}0{{}{{B`{c}}}{}}0{dEh}0","D":"G`","p":[[6,"JsonValue",0],[1,"reference",null,null,1],[5,"Vec",202],[6,"Option",203,null,1],[0,"mut"],[1,"bool"],[1,"f64"],[1,"i64"],[1,"unit"],[5,"Number",204],[5,"String",205],[5,"Map",206],[1,"str"],[1,"u64"],[1,"u8"],[6,"Result",207,null,1],[10,"Deserializer",208],[5,"Error",209],[10,"Visitor",208],[1,"slice"],[1,"usize"],[1,"i8"],[1,"i16"],[1,"i32"],[1,"isize"],[1,"u16"],[1,"u32"],[1,"f32"],[5,"Formatter",210],[5,"Error",210],[6,"TimeInput",0],[5,"SystemTime",211],[10,"Into",212,null,1],[6,"Cow",213],[10,"Clone",214],[17,"Item"],[10,"IntoIterator",215],[1,"tuple",null,null,1],[10,"Index",216],[10,"Write",217],[10,"Serialize",218],[10,"Sized",219],[10,"Serializer",218],[5,"TypeId",220]],"r":[[185,221]],"b":[[32,"impl-Deserializer%3C\'de%3E-for-Value"],[33,"impl-Deserializer%3C\'de%3E-for-%26Value"],[34,"impl-Deserializer%3C\'de%3E-for-Value"],[35,"impl-Deserializer%3C\'de%3E-for-%26Value"],[36,"impl-Deserializer%3C\'de%3E-for-%26Value"],[37,"impl-Deserializer%3C\'de%3E-for-Value"],[38,"impl-Deserializer%3C\'de%3E-for-%26Value"],[39,"impl-Deserializer%3C\'de%3E-for-Value"],[40,"impl-Deserializer%3C\'de%3E-for-Value"],[41,"impl-Deserializer%3C\'de%3E-for-%26Value"],[42,"impl-Deserializer%3C\'de%3E-for-%26Value"],[43,"impl-Deserializer%3C\'de%3E-for-Value"],[44,"impl-Deserializer%3C\'de%3E-for-Value"],[45,"impl-Deserializer%3C\'de%3E-for-%26Value"],[46,"impl-Deserializer%3C\'de%3E-for-Value"],[47,"impl-Deserializer%3C\'de%3E-for-%26Value"],[48,"impl-Deserializer%3C\'de%3E-for-%26Value"],[49,"impl-Deserializer%3C\'de%3E-for-Value"],[50,"impl-Deserializer%3C\'de%3E-for-%26Value"],[51,"impl-Deserializer%3C\'de%3E-for-Value"],[52,"impl-Deserializer%3C\'de%3E-for-Value"],[53,"impl-Deserializer%3C\'de%3E-for-%26Value"],[54,"impl-Deserializer%3C\'de%3E-for-Value"],[55,"impl-Deserializer%3C\'de%3E-for-%26Value"],[56,"impl-Deserializer%3C\'de%3E-for-Value"],[57,"impl-Deserializer%3C\'de%3E-for-%26Value"],[58,"impl-Deserializer%3C\'de%3E-for-Value"],[59,"impl-Deserializer%3C\'de%3E-for-%26Value"],[60,"impl-Deserializer%3C\'de%3E-for-%26Value"],[61,"impl-Deserializer%3C\'de%3E-for-Value"],[62,"impl-Deserializer%3C\'de%3E-for-%26Value"],[63,"impl-Deserializer%3C\'de%3E-for-Value"],[64,"impl-Deserializer%3C\'de%3E-for-%26Value"],[65,"impl-Deserializer%3C\'de%3E-for-Value"],[66,"impl-Deserializer%3C\'de%3E-for-%26Value"],[67,"impl-Deserializer%3C\'de%3E-for-Value"],[68,"impl-Deserializer%3C\'de%3E-for-Value"],[69,"impl-Deserializer%3C\'de%3E-for-%26Value"],[70,"impl-Deserializer%3C\'de%3E-for-%26Value"],[71,"impl-Deserializer%3C\'de%3E-for-Value"],[72,"impl-Deserializer%3C\'de%3E-for-Value"],[73,"impl-Deserializer%3C\'de%3E-for-%26Value"],[74,"impl-Deserializer%3C\'de%3E-for-Value"],[75,"impl-Deserializer%3C\'de%3E-for-%26Value"],[76,"impl-Deserializer%3C\'de%3E-for-Value"],[77,"impl-Deserializer%3C\'de%3E-for-%26Value"],[78,"impl-Deserializer%3C\'de%3E-for-Value"],[79,"impl-Deserializer%3C\'de%3E-for-%26Value"],[80,"impl-Deserializer%3C\'de%3E-for-%26Value"],[81,"impl-Deserializer%3C\'de%3E-for-Value"],[82,"impl-Deserializer%3C\'de%3E-for-Value"],[83,"impl-Deserializer%3C\'de%3E-for-%26Value"],[84,"impl-Deserializer%3C\'de%3E-for-%26Value"],[85,"impl-Deserializer%3C\'de%3E-for-Value"],[86,"impl-Deserializer%3C\'de%3E-for-Value"],[87,"impl-Deserializer%3C\'de%3E-for-%26Value"],[88,"impl-Deserializer%3C\'de%3E-for-Value"],[89,"impl-Deserializer%3C\'de%3E-for-%26Value"],[90,"impl-Deserializer%3C\'de%3E-for-%26Value"],[91,"impl-Deserializer%3C\'de%3E-for-Value"],[92,"impl-Deserializer%3C\'de%3E-for-Value"],[93,"impl-Deserializer%3C\'de%3E-for-%26Value"],[94,"impl-PartialEq%3Cusize%3E-for-%26mut+Value"],[95,"impl-PartialEq%3Cf64%3E-for-Value"],[96,"impl-PartialEq%3Cbool%3E-for-%26Value"],[97,"impl-PartialEq%3Cbool%3E-for-%26mut+Value"],[98,"impl-PartialEq%3Cf64%3E-for-%26mut+Value"],[99,"impl-PartialEq-for-Value"],[100,"impl-PartialEq%3Cstr%3E-for-Value"],[101,"impl-PartialEq%3C%26str%3E-for-Value"],[102,"impl-PartialEq%3CString%3E-for-Value"],[103,"impl-PartialEq%3Ci8%3E-for-Value"],[104,"impl-PartialEq%3Ci8%3E-for-%26Value"],[105,"impl-PartialEq%3Ci8%3E-for-%26mut+Value"],[106,"impl-PartialEq%3Ci16%3E-for-Value"],[107,"impl-PartialEq%3Ci16%3E-for-%26Value"],[108,"impl-PartialEq%3Ci16%3E-for-%26mut+Value"],[109,"impl-PartialEq%3Ci32%3E-for-Value"],[110,"impl-PartialEq%3Ci32%3E-for-%26Value"],[111,"impl-PartialEq%3Ci32%3E-for-%26mut+Value"],[112,"impl-PartialEq%3Ci64%3E-for-Value"],[113,"impl-PartialEq%3Ci64%3E-for-%26Value"],[114,"impl-PartialEq%3Ci64%3E-for-%26mut+Value"],[115,"impl-PartialEq%3Cbool%3E-for-Value"],[116,"impl-PartialEq%3Cisize%3E-for-%26Value"],[117,"impl-PartialEq%3Cisize%3E-for-%26mut+Value"],[118,"impl-PartialEq%3Cu8%3E-for-Value"],[119,"impl-PartialEq%3Cu8%3E-for-%26Value"],[120,"impl-PartialEq%3Cu8%3E-for-%26mut+Value"],[121,"impl-PartialEq%3Cu16%3E-for-Value"],[122,"impl-PartialEq%3Cu16%3E-for-%26Value"],[123,"impl-PartialEq%3Cu16%3E-for-%26mut+Value"],[124,"impl-PartialEq%3Cu32%3E-for-Value"],[125,"impl-PartialEq%3Cu32%3E-for-%26Value"],[126,"impl-PartialEq%3Cu32%3E-for-%26mut+Value"],[127,"impl-PartialEq%3Cu64%3E-for-Value"],[128,"impl-PartialEq%3Cu64%3E-for-%26Value"],[129,"impl-PartialEq%3Cu64%3E-for-%26mut+Value"],[130,"impl-PartialEq%3Cusize%3E-for-Value"],[131,"impl-PartialEq%3Cusize%3E-for-%26Value"],[132,"impl-PartialEq%3Cf64%3E-for-%26Value"],[133,"impl-PartialEq%3Cf32%3E-for-Value"],[134,"impl-PartialEq%3Cf32%3E-for-%26Value"],[135,"impl-PartialEq%3Cf32%3E-for-%26mut+Value"],[136,"impl-PartialEq%3Cisize%3E-for-Value"],[137,"impl-Debug-for-Value"],[138,"impl-Display-for-Value"],[139,"impl-From%3Cu64%3E-for-TimeInput"],[141,"impl-From%3CSystemTime%3E-for-TimeInput"],[143,"impl-From%3COption%3CT%3E%3E-for-Value"],[144,"impl-From%3Ci16%3E-for-Value"],[145,"impl-From%3Ci32%3E-for-Value"],[146,"impl-From%3Ci64%3E-for-Value"],[147,"impl-From%3Cisize%3E-for-Value"],[148,"impl-From%3Cu8%3E-for-Value"],[149,"impl-From%3Cu16%3E-for-Value"],[150,"impl-From%3Cu32%3E-for-Value"],[151,"impl-From%3Cu64%3E-for-Value"],[152,"impl-From%3Cusize%3E-for-Value"],[153,"impl-From%3Cf32%3E-for-Value"],[154,"impl-From%3Cf64%3E-for-Value"],[155,"impl-From%3Cbool%3E-for-Value"],[156,"impl-From%3CString%3E-for-Value"],[157,"impl-From%3C%26str%3E-for-Value"],[158,"impl-From%3CCow%3C\'a,+str%3E%3E-for-Value"],[159,"impl-From%3CNumber%3E-for-Value"],[160,"impl-From%3CMap%3CString,+Value%3E%3E-for-Value"],[161,"impl-From%3CVec%3CT%3E%3E-for-Value"],[162,"impl-From%3C%26%5BT%5D%3E-for-Value"],[163,"impl-From%3C()%3E-for-Value"],[164,"impl-From%3Ci8%3E-for-Value"],[165,"impl-FromIterator%3CT%3E-for-Value"],[166,"impl-FromIterator%3C(K,+V)%3E-for-Value"],[174,"impl-IntoDeserializer%3C\'de,+Error%3E-for-Value"],[175,"impl-IntoDeserializer%3C\'de,+Error%3E-for-%26Value"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJIADwAAAAAABAAAAAkAAQAWAAMAGwACAB8AawCMAAAAjgAAAJAACQClAAAAqAAAAK8AAQC8AAEAwAAAAMIACAA=","P":[[21,"T"],[26,""],[27,"T"],[28,""],[31,"D"],[32,"V"],[94,""],[140,"T"],[141,""],[142,"T"],[144,""],[161,"T"],[163,""],[165,"T,I"],[166,"K,V,I"],[167,""],[168,"I"],[172,"U"],[174,""],[186,"W,T"],[187,""],[191,"S"],[192,""],[194,"T"],[195,""],[196,"U,T"],[198,"U"],[200,""]]}],["ivc",{"t":"CCCCCCCCCFFIOONNNNOONNNNNNNNNOONNOONNNNNNNNNNNNNNNOONNSSSSSCCCCCPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGFFSSHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNHHHHHHHHHHFNNHNNNNNNHHOOOOHHHHHHNNNNHHFGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPKPPGFFIFOONNNNNNNNONNNNNNNNNNNNNNONNNNNNNNNNNNMMNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNOOCCPGPPNNNNNNNNNNNNNNNNNNNNNNNKHMMHCCPGPPNNNNNNNNNNNNNNNNNNNNNNNKHMMHCCCIPPSSSSSSSPFFPSNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNPPPGPNNNNNNNNNNNNNNNNNNNNNNNKHMMHFNNNNNNNNNNNHNNNNNPPIIIPIFFFGONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNONNNNNNNNOOOHONNNNNNNNNNNNNNNNNONNNNOOIIIIH","n":["expr_eval","ivc","plonkish_lang","poseidon_55_0_7_3_2","poseidon_55_0_7_3_7","poseidon_8_56_5_3_2","poseidon_params_55_0_7_3","prover","verifier","GenericEvalEnv","GenericVecStructure","SimpleEvalEnv","alphas","","borrow","","borrow_mut","","challenges","","clone","clone_into","clone_to_uninit","deref","","deref_mut","","drop","","error_vec","","eval_naive_fcompat","eval_naive_fexpr","ext_witness","","from","","index","init","","into","","process_extended_folding_column","to_owned","try_from","","try_into","","type_id","","u","","vzip","","LIMB_BITSIZE_XLARGE","N_ADDITIONAL_WIT_COL_QUAD","N_ALPHAS","N_CONSTRAINTS","N_LIMBS_XLARGE","columns","constraints","helpers","interpreter","lookups","Block1Input","Block1InputRepacked150","Block1InputRepacked75","Block2Hash","Block3ConstPhi","Block3ConstR","Block3PhiPow","Block3PhiPowLimbs","Block3PhiPowR","Block3PhiPowR2","Block3PhiPowR2Limbs","Block3PhiPowR3","Block3PhiPowR3Limbs","Block3PhiPowRLimbs","Block4Coeff","Block4ECAddInter","Block4Input1","Block4Input2","Block4Input2AccessTime","Block4OutputAccessTime","Block4OutputRaw","Block4OutputRepacked","Block5ChalLeft","Block5ChalOutput","Block5ChalRight","Block5ConstHr","Block5ConstR","Block6ConstR","Block6ULeft","Block6UOutput","BlockSel","FoldIteration","IVCColumn","IVCFECLens","IVCHashLens","N_BLOCKS","N_FSEL_IVC","block_height","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","cmp","deref","","","deref_mut","","","drop","","","eq","equivalent","","fmt","from","","","init","","","into","","","partial_cmp","re_get","","to_column","to_owned","total_height","traverse","","try_from","","","try_into","","","type_id","","","vzip","","","constrain_challenges","constrain_ecadds","constrain_inputs","constrain_ivc","constrain_scalars","constrain_selectors","constrain_u","combine_large_to_full_field","combine_large_to_xlarge","combine_small_to_full","ScalarLimbs","borrow","borrow_mut","build_fixed_selectors","deref","deref_mut","drop","from","init","into","ivc_circuit","ivc_circuit_base_case","phi_limbs","phi_np1_r2_limbs","phi_np1_r3_limbs","phi_r_limbs","process_challenges","process_ecadds","process_hashes","process_inputs","process_scalars","process_u","try_from","try_into","type_id","vzip","write_inputs_row","write_scalars_row","IVCFECLookupLens","IVCLookupTable","SerLookupTable","all_variants","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cmp","deref","","deref_mut","","drop","","entries","eq","equivalent","","fmt","from","","from_u32","hash","init","","into","","is_fixed","ix_by_value","length","partial_cmp","re_get","runtime_create_column","to_owned","to_u32","traverse","try_from","","try_into","","type_id","","vzip","","Beta","CombinableEvals","Gamma","JointCombiner","PlonkishChallenge","PlonkishChallengeIter","PlonkishInstance","PlonkishWitness","PlonkishWitnessGeneric","alphas","blinder","borrow","","","","borrow_mut","","","","challenges","clone","","","","clone_into","","","","clone_to_uninit","","","","combine","","commitments","deref","","","","deref_mut","","","","drop","","","","e_as_mut_slice","e_as_slice","eq","","","equivalent","","","","","","fixed_selectors","","fmt","","","","from","","","","","from_witness","get_alphas","get_blinder","hash","","index","","","init","","","","into","","","","into_iter","iter","len","next","next_back","nth","par_bridge","phantom","","relax","","size_hint","to_absorb","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","verify_from_witness","vzip","","","","witness","","columns","interpreter","Input","PoseidonColumn","Round","RoundConstant","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_column","to_owned","try_from","try_into","type_id","vzip","PoseidonParams","apply_permutation","constants","mds","poseidon_circuit","columns","interpreter","Input","PoseidonColumn","Round","RoundConstant","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_column","to_owned","try_from","try_into","type_id","vzip","PoseidonParams","apply_permutation","constants","mds","poseidon_circuit","bn254","columns","interpreter","Column","FullRound","Input","MAX_DEGREE","NB_COLUMNS","NB_CONSTRAINTS","NB_FULL_ROUND","NB_PARTIAL_ROUND","NB_ROUND_CONSTANTS","NB_TOTAL_ROUND","PartialRound","PlonkSpongeConstantsIVC","PoseidonBN254Parameters","RoundConstant","STATE_SIZE","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","constants","deref","","deref_mut","","drop","","from","","init","","into","","mds","static_params","to_owned","try_from","","try_into","","type_id","","vzip","","FullRound","Input","PartialRound","PoseidonColumn","RoundConstant","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_column","to_owned","try_from","try_into","type_id","vzip","PoseidonParams","apply_permutation","constants","mds","poseidon_circuit","PlonkSpongeConstantsIVC","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","init","into","static_params","to_owned","try_from","try_into","type_id","vzip","ConstraintDegreeTooHigh","ConstraintNotSatisfied","Fp","Fq","G","Generic","Pairing","Proof","ProofCommitments","ProofEvaluations","ProverError","alphas","borrow","","","","borrow_mut","","","","challenges","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","error_vec","evaluate","fixed_selectors_evals","fmt","","","","","from","","","","ft_eval1","init","","","","into","","","","opening_proof","proof_comms","proof_evals","prove","t_comm","to_owned","","","","to_string","try_from","","","","try_into","","","","type_id","","","","u","vzip","","","","witness_comms","witness_evals","Fp","Fq","G","Pairing","verify"],"q":[[0,"ivc"],[9,"ivc::expr_eval"],[54,"ivc::ivc"],[64,"ivc::ivc::columns"],[154,"ivc::ivc::constraints"],[161,"ivc::ivc::helpers"],[164,"ivc::ivc::interpreter"],[192,"ivc::ivc::lookups"],[240,"ivc::plonkish_lang"],[361,"ivc::poseidon_55_0_7_3_2"],[363,"ivc::poseidon_55_0_7_3_2::columns"],[390,"ivc::poseidon_55_0_7_3_2::interpreter"],[395,"ivc::poseidon_55_0_7_3_7"],[397,"ivc::poseidon_55_0_7_3_7::columns"],[424,"ivc::poseidon_55_0_7_3_7::interpreter"],[429,"ivc::poseidon_8_56_5_3_2"],[432,"ivc::poseidon_8_56_5_3_2::bn254"],[478,"ivc::poseidon_8_56_5_3_2::columns"],[506,"ivc::poseidon_8_56_5_3_2::interpreter"],[511,"ivc::poseidon_params_55_0_7_3"],[529,"ivc::prover"],[624,"ivc::verifier"],[629,"folding"],[630,"core::clone"],[631,"kimchi::curve"],[632,"ark_poly::evaluations::univariate"],[633,"folding::expressions"],[634,"folding::eval_leaf"],[635,"kimchi_msm::columns"],[636,"folding::instance_witness"],[637,"folding::columns"],[638,"core::result"],[639,"core::any"],[640,"core::cmp"],[641,"core::fmt"],[642,"core::option"],[643,"ark_ff::fields::prime"],[644,"kimchi_msm::circuit_design::capabilities"],[645,"kimchi_msm"],[646,"alloc::vec"],[647,"alloc::boxed"],[648,"core::hash"],[649,"ark_ff::fields"],[650,"poly_commitment::commitment"],[651,"kimchi_msm::witness"],[652,"kimchi::circuits::berkeley_columns"],[653,"ark_poly::domain::radix2"],[654,"mina_poseidon::sponge"],[655,"poly_commitment"],[656,"core::marker"],[657,"ark_ff::fields::fft_friendly"],[658,"rayon::iter::par_bridge"],[659,"alloc::string"],[660,"ark_bn254::fields::fr"],[661,"mina_poseidon::poseidon"],[662,"kimchi::proof"],[663,"kimchi::circuits::expr"],[664,"kimchi::circuits::domains"],[665,"poly_commitment::kzg"],[666,"rand_core"]],"i":"````````````bf1n20210002020202122212002020202020202120``````````Ch0000000000000000000000000000000``````DdDf21022222102102102222210210210221022`10102102102102```````````En0`000000``0000``````0000````Dl0Gf1011111010101111110111010111110111001010101Bj`00`````Gh0Gj12H`12302123012301230122123012301230B`0234223344Hb33452345524443503434523452252222203342434523452345234524345203``Il`0000000000000000000000000``In0```J``0000000000000000000000000``Jb0`````Mf0```````0``0`JfJd1000011010101010101`010101010Jl00`000000000000000000000000``El0``Jn0000000000`00000Kb0```0`````K`1KdKf231022310231023102310231023102111331023102131023102222`0310233102310231022310201`````","f":"````````````{bd}{fd}{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{bl}{fl}{{{h{{n{c}}}}}{{n{c}}}{A`Ab}}{{h{h{jc}}}Ad{}}{{hAf}Ad}{Ah{{h{c}}}{}}0{Ah{{h{jc}}}{}}0{AhAd}0{b}{fAj}{{{h{{b{ce}}}}{h{{Al{g}}}}}AnAbB`{{Bl{}{{Bb{{Bd{Ah}}}}{Bf{c}}{Bh{Bj}}}}}}{{{h{{b{ce}}}}{h{{Bn{g}}}}}AnAbB`{{Bl{}{{Bb{{Bd{Ah}}}}{Bf{c}}{Bh{Bj}}}}}}{bC`}{fC`}{cc{}}0{{{h{{n{c}}}}{Bd{Ah}}}{{h{e}}}Ab{}}{{}Ah}0{{}c{}}0{{{h{{b{ce}}}}{h{{Cb{g}}}}}AnAbB`{{Bl{}{{Bb{{Bd{Ah}}}}{Bf{c}}{Bh{Bj}}}}}}{hc{}}{c{{Cd{e}}}{}{}}0{{}{{Cd{c}}}{}}0{hCf}0>{f}{{}c{}}088888````````````````````````````````````````88{AhAh}{h{{h{c}}}{}}00{{{h{j}}}{{h{jc}}}{}}00{{{h{Ch}}}Ch}{{h{h{jc}}}Ad{}}{{hAf}Ad}{{{h{Ch}}{h{Ch}}}Cj}{Ah{{h{c}}}{}}00{Ah{{h{jc}}}{}}00{AhAd}00{{{h{Ch}}{h{Ch}}}Cl}{{h{h{c}}}Cl{}}0{{{h{Ch}}{h{jCn}}}D`}{cc{}}00{{}Ah}00{{}c{}}00{{{h{Ch}}{h{Ch}}}{{Db{Cj}}}}{{{h{Dd}}c}e{}{}}{{{h{Df}}c}e{}{}}{Ch{{Bd{Ah}}}}{hc{}}6{{{h{Dd}}c}{{Db{e}}}{}{}}{{{h{Df}}c}{{Db{e}}}{}{}}{c{{Cd{e}}}{}{}}00{{}{{Cd{c}}}{}}00{hCf}00{{}c{}}00{{{h{je}}}AdDh{{Dj{cCh}}}}{{{h{jg}}}AdDhDh{{Dj{cCh}}{Dn{cCh{Dl{e}}}}}}0{{{h{je}}}AdDh{{Dj{E`Ch}}{Dn{E`Ch{Dl{c}}}}{Eb{E`Ch}}}}122{{{l{c}}}cDh}{ll}{l}`{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{Ah{{l{{Ed{E`}}}}}}{Ah{{h{c}}}{}}{Ah{{h{jc}}}{}}{AhAd}{cc{}}{{}Ah}{{}c{}}{{{h{jg}}Ah{Eh{{l{{Ef{ee}}}}}}{Eh{{l{{Ef{ee}}}}}}{Eh{{l{{Ef{ee}}}}}}{l{{Ef{ee}}}}{l{{Ef{ee}}}}c{Eh{{l{c}}}}{h{i}}Ah}AdDhDh{{Ej{cCh}}{Eb{cCh}}{Dn{cCh{Dl{e}}}}}{{El{c}}}}{{{h{je}}Ah}AdDh{{Ej{cCh}}{Eb{cCh}}}}{EnEd}{Enl}01{{{h{je}}Ahc{h{{l{c}}}}c}AdDh{{F`{cCh}}}}{{{h{jg}}Ah{En{c}}{h{{l{{l{{l{c}}}}}}}}{l{{Ef{ee}}}}{l{{Ef{ee}}}}}AdDhDh{{Ej{cCh}}{Dn{cCh{Dl{e}}}}}}{{{h{je}}Ah{h{g}}{h{{l{{l{{l{c}}}}}}}}}EfDh{{F`{cCh}}{Eb{cCh}}}{{El{c}}}}{{{h{jg}}Ah{l{{Eh{{l{{Ef{ee}}}}}}}}}{{Ef{{Eh{{l{{l{{l{c}}}}}}}}{Eh{{l{{l{{l{c}}}}}}}}{Eh{{l{{l{{l{c}}}}}}}}}}}DhDh{{F`{cCh}}{Dn{cCh{Dl{e}}}}}}{{{h{jg}}Ahcc}{{En{c}}}DhDh{{Ej{cCh}}{Dn{cCh{Dl{e}}}}}}{{{h{je}}Ahcc}AdDh{{F`{cCh}}}}{c{{Cd{e}}}{}{}}{{}{{Cd{c}}}{}}{hCf}{{}c{}}{{{h{je}}{h{{l{{Ef{gg}}}}}}Ah}{{Ef{{Ed{c}}{Ed{c}}{Ed{c}}}}}Dh{{Fb{cCh}}}Dh}{{{h{je}}ccc}{{Ef{c{l{c}}{l{c}}{l{c}}{l{c}}}}}Dh{{Fb{cCh}}}}```{{}{{Ed{{Dl{c}}}}}Dh}{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{{{h{{Dl{c}}}}}{{Dl{c}}}A`}{{h{h{jc}}}Ad{}}{{hAf}Ad}{{{h{{Dl{c}}}}{h{{Dl{c}}}}}CjFd}{Ah{{h{c}}}{}}0{Ah{{h{jc}}}{}}0{AhAd}0{{{h{{Dl{c}}}}Ff}{{Db{{Ed{e}}}}}DhDh}{{{h{{Dl{c}}}}{h{{Dl{c}}}}}ClFh}{{h{h{c}}}Cl{}}0{{{h{{Dl{c}}}}{h{jCn}}}D`Fj}{cc{}}0{Fl{{Dl{c}}}Dh}{{{h{{Dl{c}}}}{h{je}}}AdFnG`}{{}Ah}0{{}c{}}0{{{h{{Dl{c}}}}}ClDh}{{{h{{Dl{c}}}}{h{{Gb{e}}}}}{{Db{Ah}}}DhDh}{{{h{{Dl{c}}}}}AhDh}{{{h{{Dl{c}}}}{h{{Dl{c}}}}}{{Db{Cj}}}Gd}{{{h{{Gf{c}}}}e}g{}{}{}}4{hc{}}{{{h{{Dl{c}}}}}FlDh}{{{h{{Gf{c}}}}e}{{Db{g}}}{}{}{}}{c{{Cd{e}}}{}{}}0{{}{{Cd{c}}}{}}0{hCf}0{{}c{}}0`````````{Ghd}{Gh}{h{{h{c}}}{}}000{{{h{j}}}{{h{jc}}}{}}000{Ghl}{{{h{{Gj{ce}}}}}{{Gj{ce}}}{A`Gl}A`}{{{h{{Gh{c}}}}}{{Gh{c}}}{A`Gn}}{{{h{Bj}}}Bj}{{{h{H`}}}H`}{{h{h{jc}}}Ad{}}000{{hAf}Ad}000{{{Gj{ce}}{Gj{ce}}c}{{Gj{ce}}}Gl{{B`{c}}}}{{{Gh{c}}{Gh{c}}}{{Gh{c}}}Gn}8{Ah{{h{c}}}{}}000{Ah{{h{jc}}}{}}000{AhAd}000{{{h{jB`}}}{{h{j{Gb{c}}}}}Gl}{{{h{B`}}}{{h{{Gb{c}}}}}Gl}{{{h{{Gj{ce}}}}{h{{Gj{ce}}}}}Cl{FhGl}Fh}{{{h{{Gh{c}}}}{h{{Gh{c}}}}}Cl{FhGn}}{{{h{Bj}}{h{Bj}}}Cl}{{h{h{c}}}Cl{}}00000{HbHd}{GjHd}{{{h{{Gj{ce}}}}{h{jCn}}}D`{FjGl}Fj}{{{h{{Gh{c}}}}{h{jCn}}}D`{FjGn}}{{{h{Bj}}{h{jCn}}}D`}{{{h{H`}}{h{jCn}}}D`}{cc{}}00{HfBj}1{{{h{{Hd{{Aj{Hh}}}}}}{h{je}}{h{g}}Hh}{{Gh{c}}}Gn{{Hj{c}}}{{Hl{c}}Hn}}{{{h{{Gh{c}}}}}{{h{d}}}Gn}{{{h{{Gh{c}}}}}{}Gn}{{{h{{Gj{ce}}}}{h{jg}}}Ad{FnGl}FnG`}{{{h{Bj}}{h{jc}}}AdG`}{{{h{{Hb{c}}}}Ad}{{h{e}}}I`{}}{{{h{{Gj{ce}}}}{Bd{Ah}}}{{h{g}}}I`{{B`{c}}}{}}{{{h{{Gh{c}}}}Bj}{{h{e}}}Gn{}}{{}Ah}000{{}c{}}000{{}c{}}{{}H`}{{{h{H`}}}Ah}{{{h{jH`}}}{{Db{c}}}{}}0{{{h{jH`}}Ah}{{Db{c}}}{}}{{}{{Ib{c}}}{}}{HbId}{GjId}{{{h{{Aj{Hh}}}}}{{If{ce}}}{}{}}{{}{{Ih{ce}}}{}{}}{{{h{H`}}}{{Ef{Ah{Db{Ah}}}}}}{{{h{{Gh{c}}}}}{{Ef{Ed{Ed{c}}}}}Gn}{hc{}}000{c{{Cd{e}}}{}{}}000{{}{{Cd{c}}}{}}000{hCf}000{{{h{{Gh{c}}}}{h{je}}}{{Cd{AdIj}}}Gn{{Hj{c}}}}{{}c{}}000{HbHd}{GjHd}``````{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{{h{Il}}}Il}{{h{h{jc}}}Ad{}}{{hAf}Ad}{{{h{Il}}{h{Il}}}Cj}{Ah{{h{c}}}{}}{Ah{{h{jc}}}{}}{AhAd}{{{h{Il}}{h{Il}}}Cl}{{h{h{c}}}Cl{}}0{{{h{Il}}{h{jCn}}}D`}{cc{}}{{}Ah}{{}c{}}{{{h{Il}}{h{Il}}}{{Db{Cj}}}}{Il{{Bd{Ah}}}}{hc{}}{c{{Cd{e}}}{}{}}{{}{{Cd{c}}}{}}{hCf}{{}c{}}`{{{h{je}}{h{g}}}lDh{{Dj{cIl}}{Eb{cIl}}}{{In{c}}}}{{{h{In}}}{{l{{l{c}}}}}Dh}0{{{h{je}}{h{g}}l}lDh{{Fb{cIl}}{Eb{cIl}}}{{In{c}}}}``````{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{{h{J`}}}J`}{{h{h{jc}}}Ad{}}{{hAf}Ad}{{{h{J`}}{h{J`}}}Cj}{Ah{{h{c}}}{}}{Ah{{h{jc}}}{}}{AhAd}{{{h{J`}}{h{J`}}}Cl}{{h{h{c}}}Cl{}}0{{{h{J`}}{h{jCn}}}D`}{cc{}}{{}Ah}{{}c{}}{{{h{J`}}{h{J`}}}{{Db{Cj}}}}{J`{{Bd{Ah}}}}{hc{}}{c{{Cd{e}}}{}{}}{{}{{Cd{c}}}{}}{hCf}{{}c{}}`{{{h{je}}{h{g}}}lDh{{Dj{cJ`}}{Eb{cJ`}}}{{Jb{c}}}}{{{h{Jb}}}{{l{{l{c}}}}}Dh}0{{{h{je}}{h{g}}l}lDh{{Fb{cJ`}}{Eb{cJ`}}}{{Jb{c}}}}``````{{}Ff}<<<<<<````<{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{{{h{Jd}}}Jd}{{h{h{jc}}}Ad{}}{{hAf}Ad}{{{h{Jf}}}{{l{{l{Jh}}}}}}{Ah{{h{c}}}{}}0{Ah{{h{jc}}}{}}0{AhAd}0{cc{}}0{{}Ah}0{{}c{}}06{{}{{h{{Jj{Jh}}}}}}{hc{}}{c{{Cd{e}}}{}{}}0{{}{{Cd{c}}}{}}0{hCf}0{{}c{}}0`````{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{{h{Jl}}}Jl}{{h{h{jc}}}Ad{}}{{hAf}Ad}{{{h{Jl}}{h{Jl}}}Cj}{Ah{{h{c}}}{}}{Ah{{h{jc}}}{}}{AhAd}{{{h{Jl}}{h{Jl}}}Cl}{{h{h{c}}}Cl{}}0{{{h{Jl}}{h{jCn}}}D`}{cc{}}{{}Ah}{{}c{}}{{{h{Jl}}{h{Jl}}}{{Db{Cj}}}}{Jl{{Bd{Ah}}}}{hc{}}{c{{Cd{e}}}{}{}}{{}{{Cd{c}}}{}}{hCf}{{}c{}}`{{{h{je}}{h{g}}}lDh{{Dj{cJl}}{Eb{cJl}}}{{El{c}}}}{{{h{El}}}{{l{{l{c}}}}}Dh}0{{{h{je}}{h{g}}l}lDh{{Fb{cJl}}{Eb{cJl}}}{{El{c}}}}`{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{{h{Jn}}}Jn}{{h{h{jc}}}Ad{}}{{hAf}Ad}{Ah{{h{c}}}{}}{Ah{{h{jc}}}{}}{AhAd}{cc{}}{{}Ah}{{}c{}}{{}{{h{{Jj{Jh}}}}}}{hc{}}{c{{Cd{e}}}{}{}}{{}{{Cd{c}}}{}}{hCf}{{}c{}}```````````{K`d}{h{{h{c}}}{}}000{{{h{j}}}{{h{jc}}}{}}000{K`l}{{{h{Kb}}}Kb}{{{h{{Kd{c}}}}}{{Kd{c}}}A`}{{{h{{Kf{c}}}}}{{Kf{c}}}{A`Ab}}{{{h{{K`{ce}}}}}{{K`{ce}}}{A`Ab}{A`{Kh{c}}}}{{h{h{jc}}}Ad{}}000{{hAf}Ad}000{Ah{{h{c}}}{}}000{Ah{{h{jc}}}{}}000{AhAd}000{KdKj}{{{h{{Kd{c}}}}e}{{Cd{{Kj{c}}{Kl{e}}}}}A`{}}{KdEh}{{{h{Kb}}{h{jCn}}}D`}0{{{h{{Kd{c}}}}{h{jCn}}}D`Fj}{{{h{{Kf{c}}}}{h{jCn}}}D`{FjAb}}{{{h{{K`{ce}}}}{h{jCn}}}D`{FjAb}{Fj{Kh{c}}}}{cc{}}000{Kd}{{}Ah}000{{}c{}}000{K`}{K`Kf}{K`Kd}{{{L`{Kn}}{h{{Ld{Lb}}}}{h{{Al{c}}}}{Ih{Lf{Gh{Lf}}}}{If{Lf{Hb{Kn}}}}{h{je}}}{{Cd{{K`{Lf{Lh{Lb}}}}Kb}}}{{Bl{}{{Bb{{Bd{Ah}}}}{Bf{Lf}}{Bh{Bj}}}}}{LjLl}}{KfLn}{hc{}}000{hIj}{c{{Cd{e}}}{}{}}000{{}{{Cd{c}}}{}}000{hCf}0009{{}c{}}000{KfHd}{KdHd}````{{{L`{M`}}{h{{Ld{Mb}}}}{h{{Al{c}}}}{Eh{{l{{Aj{M`{Hh{M`}}}}}}}}{h{{K`{Md{Lh{Mb}}}}}}}Cl{{Bl{}{{Bb{{Bd{Ah}}}}{Bf{Md}}{Bh{Bj}}}}}}","D":"AD`","p":[[5,"GenericEvalEnv",9],[6,"Alphas",629],[8,"SimpleEvalEnv",9],[1,"reference",null,null,1],[0,"mut"],[1,"array"],[5,"GenericVecStructure",9],[10,"Clone",630],[10,"KimchiCurve",631],[1,"unit"],[1,"u8"],[1,"usize"],[5,"Evaluations",632],[6,"FoldingCompatibleExpr",633],[6,"EvalLeaf",634],[10,"CombinableEvals",240],[17,"Column"],[6,"Column",635],[17,"Curve"],[17,"Challenge"],[6,"PlonkishChallenge",240],[10,"FoldingConfig",629],[6,"FoldingExp",633],[5,"ExtendedWitness",636],[6,"ExtendedFoldingColumn",637],[6,"Result",638,null,1],[5,"TypeId",639],[6,"IVCColumn",64],[6,"Ordering",640],[1,"bool"],[5,"Formatter",641],[8,"Result",641],[6,"Option",642,null,1],[5,"IVCHashLens",64],[5,"IVCFECLens",64],[10,"PrimeField",643],[10,"ColAccessCap",644],[6,"IVCLookupTable",192],[10,"LookupCap",644],[8,"Fp",645],[10,"HybridCopyCap",644],[5,"Vec",646],[1,"tuple",null,null,1],[5,"Box",647,null,1],[10,"DirectWitnessCap",644],[10,"PoseidonParams",506],[5,"ScalarLimbs",164],[10,"MultiRowReadCap",644],[10,"ColWriteCap",644],[10,"Ord",640],[1,"u64"],[10,"PartialEq",640],[10,"Debug",641],[1,"u32"],[10,"Hash",648],[10,"Hasher",648],[1,"slice"],[10,"PartialOrd",640],[5,"IVCFECLookupLens",192],[5,"PlonkishInstance",240],[5,"PlonkishWitnessGeneric",240],[10,"Field",649],[10,"CommitmentCurve",650],[5,"PlonkishChallengeIter",240],[8,"PlonkishWitness",240],[5,"Witness",651],[6,"BerkeleyChallengeTerm",652],[5,"Radix2EvaluationDomain",653],[10,"FqSponge",654],[10,"SRS",655],[10,"Sync",656],[10,"FftField",657],[5,"IterBridge",658],[5,"PhantomData",656],[5,"RelaxedWitness",636],[5,"RelaxedInstance",636],[5,"String",659],[6,"PoseidonColumn",363],[10,"PoseidonParams",390],[6,"PoseidonColumn",397],[10,"PoseidonParams",424],[5,"PlonkSpongeConstantsIVC",432],[5,"PoseidonBN254Parameters",432],[8,"Fr",660],[5,"ArithmeticSpongeParams",661],[6,"PoseidonColumn",478],[5,"PlonkSpongeConstantsIVC",511],[5,"Proof",529],[6,"ProverError",529],[5,"ProofEvaluations",529],[5,"ProofCommitments",529],[10,"OpenProof",655],[5,"PointEvaluations",662],[6,"ExprError",663],[8,"Fp",529],[5,"EvaluationDomains",664],[8,"Pairing",529],[5,"PairingSRS",665],[8,"G",529],[5,"KZGProof",665],[10,"RngCore",666],[10,"CryptoRng",666],[5,"PolyComm",650],[8,"Fp",624],[8,"Pairing",624],[8,"G",624],[8,"Column",432]],"r":[],"b":[[577,"impl-Display-for-ProverError"],[578,"impl-Debug-for-ProverError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAANUBOwABAAIACAABAAwAEwAiAAEAJgACACsABwA1AAEAPQADAGEAAQBnABYAgQACAIcABACNAA8AnwAAAKEAAACmAAEAqQACAK0AAAC1AAEAugAHAMMADwDUAAMA2gADAOIADwDzAAIA9wA5ADQBAAA2AQUAPQEEAEYBCABRARkAbAEQAH4BAACAAQYAiQEBAI4BEACgAQAAogEGAKsBAQCvAQAAsQECALsBAAC9AQEAwAENANABAQDUARwA8gEAAPQBBgD9AQEAAQIHAAoCAAAMAgcAFwIEAB0CIwBCAgQATAIDAFQCAwBZAhUAdAIBAA==","P":[[14,"T"],[18,""],[20,"G"],[21,"T"],[22,""],[23,"T"],[27,""],[31,"Curve,Evals,FC"],[33,""],[35,"T"],[37,"G,Index::Output"],[38,""],[40,"U"],[42,"Curve,Evals,FC"],[43,"T"],[44,"U,T"],[46,"U"],[48,""],[52,"V"],[54,""],[102,"T"],[108,""],[109,"T"],[110,""],[112,"T"],[118,""],[122,"K"],[124,""],[125,"T"],[128,""],[131,"U"],[134,""],[135,"MPrism::Target,MPrism::Source"],[137,""],[138,"T"],[139,""],[140,"MPrism::Source,MPrism::Target"],[142,"U,T"],[145,"U"],[148,""],[151,"V"],[154,"F,Env"],[155,"F,Ff,Env"],[157,"Ff,Env"],[158,"F,Ff,Env"],[159,"F,Env"],[161,"Ff"],[162,""],[165,"T"],[167,""],[168,"T"],[170,""],[171,"T"],[172,""],[173,"U"],[174,"F,Ff,Env,PParams"],[175,"F,Env"],[176,""],[180,"F,Env"],[181,"F,Ff,Env"],[182,"F,Env,PParams"],[183,"F,Ff,Env"],[185,"F,Env"],[186,"U,T"],[187,"U"],[188,""],[189,"V"],[190,"F,Env,Ff"],[191,"F,Env"],[195,"Ff"],[196,"T"],[200,"Ff"],[201,"T"],[202,""],[203,"Ff"],[204,"T"],[208,""],[210,"Ff,F"],[211,"Ff"],[212,"K"],[214,"Ff"],[215,"T"],[217,"Ff"],[218,"Ff,__H"],[219,""],[221,"U"],[223,"Ff"],[224,"Ff,F"],[225,"Ff"],[227,"Ff,MPrism::Target,MPrism::Source"],[228,"Ff"],[229,"T"],[230,"Ff"],[231,"Ff,MPrism::Source,MPrism::Target"],[232,"U,T"],[234,"U"],[236,""],[238,"V"],[249,""],[251,"T"],[259,""],[260,"F,Evals"],[261,"G"],[262,""],[264,"T"],[268,""],[272,"F,Evals"],[273,"G"],[274,""],[275,"T"],[283,""],[287,"F"],[289,"F,Evals"],[290,"G"],[291,""],[292,"K"],[298,""],[300,"F,Evals"],[301,"G"],[302,""],[304,"T"],[307,""],[308,"T"],[309,"G,EFqSponge,Srs"],[310,"G"],[312,"F,Evals,__H"],[313,"__H"],[314,"F,Index::Output"],[315,"F,Evals,Index::Output"],[316,"G,Index::Output"],[317,""],[321,"U"],[325,"I"],[326,""],[328,"Iterator::Item"],[331,"T"],[332,""],[334,"G,W"],[335,"G,I"],[336,""],[337,"G"],[338,"T"],[342,"U,T"],[346,"U"],[350,""],[354,"G,EFqSponge"],[355,"V"],[359,""],[367,"T"],[369,""],[370,"T"],[371,""],[373,"T"],[375,""],[377,"K"],[379,""],[380,"T"],[381,""],[382,"U"],[383,""],[385,"T"],[386,"U,T"],[387,"U"],[388,""],[389,"V"],[391,"F,Env,PARAMETERS"],[392,"F"],[394,"F,Env,PARAMETERS"],[401,"T"],[403,""],[404,"T"],[405,""],[407,"T"],[409,""],[411,"K"],[413,""],[414,"T"],[415,""],[416,"U"],[417,""],[419,"T"],[420,"U,T"],[421,"U"],[422,""],[423,"V"],[425,"F,Env,PARAMETERS"],[426,"F"],[428,"F,Env,PARAMETERS"],[435,""],[447,"T"],[451,""],[452,"T"],[453,""],[455,"T"],[459,""],[461,"T"],[463,""],[465,"U"],[467,""],[469,"T"],[470,"U,T"],[472,"U"],[474,""],[476,"V"],[483,"T"],[485,""],[486,"T"],[487,""],[489,"T"],[491,""],[493,"K"],[495,""],[496,"T"],[497,""],[498,"U"],[499,""],[501,"T"],[502,"U,T"],[503,"U"],[504,""],[505,"V"],[507,"F,Env,PARAMETERS"],[508,"F"],[510,"F,Env,PARAMETERS"],[512,"T"],[514,""],[515,"T"],[516,""],[517,"T"],[519,""],[520,"T"],[521,""],[522,"U"],[523,""],[524,"T"],[525,"U,T"],[526,"U"],[527,""],[528,"V"],[540,""],[541,"T"],[549,""],[551,"F"],[552,"G"],[553,"G,OpeningProof"],[554,"T"],[558,""],[562,"T"],[570,""],[575,"F,ColumnEvaluations::Column"],[576,""],[579,"F"],[580,"G"],[581,"G,OpeningProof"],[582,"T"],[586,""],[591,"U"],[595,""],[598,"FC,RNG"],[599,""],[600,"T"],[604,""],[605,"U,T"],[609,"U"],[613,""],[618,"V"],[622,""],[628,"FC"]]}],["kimchi",{"t":"CQQCCCCQECCQEEECCECCCEQQCCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIIFIINHHNNNNNNNNNOOOONOOOOONNNNNCCCCCCCCCCCCCCTKFFGFTKPPPMNNNNNNNNONNNNNOMNNOMMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNPPPGFPPPGPIFPPPPPFPPPPPPPPPPPPOOONNNNNNNNNNONNNNNNNHONHONNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNHNONNNNNNNNNNNNONONNONNNOOONNOONNNNNNNNNNNNNNNNNNNNNONNNNNHOHHOFFFPPFFGPSSNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNOONNNNNNOOONONNNNNNOOOONNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNOONONNNNOOOONNONOOOOONNNOONHNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOHOOFNNNNNOONNNNNNNNNOOONNNNNONPPPPGFNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNTPPPPKPPPFPPPFPPPPRRKKPPPIGGFPPPPPPIGGRPGPPKPPPFKPPPPPPPPPPPPPPGGPPPPPPPFPPPPPPPPPPPPPPPPFPNNNMNNNNQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNHMMNNNNNNNNNMNNNNNNNNONNNNMNNNNNNNNNONNNNNCONNNNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNMNNNNNNNNNNNNNNNOOOOKHMMMHMHMMMMMMMMMMEEEEEEEEPPPPFFGIPKPPPGPPPPPPGPPPPPPPPPPPPPPNNNNNNNNNNCNNNNNNNNNNNNNNOMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONOOOFNNONNNNNNNNNNNNNNONNNOCCCCCSFHNNNNNHNNNNONNNNONNHNNNNHNHPFGFPPPNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONNNNNNNNNNNNNNNOOOONOOOONNNOONNNNNNNNNNNNNNNNOOOOPPFIIFPFFGFFGPFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNONONNNNNNNNNNNNNNNNNOONNNNNNNNNNONNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNCOFFFNNNNNNCNNNNNNNNNHONNNNNNNNNNNONNNNNNNNNNNOOONNNNNNNNONNNNNNNNNNNNNNNNNFFFNNNNNNONNNNNNNNNONNNNNNNNNOOONNNNNNNNNONNNNNNNNNNNNNNNNNNNNNGFFSPSPNNNNNNCNNNNNNNNNHHONNNNNNNNNNNNNNNNNNNNNNNNHNNNONNNNNNNNNNNNNCONNNNNNNNNNNNNNNNNNNCOFNNONNNNNNONNNNNNNNNNSSHSHEFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCCCCCCCCCCCCCCCCHHHFNNNNNNNNNNNNNNNNNFNNNNNNNNNNNHNNNNNNFFONNNNNNNNNNNNNNNNNHNNNNONNNNNNNNCCCFNNNNNNNNNNNNNNNNNPGPNNNNNHNNNNNNHNNNNNNNNNNSKKKKKKSISSSSSMMMOMMNMMMMMNMMMMMCCCFNNNNHHHNNNNNNNNNNNNNSHHHHHHFNNNNNNNOOHHHNNNNNNNNNNONNOONNNNPSPSSSSFGPPPNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNOOOOOHHFSSNNNNNCNNNNNNNNNNNNNNNNNNNNNCSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHSFNNNNNHHNNNNHNNNNHNHSFSSSSNNNNNNNNNNNHNNHNNNNCCCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSHHHHHHHHHHHHHHHHHHPPFGNNNNNNNNNNNNNNNNNNNNNHNNNNNNNHNNNNNNNNNSFFFFNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNCHHFFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHFNNNNNNHNNNNHNNNHHNNNNFOOONNCNNNNNNNNNNONNONNNNOOOONOOFOOONNNNNNNNONNNONNNNNOONOONOOSISSKFNNCNNNONNNNNNNNNNNNNNNNNNNNNMNNNNNNONNNNNNNNNCMNFNNONNNNNNNNNNNONNNNNFFFFFFFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNQQNNNNNNNNKMMMMHMHPPPPGPPPPPPPPPPPPPPPPPPPPGPPPGPGGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNHHHFONNCONNONONONNOOOONNNNOFNNHNNONNNNNNONNOONNNNNKMMMMMMFFFFFFONNNNNNNNNNNNCONNNNNNNNNNNNNNNNNNONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNONNNNNNNOOONNNNNNNNNNNOONNNNNNNNNNNNNNOOOOONNNNONNNNOOOOOOOOOOOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOFFNNNNONNNNNNOOONNNNNNOOOOONNNNNONNNNNNOOOOONNNNOOOOOOOONNNNNNNNNNNNOOOOCCFFFFEONNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNNNNNNNONNNNNNNNNNNNONNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNOOSFNNOCONNNOOOOOOONNNNONNNONNOOOOONOHHNNNNNONOFNNNNNNNNNNNNNNNNNNNFNNNNNONNONNNNNNNNOONNNONOCNNNNNONONNNHHHFPPIHNNNNNNNNNNOONNNOHNFFNNNNNNNNNNOONNNNNNNONNOOONNOONNNONNNNOOOOOOOONOOOOOOOOONNOONOONNNNNNNNNNNNOOO","n":["alphas","auto_clone","auto_clone_array","bench","circuits","curve","error","grid","groupmap","lagrange_basis_evaluations","linearization","loc","mina_curves","mina_poseidon","o1_utils","oracles","plonk_sponge","poly_commitment","proof","prover","prover_index","turshi","variable_map","variables","verifier","verifier_index","Alphas","MustConsumeIterator","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","deserialize","drop","","","fmt","","","from","","get_alphas","get_exponents","init","","instantiate","into","","into_iter","multiunzip","","","","","","","","","","","","","","","","","","","","","","","","","","next","register","serialize","to_owned","to_string","try_from","","try_into","","type_id","","vzip","","BaseSpongePallas","BaseSpongeVesta","BenchmarkCtx","ScalarSpongePallas","ScalarSpongeVesta","batch_verification","bench_arguments_dump_into_file","bench_arguments_from_file","borrow","borrow_mut","create_proof","deref","deref_mut","drop","from","init","into","last_squeezed","","","","new","num_gates","sponge","","","","srs_size","try_from","try_into","type_id","vzip","argument","berkeley_columns","constraints","domain_constant_evaluation","domains","expr","gate","lookup","macros","polynomial","polynomials","scalars","wires","witness","ARGUMENT_TYPE","Argument","ArgumentData","ArgumentEnv","ArgumentType","ArgumentWitness","CONSTRAINTS","DynArgument","Gate","Lookup","Permutation","argument_type","borrow","","","","borrow_mut","","","","challenges","clone","clone_into","clone_to_uninit","coeff","coeff_chunk","coeffs","combined_constraints","","constant","constants","constraint_checks","constraints","","create","curr","default","deref","","","","deref_mut","","","","deserialize","drop","","","","endo_coefficient","eq","equivalent","","fmt","from","","","","hash","index","init","","","","into","","","","mds","next","serialize","to_owned","try_from","","","","try_into","","","","type_id","","","","vzip","","","","witness","","witness_curr","witness_curr_chunk","witness_next","witness_next_chunk","Add","Alpha","Atom","BerkeleyChallengeTerm","BerkeleyChallenges","Beta","Cache","Coefficient","Column","Double","E","Environment","Gamma","IfFeature","Index","JointCombiner","LookupAggreg","LookupEnvironment","LookupKindIndex","LookupRuntimeSelector","LookupRuntimeTable","LookupSorted","LookupTable","Mul","Permutation","Pow","Square","Sub","Witness","Z","aggreg","alpha","beta","borrow","","","","","borrow_mut","","","","","challenges","clone","","clone_into","","clone_to_uninit","","cmp","coeff","coefficient","column_domain","constant","constants","deref","","","","","deref_mut","","","","","deserialize","","domain","drop","","","","","eq","","equivalent","","","","fmt","","","from","","","","","gamma","get_challenges","get_column","get_constants","get_domain","hash","index","","","init","","","","","into","","","","","is_alpha","","joint_combiner","l0_1","","latex","","lookup","ocaml","","partial_cmp","runtime_selector","runtime_table","selectors","serialize","","sorted","table","text","","to_owned","","to_string","try_from","","","","","try_into","","","","","type_id","","","","","vanishes_on_zero_knowledge_and_previous_rows","","vzip","","","","","witness","","witness_curr","witness_next","z","Builder","ColumnEvaluations","ConstraintSystem","Custom","DisconnectedWires","EvaluatedColumnCoefficients","FeatureFlags","GateError","IncorrectPublic","NUM_CHUNKS_BY_DEFAULT","ZK_ROWS_BY_DEFAULT","borrow","","","","","","borrow_mut","","","","","","build","clone","","","","clone_into","","","","clone_to_uninit","","","","coefficients","coefficients8","complete_add_selector4","create","default","deref","","","","","","deref_mut","","","","","","describe","describe_vector","deserialize","","","","disable_gates_checks","","domain","drop","","","","","","emul_selector8","endo","endomul_scalar_selector8","evaluate","feature_flags","fmt","","","","","for_testing","foreign_field_add","foreign_field_add_selector8","foreign_field_mul","foreign_field_mul_selector8","fp_for_testing","from","","","","","","from_abi","from_gates","from_gates_and_lookup_features","from_value","gates","generic_selector","generic_selector4","init","","","","","","into","","","","","","into_abi","into_value","is_none","lazy_mode","long_ref_from_abi","lookup","lookup_constraint_system","lookup_features","max_poly_size","mul_selector8","none","ocaml_binding","ocaml_desc","perm_scalars","permutation_coefficients","permutation_coefficients8","poseidon_selector","poseidon_selector8","precomputations","prev_challenges","","public","","range_check0","range_check0_selector8","range_check1","range_check1_selector8","ref_from_abi","ref_mut_from_abi","return_abi","rot","rot_selector8","runtime","selector_polynomial","serialize","","","","shared_precomputations","shift","sid","to_owned","","","","try_from","","","","","","try_from_js_value","try_into","","","","","","type_id","","","","","","unique_id","vector_from_abi","vector_into_abi","vzip","","","","","","xor","xor_selector8","zk_rows","zk_rows_strict_lower_bound","err","row","DomainConstantEvaluations","borrow","borrow_mut","clone","clone_into","clone_to_uninit","constant_1_d4","constant_1_d8","create","deref","deref_mut","deserialize","drop","fmt","from","init","into","permutation_vanishing_polynomial_l","permutation_vanishing_polynomial_m","poly_x_d1","serialize","to_owned","try_from","try_into","type_id","vanishes_on_zero_knowledge_and_previous_rows","vzip","D1","D2","D4","D8","Domain","EvaluationDomains","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","create","d1","d2","d4","d8","deref","","deref_mut","","deserialize","drop","","eq","fmt","","from","","init","","into","","serialize","to_owned","","try_from","","try_into","","type_id","","vzip","","ALPHA","Add","","","","AlphaChallengeTerm","Atom","","","Cache","","","","CacheId","Cell","","Challenge","","Column","","ColumnEnvironment","ColumnEvaluations","Constant","","","ConstantExpr","ConstantExprInner","ConstantTerm","Constants","Double","","","Dup","EmptyStack","EndoCoefficient","Expr","ExprError","ExprInner","F","FailedLinearization","FeatureFlag","ForeignFieldAdd","ForeignFieldMul","FormattedOutput","IfFeature","","","Linearization","Literal","","Load","LookupPattern","LookupShouldNotBeUsed","LookupTables","LookupsPerRow","Mds","MissingEvaluation","MissingIndexEvaluation","MissingRuntime","Mul","","","","Operations","PolishToken","Pow","","","","RangeCheck0","RangeCheck1","Rot","RowOffset","RuntimeLookupTables","SkipIf","SkipIfNot","Square","","","Store","Sub","","","","TableWidth","UnnormalizedLagrangeBasis","","VanishesOnZeroKnowledgeAndPreviousRows","","Variable","Xor","add","add_assign","apply_feature_flags","as_literal","","","","","auto_clone","auto_clone_array","boolean","borrow","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","cache","","cell","","clone","","","","","","","","","","","clone_into","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","cmp","","coeff","col","column_domain","combine_constraints","","constant","","","constant_term","constraints","crumb","default","","degree","","deref","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","deserialize","","","","","","double","","","drop","","","","","","","","","","","","","endo_coefficient","eq","","","","","","","","","equivalent","","","","","","","","","","","","","","evaluate","","","","","","evaluate_","","evaluate_constants","","","evaluations","","","","fmt","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","from_value","get_challenges","get_column","get_constants","get_domain","hash","","","","index_terms","init","","","","","","","","","","","","","into","","","","","","","","","","","","","into_value","is_alpha","","","","","","is_one","is_zero","l0_1","","latex","","","","","","latex_str","","linearize","","literal","","","","","","","","map","mds","mul","","mul_assign","neg","ocaml","","","","","","ocaml_binding","ocaml_desc","ocaml_str","","offset","one","partial_cmp","","pow","","prologue","row","serialize","","","","","","square","","","sub","text","","","","","","to_literal","","","","","to_literal_ref","","","","","to_owned","","","","","","","","","","","to_polish","","to_polynomial","","to_string","","try_from","","","","","","","","","","","","","try_into","","","","","","","","","","","","","two_pow","two_to_2limb","two_to_3limb","two_to_limb","type_id","","","","","","","","","","","","","unique_id","unnormalized_lagrange_basis","value","","vanishes_on_zero_knowledge_and_previous_rows","vzip","","","","","","","","","","","","","witness","zero","zk_rows","","col","row","ExprOps","boolean","","cache","coeff","compact_limb","constant","crumb","","double","literal","pow","square","two_pow","two_to_2limb","two_to_3limb","two_to_limb","witness","E","FeatureFlag","coeff","constant","index","witness","witness_curr","witness_next","CairoClaim","CairoFlags","CairoInstruction","CairoTransition","Circuit","CircuitGate","CircuitGateError","CircuitGateResult","CompleteAdd","Connect","Constraint","CopyConstraint","Curr","CurrOrNext","EndoMul","EndoMulScalar","Err","FailedToGetWitnessForRow","ForeignFieldAdd","ForeignFieldMul","GateType","Generic","InvalidConstraint","InvalidLookupConstraint","Lookup","Next","Ok","Poseidon","RangeCheck0","RangeCheck1","Rot64","VarBaseMul","WireColumn","Xor16","Zero","borrow","","","","","borrow_mut","","","","","caml","clone","","","","clone_into","","","","clone_to_uninit","","","","cmp","","coeffs","connect_64bit","connect_cell_pair","connect_ffadd_range_checks","create_cairo_claim","create_cairo_flags","create_cairo_gadget","create_cairo_instruction","create_cairo_transition","create_chain_ffadd","create_compact_multi_range_check","create_endomul","create_foreign_field_mul","create_generic","create_generic_gadget","create_multi_range_check","create_poseidon","create_poseidon_gadget","create_range_check","create_rot","create_rot64","create_single_ffadd","create_vbmul","create_xor_gadget","default","","deref","","","","","deref_mut","","","","","describe","","describe_vector","","deserialize","","","drop","","","","","endomul","eq","","","equivalent","","","","","","extend_and","extend_chain_ffadd","extend_compact_multi_range_check","extend_foreign_field_mul","extend_generic","extend_high_bounds","extend_multi_range_check","extend_not_gadget_checked_length","extend_not_gadget_unchecked_length","extend_range_check","extend_rot","extend_single_ffadd","extend_xor_gadget","fmt","","","","","from","","","","","","","from_abi","","from_value","","gates","hash","","init","","","","","into","","","","","into_abi","","into_value","","is_none","","lookup_kinds","new","","none","","ocaml_binding","","ocaml_desc","","partial_cmp","","ps","public_input_size","rc","return_abi","","serialize","","","","shift","to_owned","","","","to_string","try_from","","","","","try_from_js_value","","try_into","","","","","typ","type_id","","","","","unique_id","","vbmul","vector_from_abi","","vector_into_abi","","verify","verify_cairo_gate","verify_complete_add","verify_endomul","verify_endomul_scalar","verify_generic","verify_poseidon","verify_vbmul","verify_witness","vzip","","","","","wires","zero","dst","src","typ","CamlCircuitGate","borrow","borrow_mut","coeffs","deref","deref_mut","drop","from","","","from_value","init","into","into_value","ocaml_binding","ocaml_desc","try_from","try_into","typ","type_id","unique_id","vzip","wires","constraints","index","lookups","runtime_tables","tables","CONSTRAINTS","LookupConfiguration","aggregation","borrow","borrow_mut","clone","clone_into","clone_to_uninit","constraints","deref","deref_mut","deserialize","drop","dummy_lookup","fmt","from","init","into","lookup_info","new","serialize","sorted","to_owned","try_from","try_into","type_id","verify","vzip","zk_patch","InconsistentTableLength","LookupConstraintSystem","LookupError","LookupSelectors","LookupTableIdCollision","LookupTableTooLong","TableIDZeroMustHaveZeroEntry","as_ref","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","configuration","create","default","deref","","","deref_mut","","","deserialize","","","drop","","","ffmul","fmt","","","","from","","","index","index_mut","init","","","into","","","lookup","lookup_selectors","lookup_table","lookup_table8","map","range_check","runtime_selector","runtime_table_offset","runtime_tables","serialize","","","table_ids","table_ids8","to_owned","","","to_string","try_from","","","try_into","","","type_id","","","vzip","","","xor","collision_type","length","maximum_allowed","Constant","ForeignFieldMul","JointLookup","JointLookupSpec","JointLookupValue","LocalPosition","Lookup","LookupFeatures","LookupInfo","LookupPattern","LookupPatternIter","LookupPatterns","LookupTableID","RangeCheck","SingleLookup","WitnessColumn","Xor","borrow","","","","","","","","","borrow_mut","","","","","","","","","by_row","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cmp","column","create","create_from_gates","default","","deref","","","","","","","","","deref_mut","","","","","","","","","describe","","","describe_vector","","","deserialize","","","","","","","","deserialize_as","drop","","","","","","","","","entry","","","eq","","","equivalent","","","","","","evaluate","","","","features","fmt","","","","","","","","foreign_field_mul","from","","","","","","","","","from_abi","","","from_gate","from_gates","","from_value","","","hash","index","index_mut","init","","","","","","","","","into","","","","","","","","","into_abi","","","into_iter","","into_value","","","is_none","","","iter","","joint_lookup_used","joint_lookups_used","len","","long_ref_from_abi","","","lookup","lookups","max_joint_size","","max_lookups_per_row","max_per_row","new","","","next","next_back","none","","","nth","ocaml_binding","","","ocaml_desc","","","par_bridge","partial_cmp","patterns","range_check","reduce","ref_from_abi","","","ref_mut_from_abi","","","return_abi","","","row","selector_polynomials_and_tables","serialize","","","","","","","","serialize_as","size_hint","table","table_id","","","to_owned","","","","","","","","","try_from","","","","","","","","","try_from_js_value","","","try_into","","","","","","","","","type_id","","","","","","","","","unique_id","","","uses_runtime_tables","value","vector_from_abi","","","vector_into_abi","","","vzip","","","","","","","","","wasm","xor","RuntimeTable","RuntimeTableCfg","RuntimeTableSpec","borrow","","","borrow_mut","","","caml","clone","","","clone_into","","","clone_to_uninit","","","constraints","data","deref","","","deref_mut","","","deserialize","","drop","","","first_column","fmt","","","from","","","","","","","id","","","","init","","","into","","","is_empty","len","","serialize","","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","CamlRuntimeTable","CamlRuntimeTableCfg","CamlRuntimeTableSpec","borrow","","","borrow_mut","","","data","deref","","","deref_mut","","","drop","","","first_column","from","","","","","","from_value","","","id","","","init","","","into","","","into_value","","","len","ocaml_binding","","","ocaml_desc","","","try_from","","","try_into","","","type_id","","","unique_id","","","vzip","","","GateLookupTable","GateLookupTables","LookupTable","RANGE_CHECK_TABLE_ID","RangeCheck","XOR_TABLE_ID","Xor","borrow","","","borrow_mut","","","caml","clone","","","clone_into","","","clone_to_uninit","","","combine_table","combine_table_entry","data","deref","","","deref_mut","","","deserialize","","drop","","","eq","","equivalent","","","","fmt","","","from","","","","get_table","has_zero_entry","hash","","id","index","index_mut","init","","","into","","","into_iter","is_empty","iter","len","","range_check","","serialize","","table_size","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","width","xor","","CamlLookupTable","borrow","borrow_mut","data","deref","deref_mut","drop","from","","from_value","id","init","into","into_value","ocaml_binding","ocaml_desc","try_from","try_into","type_id","unique_id","vzip","RANGE_CHECK_UPPERBOUND","TABLE_SIZE","range_check_table","TABLE_SIZE","xor_table","COLUMNS","LookupEvals","LookupPolys","LookupShifts","WitnessEvals","WitnessOverDomains","WitnessShifts","borrow","","","","","","borrow_mut","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","d4","d8","deref","","","","","","deref_mut","","","","","","drop","","","","","","from","","","","","","h1","","h2","","init","","","","","","into","","","","","","l","","lw","","next","","this","","to_owned","","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","w","z","and","complete_add","endomul_scalar","endosclmul","foreign_field_add","foreign_field_common","foreign_field_mul","generic","keccak","not","permutation","poseidon","range_check","rot","turshi","varbasemul","xor","create_and_witness","extend_and_witness","lookup_table","CompleteAdd","argument_type","borrow","borrow_mut","combined_constraints","constraint_checks","constraints","default","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip","EndomulScalar","argument_type","borrow","borrow_mut","combined_constraints","constraint_checks","constraints","default","deref","deref_mut","drop","from","gen_witness","init","into","try_from","try_into","type_id","vzip","EndoMulResult","EndosclMul","acc","argument_type","borrow","","borrow_mut","","combined_constraints","constraint_checks","constraints","default","deref","","deref_mut","","drop","","from","","gen_witness","init","","into","","n","try_from","","try_into","","type_id","","vzip","","circuitgates","gadget","witness","ForeignFieldAdd","argument_type","borrow","borrow_mut","combined_constraints","constraint_checks","constraints","default","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip","Add","FFOps","Sub","borrow","borrow_mut","clone","clone_into","clone_to_uninit","create_chain","deref","deref_mut","drop","eq","equivalent","","extend_witness_bound_addition","fmt","from","init","into","sign","to_owned","try_from","try_into","type_id","vzip","BINARY_MODULUS_EXP","BigUintArrayCompose","BigUintArrayFieldHelpers","BigUintForeignFieldHelpers","FieldArrayBigUintHelpers","FieldArrayCompact","FieldArrayCompose","HI","KimchiForeignElement","LIMB_BITS","LIMB_COUNT","LO","MI","TWO_TO_LIMB","binary_modulus","compose","","limbs","max_foreign_field_modulus","negate","to_biguints","to_compact_field_limbs","to_compact_limbs","","to_field_limbs","","to_fields","to_limbs","","two","two_to_2limb","two_to_limb","circuitgates","gadget","witness","ForeignFieldMul","argument_type","borrow","borrow_mut","combined_constraints","compose_carry","compute_intermediate_products","compute_native_modulus_values","constraint_checks","constraints","default","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip","GATE_COUNT","circuit_gate_constraint_count","circuit_gate_constraints","circuit_gate_selector_index","circuit_gates","combined_constraints","lookup_table","ExternalChecks","add_bound_check","add_compact_multi_range_check","add_high_bound_computation","add_limb_check","add_multi_range_check","borrow","borrow_mut","bounds","compact_multi_ranges","compute_bound","compute_high_bound","create","default","deref","deref_mut","drop","extend_witness_bound_addition","extend_witness_compact_multi_range_checks","extend_witness_high_bounds_computation","extend_witness_limb_checks","extend_witness_multi_range_checks","from","high_bounds","init","into","limb_ranges","multi_ranges","try_from","try_into","type_id","vzip","Add","CONSTRAINTS","Const","DOUBLE_GENERIC_COEFFS","DOUBLE_GENERIC_REGISTERS","GENERIC_COEFFS","GENERIC_REGISTERS","Generic","GenericGateSpec","Mul","Plus","Pub","argument_type","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","combined_constraints","constraint_checks","constraints","default","deref","","deref_mut","","drop","","from","","init","","into","","testing","to_owned","try_from","","try_into","","type_id","","vzip","","left_coeff","mul_coeff","output_coeff","","right_coeff","create_circuit","fill_in_witness","Keccak","OFF","RC","borrow","borrow_mut","bytestring","collapse","compose","constants","decompose","deref","deref_mut","drop","expand","expand_state","expand_word","from","init","into","num_blocks","pad","padded_length","quarters","reset","shift","sparse","try_from","try_into","type_id","vzip","witness","CAPACITY_IN_BYTES","CHI_SHIFTS_B_LEN","CHI_SHIFTS_B_OFF","CHI_SHIFTS_SUM_LEN","CHI_SHIFTS_SUM_OFF","DIM","IOTA_STATE_G_LEN","IOTA_STATE_G_OFF","KECCAK_COLS","PIRHO_DENSE_E_LEN","PIRHO_DENSE_E_OFF","PIRHO_DENSE_ROT_E_LEN","PIRHO_DENSE_ROT_E_OFF","PIRHO_EXPAND_ROT_E_LEN","PIRHO_EXPAND_ROT_E_OFF","PIRHO_QUOTIENT_E_LEN","PIRHO_QUOTIENT_E_OFF","PIRHO_REMAINDER_E_LEN","PIRHO_REMAINDER_E_OFF","PIRHO_SHIFTS_E_LEN","PIRHO_SHIFTS_E_OFF","QUARTERS","RATE_IN_BYTES","ROUNDS","SHIFTS","SHIFTS_LEN","SPONGE_BYTES_LEN","SPONGE_BYTES_OFF","SPONGE_COLS","SPONGE_NEW_BLOCK_LEN","SPONGE_NEW_BLOCK_OFF","SPONGE_NEW_STATE_LEN","SPONGE_NEW_STATE_OFF","SPONGE_OLD_STATE_LEN","SPONGE_OLD_STATE_OFF","SPONGE_SHIFTS_LEN","SPONGE_SHIFTS_OFF","SPONGE_XOR_STATE_LEN","SPONGE_XOR_STATE_OFF","SPONGE_ZEROS_LEN","SPONGE_ZEROS_OFF","STATE_LEN","THETA_DENSE_C_LEN","THETA_DENSE_C_OFF","THETA_DENSE_ROT_C_LEN","THETA_DENSE_ROT_C_OFF","THETA_EXPAND_ROT_C_LEN","THETA_EXPAND_ROT_C_OFF","THETA_QUOTIENT_C_LEN","THETA_QUOTIENT_C_OFF","THETA_REMAINDER_C_LEN","THETA_REMAINDER_C_OFF","THETA_SHIFTS_C_LEN","THETA_SHIFTS_C_OFF","THETA_STATE_A_LEN","THETA_STATE_A_OFF","Chi","Iota","PiRho","Rotation","Theta","borrow","","","","","borrow_mut","","","","","create","","","","dense_c","dense_e","dense_rot_c","dense_rot_e","deref","","","","","deref_mut","","","","","drop","","","","","expand_rot_c","expand_rot_e","extend_keccak_witness","from","","","","","init","","","","","into","","","","","quotient_c","quotient_e","remainder_c","remainder_e","round_constants","shifts_b","shifts_c","shifts_e","shifts_sum","state_b","state_e","state_f","state_g","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","extend_not_witness_checked_length","extend_not_witness_unchecked_length","CONSTRAINTS","Shifts","borrow","borrow_mut","deref","deref_mut","drop","eval_permutation_vanishing_polynomial","eval_vanishes_on_last_n_rows","from","init","into","new","permutation_vanishing_polynomial","shifts","try_from","try_into","type_id","vanishes_on_last_n_rows","vzip","zk_w","POS_ROWS_PER_HASH","Poseidon","ROUNDS_PER_HASH","ROUNDS_PER_ROW","SPONGE_WIDTH","STATE_ORDER","argument_type","borrow","borrow_mut","combined_constraints","constraint_checks","constraints","default","deref","deref_mut","drop","from","generate_witness","init","into","round_to_cols","try_from","try_into","type_id","vzip","circuitgates","gadget","witness","RangeCheck0","RangeCheck1","argument_type","","borrow","","borrow_mut","","combined_constraints","","constraint_checks","","constraints","","default","","deref","","deref_mut","","drop","","from","","init","","into","","try_from","","try_into","","type_id","","vzip","","GATE_COUNT","circuit_gate_constraint_count","circuit_gate_constraints","circuit_gates","combined_constraints","lookup_table","create","create_multi","create_multi_compact","create_multi_compact_limbs","create_multi_limbs","extend","extend_multi","extend_multi_compact","extend_multi_compact_limbs","extend_multi_from_fe","extend_multi_limbs","extend_single","range_check_0_row","Left","Right","Rot64","RotMode","argument_type","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","combined_constraints","constraint_checks","constraints","default","deref","","deref_mut","","drop","","eq","equivalent","","extend_rot","fmt","from","","init","","into","","lookup_table","to_owned","try_from","","try_into","","type_id","","vzip","","CIRCUIT_GATE_COUNT","Claim","Flags","Instruction","Transition","argument_type","","","","borrow","","","","borrow_mut","","","","circuit_gate_combined_constraints","combined_constraints","","","","constraint_checks","","","","constraints","","","","deref","","","","deref_mut","","","","drop","","","","from","","","","init","","","","into","","","","testing","try_from","","","","try_into","","","","type_id","","","","vzip","","","","witness","ensure_cairo_gate","cairo_witness","Layout","VarbaseMul","VarbaseMulResult","acc","argument_type","borrow","","","borrow_mut","","","combined_constraints","constraint_checks","constraints","default","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","n","try_from","","","try_into","","","type_id","","","vzip","","","witness","Xor16","argument_type","borrow","borrow_mut","combined_constraints","constraint_checks","constraints","create_xor_witness","default","deref","deref_mut","drop","extend_xor_witness","from","init","into","lookup_table","num_xors","try_from","try_into","type_id","vzip","RandomOracles","alpha","alpha_chal","beta","borrow","borrow_mut","caml","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","fmt","from","","gamma","init","into","joint_combiner","to_owned","try_from","try_into","type_id","u","u_chal","v","v_chal","vzip","zeta","zeta_chal","CamlRandomOracles","alpha","alpha_chal","beta","borrow","borrow_mut","deref","deref_mut","drop","from","","from_value","gamma","init","into","into_value","joint_combiner","ocaml_binding","ocaml_desc","try_from","try_into","type_id","u","u_chal","unique_id","v","v_chal","vzip","zeta","zeta_chal","COLUMNS","GateWires","PERMUTS","WIRES","Wirable","Wire","borrow","borrow_mut","caml","clone","clone_into","clone_to_uninit","col","create","default","deref","deref_mut","describe","describe_vector","deserialize","drop","eq","equivalent","","fmt","for_row","from","","from_abi","init","into","into_abi","is_none","long_ref_from_abi","new","","","none","ref_from_abi","ref_mut_from_abi","return_abi","row","serialize","to_owned","try_from","try_from_js_value","try_into","type_id","vector_from_abi","vector_into_abi","vzip","wasm","wire","","CamlWire","borrow","borrow_mut","col","deref","deref_mut","drop","from","","from_value","init","into","into_value","ocaml_binding","ocaml_desc","row","try_from","try_into","type_id","unique_id","vzip","ConstantCell","CopyBitsCell","CopyCell","CopyShiftCell","IndexCell","VariableBitsCell","VariableCell","Variables","WitnessCell","borrow","","","","","","","","borrow_mut","","","","","","","","create","","","","","","","","deref","","","","","","","","deref_mut","","","","","","","","drop","","","","","","","","from","","","","","","","","index","index_mut","init","","","","","","","","","init_cell","init_row","insert","into","","","","","","","","length","","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","value","","","","","","","","variable_map","variables","vzip","","","","","","","","KimchiCurve","endos","other_curve_endo","other_curve_generator","other_curve_sponge_params","pallas_endos","sponge_params","vesta_endos","ConstraintSystem","DifferentSRS","DomainConstructionFailed","DomainCreation","DomainCreationError","DomainSizeFailed","IncorrectCommitmentLength","IncorrectEvaluationsLength","IncorrectPrevChallengesLength","IncorrectPubicInputLength","IncorrectRuntimeProof","LazyEvaluation","LazySetup","LookupCommitmentMissing","LookupCreation","LookupEvalsMissing","MissingCommitment","MissingEvaluation","MissingPublicInputEvaluation","NoRoomForZkInWitness","NotZeroKnowledge","OpenProof","Permutation","ProofInconsistentLookup","Prover","ProverError","RuntimeTablesInconsistent","SRSHasBeenSet","SRSTooSmall","SetupError","ValueNotInTable","VerifierIndexError","VerifyError","WitnessCsInconsistent","WrongBlinders","borrow","","","","","borrow_mut","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","deref","","","","","deref_mut","","","","","drop","","","","","fmt","","","","","","","","","","from","","","","","","","init","","","","","into","","","","","to_owned","","","","","to_string","","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","LagrangeBasisEvaluations","borrow","borrow_mut","deref","deref_mut","domain_size","drop","evaluate","evaluate_boolean","from","init","into","new","try_from","try_into","type_id","vzip","constraints_expr","expr_linearization","linearization_columns","OraclesResult","all_alphas","borrow","borrow_mut","caml","combined_inner_product","deref","deref_mut","digest","drop","fq_sponge","from","ft_eval0","init","into","oracles","polys","powers_of_eval_points_for_chunks","public_evals","try_from","try_into","type_id","vzip","zeta1","CamlOracles","borrow","borrow_mut","create_caml_oracles","deref","deref_mut","digest_before_evaluations","drop","from","from_value","init","into","into_value","o","ocaml_binding","ocaml_desc","opening_prechallenges","public_evals","try_from","try_into","type_id","unique_id","vzip","FrSponge","absorb","absorb_evaluations","absorb_multiple","challenge","digest","new","LookupCommitments","PointEvaluations","ProofEvaluations","ProverCommitments","ProverProof","RecursionChallenge","aggreg","borrow","","","","","","borrow_mut","","","","","","caml","chals","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","coefficients","combine","comm","commitments","complete_add_selector","create","create_recursive","default","deref","","","","","","deref_mut","","","","","","deserialize","","","","","","drop","","","","","","dummy_with_witness_evaluations","emul_selector","endomul_scalar_selector","eq","","","","","","evals","","evaluate","fmt","","","","","","foreign_field_add_selector","foreign_field_mul_lookup_selector","foreign_field_mul_selector","from","","","","","","","","","","from_value","ft_eval1","generic_selector","get_column","init","","","","","","into","","","","","","into_value","lookup","lookup_aggregation","lookup_gate_lookup_selector","lookup_sorted","lookup_table","map","","map_ref","","mul_selector","new","ocaml_binding","ocaml_desc","oracles","poseidon_selector","prev_challenges","proof","public","range_check0_selector","range_check1_selector","range_check_lookup_selector","rot_selector","runtime","runtime_lookup_table","runtime_lookup_table_selector","s","serialize","","","","","","sorted","t_comm","to_owned","","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","unique_id","vzip","","","","","","w","w_comm","xor_lookup_selector","xor_selector","z","z_comm","zeta","zeta_omega","CamlProofEvaluations","CamlRecursionChallenge","borrow","","borrow_mut","","chals","clone","","clone_into","","clone_to_uninit","","coefficients","comm","complete_add_selector","deref","","deref_mut","","drop","","emul_selector","endomul_scalar_selector","foreign_field_add_selector","foreign_field_mul_lookup_selector","foreign_field_mul_selector","from","","","from_value","","generic_selector","init","","into","","into_value","","lookup_aggregation","lookup_gate_lookup_selector","lookup_sorted","lookup_table","mul_selector","ocaml_binding","","ocaml_desc","","poseidon_selector","range_check0_selector","range_check1_selector","range_check_lookup_selector","rot_selector","runtime_lookup_table","runtime_lookup_table_selector","s","to_owned","","try_from","","try_into","","type_id","","unique_id","","vzip","","w","xor_lookup_selector","xor_selector","z","caml","internal_traces","CamlLookupCommitments","CamlProofWithPublic","CamlProverCommitments","CamlProverProof","CamlProverTraces","aggreg","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","commitments","deref","","","","deref_mut","","","","drop","","","","evals","from","","","","","","","from_value","","","","ft_eval1","init","","","","into","","","","into_value","","","","lookup","ocaml_binding","","","","ocaml_desc","","","","prev_challenges","proof","","public","public_evals","runtime","sorted","t_comm","to_owned","","try_from","","","","try_into","","","","type_id","","","","unique_id","","","","vzip","","","","w_comm","z_comm","TRACES","Traces","borrow","borrow_mut","build_polynomials","caml","chunk_eval_zeta_omega_poly","clone","clone_into","clone_to_uninit","commit_to_witness_columns","compute_ft_poly","compute_index_evals","compute_quotient_poly","create_aggregated_ipa","create_recursive","create_recursive_done","default","deref","deref_mut","drop","eval_witness_polynomials_over_domains","fmt","","from","ft_eval_zeta_omega","init","into","lagrange_basis_eval_zeta_omega_poly","lagrange_basis_eval_zeta_poly","pad_witness","pasta_fp_plonk_proof_create","pasta_fq_plonk_proof_create","serialize","set_up_fq_sponge","start_tracing","take_traces","to_owned","to_string","try_from","try_into","type_id","use_lookup","vzip","z_permutation_aggregation_polynomial","CamlTraces","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","","from_value","init","into","into_value","ocaml_binding","ocaml_desc","try_from","try_into","type_id","unique_id","vzip","ProverIndex","borrow","borrow_mut","clone","clone_into","clone_to_uninit","column_evaluations","compute_verifier_index_digest","create","cs","deref","deref_mut","deserialize","drop","fmt","from","init","into","linearization","max_poly_size","perm_aggreg","perm_lnrz","perm_quot","powers_of_alpha","serialize","srs","testing","to_owned","try_from","try_into","type_id","verifier_index","","verifier_index_digest","","verify","verify_generic","vzip","new_index_for_test","new_index_for_test_with_lookups","new_index_for_test_with_lookups_and_custom_srs","Context","Err","Ok","Result","batch_verify","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","get_column","init","into","proof","public_input","try_from","try_into","type_id","verifier_index","verify","vzip","LookupVerifierIndex","VerifierIndex","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","coefficients_comm","complete_add_comm","deref","","deref_mut","","deserialize","","digest","domain","drop","","emul_comm","endo","endomul_scalar_comm","fmt","","foreign_field_add_comm","foreign_field_mul_comm","from","","from_file","generic_comm","init","","into","","joint_lookup_used","linearization","lookup_index","lookup_info","lookup_selectors","lookup_table","max_poly_size","mul_comm","permutation_vanishing_polynomial_m","","powers_of_alpha","prev_challenges","psm_comm","public","range_check0_comm","range_check1_comm","rot_comm","runtime_tables_selector","serialize","","shift","sigma_comm","srs","","table_ids","to_file","to_owned","","try_from","","try_into","","type_id","","vzip","","w","","xor_comm","zk_rows"],"q":[[0,"kimchi"],[26,"kimchi::alphas"],[96,"kimchi::bench"],[128,"kimchi::circuits"],[142,"kimchi::circuits::argument"],[237,"kimchi::circuits::berkeley_columns"],[394,"kimchi::circuits::constraints"],[580,"kimchi::circuits::constraints::GateError"],[582,"kimchi::circuits::domain_constant_evaluation"],[609,"kimchi::circuits::domains"],[657,"kimchi::circuits::expr"],[1161,"kimchi::circuits::expr::ConstantTerm"],[1163,"kimchi::circuits::expr::constraints"],[1181,"kimchi::circuits::expr::prologue"],[1189,"kimchi::circuits::gate"],[1422,"kimchi::circuits::gate::CircuitGateError"],[1425,"kimchi::circuits::gate::caml"],[1448,"kimchi::circuits::lookup"],[1453,"kimchi::circuits::lookup::constraints"],[1482,"kimchi::circuits::lookup::index"],[1567,"kimchi::circuits::lookup::index::LookupError"],[1570,"kimchi::circuits::lookup::lookups"],[1878,"kimchi::circuits::lookup::runtime_tables"],[1951,"kimchi::circuits::lookup::runtime_tables::caml"],[2014,"kimchi::circuits::lookup::tables"],[2105,"kimchi::circuits::lookup::tables::caml"],[2126,"kimchi::circuits::lookup::tables::range_check"],[2129,"kimchi::circuits::lookup::tables::xor"],[2131,"kimchi::circuits::polynomial"],[2250,"kimchi::circuits::polynomials"],[2267,"kimchi::circuits::polynomials::and"],[2270,"kimchi::circuits::polynomials::complete_add"],[2288,"kimchi::circuits::polynomials::endomul_scalar"],[2307,"kimchi::circuits::polynomials::endosclmul"],[2341,"kimchi::circuits::polynomials::foreign_field_add"],[2344,"kimchi::circuits::polynomials::foreign_field_add::circuitgates"],[2362,"kimchi::circuits::polynomials::foreign_field_add::witness"],[2388,"kimchi::circuits::polynomials::foreign_field_common"],[2420,"kimchi::circuits::polynomials::foreign_field_mul"],[2423,"kimchi::circuits::polynomials::foreign_field_mul::circuitgates"],[2444,"kimchi::circuits::polynomials::foreign_field_mul::gadget"],[2451,"kimchi::circuits::polynomials::foreign_field_mul::witness"],[2483,"kimchi::circuits::polynomials::generic"],[2529,"kimchi::circuits::polynomials::generic::GenericGateSpec"],[2534,"kimchi::circuits::polynomials::generic::testing"],[2536,"kimchi::circuits::polynomials::keccak"],[2567,"kimchi::circuits::polynomials::keccak::constants"],[2623,"kimchi::circuits::polynomials::keccak::witness"],[2712,"kimchi::circuits::polynomials::not"],[2714,"kimchi::circuits::polynomials::permutation"],[2735,"kimchi::circuits::polynomials::poseidon"],[2760,"kimchi::circuits::polynomials::range_check"],[2763,"kimchi::circuits::polynomials::range_check::circuitgates"],[2799,"kimchi::circuits::polynomials::range_check::gadget"],[2805,"kimchi::circuits::polynomials::range_check::witness"],[2818,"kimchi::circuits::polynomials::rot"],[2861,"kimchi::circuits::polynomials::turshi"],[2933,"kimchi::circuits::polynomials::turshi::testing"],[2934,"kimchi::circuits::polynomials::turshi::witness"],[2935,"kimchi::circuits::polynomials::varbasemul"],[2982,"kimchi::circuits::polynomials::xor"],[3004,"kimchi::circuits::scalars"],[3036,"kimchi::circuits::scalars::caml"],[3066,"kimchi::circuits::wires"],[3120,"kimchi::circuits::wires::caml"],[3141,"kimchi::circuits::witness"],[3272,"kimchi::curve"],[3280,"kimchi::error"],[3412,"kimchi::lagrange_basis_evaluations"],[3429,"kimchi::linearization"],[3432,"kimchi::oracles"],[3456,"kimchi::oracles::caml"],[3479,"kimchi::plonk_sponge"],[3486,"kimchi::proof"],[3678,"kimchi::proof::caml"],[3750,"kimchi::prover"],[3752,"kimchi::prover::caml"],[3851,"kimchi::prover::internal_traces"],[3896,"kimchi::prover::internal_traces::caml"],[3916,"kimchi::prover_index"],[3954,"kimchi::prover_index::testing"],[3957,"kimchi::verifier"],[3980,"kimchi::verifier_index"],[4059,"core::clone"],[4060,"core::default"],[4061,"core::result"],[4062,"serde::de"],[4063,"core::fmt"],[4064,"core::iter::traits::iterator"],[4065,"core::slice::iter"],[4066,"core::iter::adapters::skip"],[4067,"core::iter::adapters::take"],[4068,"core::iter::adapters::cloned"],[4069,"ark_ff::fields"],[4070,"core::ops::range"],[4071,"core::option"],[4072,"serde::ser"],[4073,"alloc::string"],[4074,"core::any"],[4075,"mina_curves::pasta::curves::vesta"],[4076,"poly_commitment::ipa"],[4077,"mina_curves::pasta::fields::fp"],[4078,"alloc::vec"],[4079,"mina_poseidon::poseidon"],[4080,"ark_ff::fields::prime"],[4081,"core::hash"],[4082,"core::cmp"],[4083,"ark_ff::fields::fft_friendly"],[4084,"ark_poly::domain::radix2"],[4085,"ark_poly::evaluations::univariate"],[4086,"std::collections::hash::map"],[4087,"ark_poly::polynomial::univariate::dense"],[4088,"ocaml::value"],[4089,"alloc::sync"],[4090,"ocaml_interop::runtime"],[4091,"ocaml_gen"],[4092,"wasm_bindgen"],[4093,"alloc::boxed"],[4094,"num_traits::identities"],[4095,"core::marker"],[4096,"core::ops::index"],[4097,"std::collections::hash::set"],[4098,"core::ops::arith"],[4099,"core::ops::function"],[4100,"num_bigint::biguint"],[4101,"core::convert"],[4102,"poly_commitment"],[4103,"rand::rng"],[4104,"ark_serialize"],[4105,"rayon::iter::par_bridge"],[4106,"poly_commitment::commitment"],[4107,"core::iter::traits::double_ended"],[4108,"o1_utils::foreign_field"],[4109,"turshi::runner"],[4110,"mina_poseidon::sponge"],[4111,"mina_poseidon::sponge::caml"],[4112,"ocaml"],[4113,"kimchi::circuits::witness::constant_cell"],[4114,"kimchi::circuits::witness::copy_bits_cell"],[4115,"kimchi::circuits::witness::copy_cell"],[4116,"kimchi::circuits::witness::copy_shift_cell"],[4117,"kimchi::circuits::witness::index_cell"],[4118,"kimchi::circuits::witness::variable_bits_cell"],[4119,"kimchi::circuits::witness::variable_cell"],[4120,"kimchi::circuits::witness::variables"],[4121,"o1_utils::lazy_cache"],[4122,"ark_poly::domain"],[4123,"ark_ec"],[4124,"rand_core"],[4125,"poly_commitment::commitment::caml"],[4126,"poly_commitment::ipa::caml"],[4127,"std::thread::local"],[4128,"std::path"],[4129,"once_cell::sync"]],"i":"````````````````````````````fAh101111101011001101011101100000000000000000000000000000111110101010`````Db``000000000EnF`FbFd44321044444``````````````BBd`````0`Bf00FhFnFjGn42104144422135215352022104210442104244442104402104210420442104210421042104212222GfG`1``01Hj`2``12010`000002022200HfFl001Hh431204304343433`00`012043120434301204343443344312043100003`101204312043431004304332224322434341204312043120430012043`0``0```K`0```0``J`JdJfJhE`543210543210321032102110343210543210533321040043210510100321050313104321053333021432105432105333434034133302121040403131333314`321040032104321053432105432105333432105310`Ln0`Ld0000000000000000000000000Hn000``0Ib1010101000000101001011010101001010101010NbGjMfMbNl`321`321`Nd1N`2OdOh``234````7654OjMn```Md2`Nh0`;:9``2803002333;:98``;:98000`088;:98;:9807878`09:912697``:3GlNf48;IlGd4Nj<=Nn9548<?3261=>0Mf30Mb76:>0583?Nl387;?1694Nd1498<N`38;61259849Od545546`58654?;:>1498<7236?;:>1498<7236:><736554?;:>1498<7236;:>149<723::>>4499<<7733Oh665546565766556Oj0<Mn47<?:569Gj00999992?>1555888=<Nh<78;05555?9>0;3GlNf48;IlGd4Nj<=Nn9548<?3261=>06A@`Mf6:>Mb00`>217;?01010Md22<N`22Nd6;434354:>13<<4373:943`::><7Nl7554465;?243?2413?241<;?24:=81075477Oj50=<Mn46<;?:3291>=046<;?:32977771>=046<;?:329?`Gj7Od3GlNf48:IlGdNhNj;:NnMfMb83AAb0``Gb00`0`0000000000````````Ih000````0`AAd0Hd`22ABn233`32231033333233132JjABf35410`354135413541351AAf002222222222222222222262465214652146464624652124654466552222222222222465524652211464614646521465214646466214646464621246462144652546521464652124652146246462222222224652122AC`00`ABb000000000000000000000````````AD`0000`000000000000`0000`0`ADj```000ADh10ADl21021021021000121021021021012210210112102101000110002100021022102102102101ADnAE`0AEjABh````0``````0`10AEdKbAChAEfAEh6AElAEn7654328107465432810765432810765432810773446565432810765432810765465465432817ADf765439218AEb13879887799143368765:329887654:32987698787998887654:32987654:32987682879876897882876899696876228762879879297838768768765687654:3912901387654:32987654:32987687654:32987654:3298797487687687654:329`8```AFfLfEd210`210210210`02102102121012102221100121021021011221210210210210210```AFnAFhAFj210221021021002211002102102102102101210210210210210210210````AFd`00AG`Kj210`210210210``0210210212102122112102100`02101121021010110`12122102102102102100`1`AGh0000000000000000000````````````AGjAGlJnAGnAH`AHb5432105432105432105432103354321054321054321054321020205432105432102020414154321054321054321054321054321055`````````````````````AHd0000000000000000`AHf0000000000`000000``AHhAHj1010000010101010`1010110101010````AHl0000000000000000AAj`000000`000000`0000000000``````````````AHnAI`AIbAId33AIf44AIh5AIj062666````AIl000```0000000000000````````AIn00000000```0000000000000000000AAn`0``````000AJ`01011110000010101010101`101010101AJbAJd101`````BBf0000`000000000000000000000``````````````````````````````````````````````````````````````BBhAJfAJhAJjAJl432103210323243210432104321032`432104321043210323201321231043210432104321043210````AJn0000``0000`0000`0```````AK`0000000000`00`0000`````AKdAKf10101010101010101010101010101010```````````````````AB`0``AKl10101110000101010111`1101010`110101010`````BBjBBlBBnBC`32103210`321032103210321032103210321032103210`3210321032103210``````AL`ALbBCb2102111110210210210210210212021021021021``ALd00000`0000`000``0000`ALf0000`0000000000000000000000000`ALj0000000000000000000000000000``````ACb0`0000000000000000000000000AM`AAh222222222222222`10`ALn0000000000000000000`````````AMdAMfAMhAMjAMlAMnAN`ANb76543210765432107654321076543210765432107654321000`76543210``0765432103AKj87654321876543218765432108765432``87654321`Eh000`0`JbANdM`2`0111112ACj232222002020`0ANf3`1``111324013240132401324013240132401324013240113322440011324401324013240132401324013240132401324013240`ANj000000000000000````ANn00`0000000000000000000`AOb0`0000000000000000000`AOd00000``````AOfL`Lb2AOjDhEf435210`0435210435210435210330131144352104352104352104352103334352100134352103334335522100413343521043521042333343433044131133333533343521052435210435210435210435210443521032333244``B@fB@`10110101001010101000000110100101010000001010000000001010101010100000```````B@bBA`B@n2B@d21303030301213021302130122133002130121302130213002130213012112330302130213021302130213000``BAf00`00000000000000000000000000000``00000000`BAh000000000000000000`El000000000000000000000000`00000000000````B@h0``BAl000000000000000`0``BAnAO`101010100010101000100001000100010101001110000000000011000001010101010100000","f":"````````````````````````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{{f{c}}}}}{{f{c}}}h}{{b{b{dc}}}j{}}{{bl}j}{{}{{f{c}}}n}{A`{{b{c}}}{}}0{A`{{b{dc}}}{}}0{c{{Ab{{f{e}}}}}AdAf}{A`j}0{{{b{d{Ah{ec}}}}}jAj{{An{}{{Al{c}}}}}}{{{b{{f{c}}}}{b{dB`}}}Bb{}}{{{b{{f{c}}}}{b{dB`}}}BbBd}{{{b{{Ah{ec}}}}{b{dB`}}}Bb{AjBd}{{An{}{{Al{c}}}}Bd}}{cc{}}0{{{b{{f{c}}}}BfBh}{{Ah{{C`{{Bn{{Bl{{Bj{c}}}}}}}}c}}}Cb}{{{b{{f{c}}}}BfBh}{{Ah{{Cd{Bh}}Bh}}}Cb}{{}A`}0{{{b{d{f{c}}}}c}jCb}{{}c{}}0{{}c{}}{{}{{Cf{cegikmoAaAcAeAg}}}{}{}{}{}{}{}{}{}{}{}{}}{{}{{Cf{cegi}}}{}{}{}{}}{{}{{Cf{cegikmoAaAcAe}}}{}{}{}{}{}{}{}{}{}{}}{{}j}{{}{{Cf{c}}}{}}{{}{{Cf{cegikm}}}{}{}{}{}{}{}}{{}{{Cf{cegik}}}{}{}{}{}{}}5{{}{{Cf{cegikmoAaAc}}}{}{}{}{}{}{}{}{}{}}{{}{{Cf{cegikmoAaAcAeAgAi}}}{}{}{}{}{}{}{}{}{}{}{}{}}{{}{{Cf{ceg}}}{}{}{}}{{}{{Cf{ce}}}{}{}}670{{}{{Cf{cegikmoAa}}}{}{}{}{}{}{}{}{}}{{}{{Cf{cegikmo}}}{}{}{}{}{}{}{}}3<:510764{{{b{d{Ah{ec}}}}}{{Ch{g}}}Aj{{An{}{{Al{c}}}}}{}}{{{b{d{f{c}}}}BfBh}jCb}{{{b{{f{c}}}}e}AbCjCl}{bc{}}{bCn}{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{bD`}0{{}c{}}0`````{{{b{Db}}{b{{Dn{{Cf{{Dh{Dd{Df{Dd}}}}{Dl{Dj}}}}}}}}}j}{{{b{E`}}{b{{Eb{Dl}}}}{b{{Dn{Ed}}}}{b{{Dn{{Ef{c}}}}}}}jEh}{{{Ej{c}}Cn}{{Cf{{El{c{Df{c}}}}{Eb{Dl}}{Dl{Ed}}{Dl{{Ef{c}}}}}}}Eh}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Db}}}{{Cf{{Dh{Dd{Df{Dd}}}}{Dl{Dj}}}}}}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{cc{}}{{}A`}{{}c{}}{EnDl}{F`Dl}{FbDl}{FdDl}{BhDb}{DbA`}{EnFf}{F`Ff}{FbFf}{FdFf}{{{b{Db}}}A`}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}c{}}`````````````````````````{{{b{Fh}}}Bf}{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{FjFl}{{{b{Bf}}}Bf}{{b{b{dc}}}j{}}{{bl}j}{{{b{{Fn{ce}}}}A`}eCb{{Gb{cG`}}}}{{{b{{Fn{ce}}}}A`A`}{{Dl{e}}}Cb{{Gb{cG`}}}}{FjDl}{{{b{Fh}}{b{{f{c}}}}{b{dGd}}}{{Gf{c}}}Gh}{{{b{{f{c}}}}{b{dGd}}}{{Gf{c}}}Gh}{{{b{{Fn{ce}}}}{Gj{cG`}}}eCb{{Gb{cG`}}}}{FjGl}{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}{{{b{Fh}}{b{dGd}}}{{Dl{{Gf{c}}}}}Gh}{{{b{dGd}}}{{Dl{{Gf{c}}}}}Gh}{{{Gn{c}}{Dl{c}}{Gl{c}}{Fl{c}}}{{Fn{ce}}}Cb{{Gb{cG`}}}}{GnEb}{{}{{Fn{ce}}}{}{}}{A`{{b{c}}}{}}000{A`{{b{dc}}}{}}000{c{{Ab{Bf}}}Ad}{A`j}000{{{b{{Fn{ce}}}}}eCb{{Gb{cG`}}}}{{{b{Bf}}{b{Bf}}}H`}{{b{b{c}}}H`{}}0{{{b{Bf}}{b{dB`}}}Bb}{cc{}}000{{{b{Bf}}{b{dc}}}jHb}{{{b{{Gn{c}}}}{Cf{HdA`}}}{{b{c}}}{}}{{}A`}000{{}c{}}000{{{b{{Fn{ce}}}}A`A`}eCb{{Gb{cG`}}}}?{{{b{Bf}}c}AbCl}{bc{}}{c{{Ab{e}}}{}{}}000{{}{{Ab{c}}}{}}000{bD`}000{{}c{}}000{{{b{{Fn{ce}}}}HdA`}eCb{{Gb{cG`}}}}{FjGn}{{{b{{Fn{ce}}}}A`}eCb{{Gb{cG`}}}}{{{b{{Fn{ce}}}}A`A`}{{Dl{e}}}Cb{{Gb{cG`}}}}10``````````````````````````````{Hfb}{Fl}0{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{HhFl}{{{b{G`}}}G`}{{{b{Hj}}}Hj}{{b{b{dc}}}j{}}0{{bl}j}0{{{b{Hj}}{b{Hj}}}Hl}{A`{{Gf{c}}}{}}{Hhb}{{{b{{Hh{c}}}}{b{e}}}HnI`{}}{c{{Gf{c}}}{}}{HhGl}{A`{{b{c}}}{}}0000{A`{{b{dc}}}{}}0000{c{{Ab{G`}}}Ad}{c{{Ab{Hj}}}Ad}{HhIb}{A`j}0000{{{b{G`}}{b{G`}}}H`}{{{b{Hj}}{b{Hj}}}H`}{{b{b{c}}}H`{}}000{{{b{G`}}{b{dB`}}}Bb}0{{{b{Hj}}{b{dB`}}}Bb}{cc{}}0000{Fl}{{{b{{Hh{c}}}}}{{b{{Fl{c}}}}}I`}{{{b{{Hh{c}}}}{b{e}}}{{Ch{{b{{If{c{Id{c}}}}}}}}}I`{}}{{{b{{Hh{c}}}}}{{b{{Gl{c}}}}}I`}{{{b{{Hh{c}}}}Hn}{{Id{c}}}I`}{{{b{Hj}}{b{dc}}}jHb}{Ih{{Gf{c}}}{}}{{{b{{Fl{c}}}}G`}{{b{e}}}Cb{}}{HhIj}{{}A`}0000{{}c{}}0000{bH`}{{{b{Hj}}}H`}<{{{b{{Hh{c}}}}}cI`}{Hh}{{b{b{d{Ij{Ilc}}}}}Cn{}}{{{b{Hj}}{b{d{Ij{IlHj}}}}}Cn}{HhCh}21{{{b{Hj}}{b{Hj}}}{{Ch{Hl}}}}{HfCh}0{Hfb}{{{b{G`}}c}AbCl}{{{b{Hj}}c}AbCl}2276{bc{}}0{bCn}{c{{Ab{e}}}{}{}}0000{{}{{Ab{c}}}{}}0000{bD`}0000{{{b{{Hh{c}}}}}{{b{{If{c{Id{c}}}}}}}I`}{Hhb}{{}c{}}0000{{A`Hd}{{Gf{c}}}{}}2{A`{{Gf{c}}}{}}03`````````{{}A`}{{}In}{b{{b{c}}}{}}00000{{{b{d}}}{{b{dc}}}{}}00000{{{J`{c}}}{{Ab{{E`{c}}Jb}}}Gh}{{{b{Jd}}}Jd}{{{b{{Jf{c}}}}}{{Jf{c}}}{hGh}}{{{b{{Jh{c}}}}}{{Jh{c}}}{hGh}}{{{b{{E`{c}}}}}{{E`{c}}}{hGh}}{{b{b{dc}}}j{}}000{{bl}j}000{JfEb}{JhEb}{JhIf}{{{Dl{{Jj{c}}}}}{{J`{c}}}Gh}{{}Jd}{A`{{b{c}}}{}}00000{A`{{b{dc}}}{}}00000{{}j}0{c{{Ab{Jd}}}Ad}{c{{Ab{{Jf{e}}}}}AdGh}{c{{Ab{{Jh{e}}}}}Ad{nGh}}{c{{Ab{{E`{e}}}}}AdGh}{{{J`{c}}H`}{{J`{c}}}Gh}{E`H`}{E`Ib}{A`j}00000={E`}>{{{b{{E`{c}}}}{b{{Eb{{Jl{c}}}}}}{b{{Jl{c}}}}}{{Jn{c}}}Gh}{E`Jd}{{{b{Jd}}{b{dB`}}}Bb}{{{b{{Jf{c}}}}{b{dB`}}}Bb{BdGh}}{{{b{{Jh{c}}}}{b{dB`}}}Bb{BdGh}}{{{b{{E`{c}}}}{b{dB`}}}Bb{BdGh}}{{{b{K`}}{b{dB`}}}Bb}{{{Dl{{Jj{c}}}}}{{E`{c}}}Gh}{JdH`}{JhCh}102{cc{}}00000{BhJd}{{{b{{Dn{{Jj{c}}}}}}H`}JdGh}{{{b{{Dn{{Jj{c}}}}}}Kb}JdGh}{KdJd}{E`Kf}{JfJl}{JhIf}{{}A`}00000{{}c{}}00000{JdBh}{{Jd{b{Kh}}}Kd}{{{b{c}}}H`{}}{{{J`{c}}H`}{{J`{c}}}Gh}{ce{}{}}{{{J`{c}}{Dl{{Kj{c}}}}}{{J`{c}}}Gh}:{JdKb}{{{J`{c}}{Ch{A`}}}{{J`{c}}}Gh}:{{}c{}}{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}{{{b{{Lb{{L`{c}}}}}}ccec}cGh{{An{}{{Al{c}}}}}}{JfEb}{JhEb}{JfJl}{JhIf}{{{b{{E`{c}}}}}{{Kf{{Ld{c}}}}}Gh}{{{J`{c}}A`}{{J`{c}}}Gh}{E`A`}10{JdH`}{JhCh}10{ce{}{}}{ce{}{}}{{}}43{{{J`{c}}{Ch{{Dl{{Lf{c}}}}}}}{{J`{c}}}Gh}{{Ih{b{{Dn{{Jj{c}}}}}}{b{{Ib{c}}}}{b{{Id{c}}}}H`}{{If{c{Id{c}}}}}Gh}{{{b{Jd}}c}AbCl}{{{b{{Jf{c}}}}e}AbGhCl}{{{b{{Jh{c}}}}e}AbGhCl}{{{b{{E`{c}}}}e}AbGhCl}{{{J`{c}}{Kf{{Ld{c}}}}}{{J`{c}}}Gh}{E`Eb}{E`Dl}{bc{}}000{c{{Ab{e}}}{}{}}00000{Lh{{Ab{Jdc}}}{}}{{}{{Ab{c}}}{}}00000{bD`}00000{{}Lj}{c{{Ll{{Dn{Jd}}}}}{}}{{{Ll{{Dn{Jd}}}}}c{}}{{}c{}}00000{JdH`}{JhCh}{E`In}{A`A`}{LnCn}{LnA`}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{Ld{c}}}}}{{Ld{c}}}{hI`}}{{b{b{dc}}}j{}}{{bl}j}{LdIf}0{{{Ib{c}}In}{{Ch{{Ld{c}}}}}I`}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{c{{Ab{{Ld{e}}}}}AdI`}{A`j}{{{b{{Ld{c}}}}{b{dB`}}}Bb{BdI`}}{cc{}}{{}A`}{{}c{}}9{LdJl}:{{{b{{Ld{c}}}}e}AbI`Cl}{bc{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}?{{}c{}}``````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Hn}}}Hn}{{{b{{Ib{c}}}}}{{Ib{c}}}{hI`}}{{b{b{dc}}}j{}}0{{bl}j}0{A`{{Ab{{Ib{c}}M`}}}I`}{IbId}000{A`{{b{c}}}{}}0{A`{{b{dc}}}{}}0{c{{Ab{{Ib{e}}}}}AdI`}{A`j}0{{{b{Hn}}{b{Hn}}}H`}{{{b{Hn}}{b{dB`}}}Bb}{{{b{{Ib{c}}}}{b{dB`}}}Bb{BdI`}}{cc{}}0{{}A`}0{{}c{}}0{{{b{{Ib{c}}}}e}AbI`Cl}{bc{}}0{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{bD`}0{{}c{}}0```````````````````````````````````````````````````````````````````````````````````````````{{{Mb{c}}{Mb{c}}}{{Mb{c}}}Md}{{{b{d{Mf{ce}}}}{Mf{ce}}}j{Mhh}h}{{{b{{Mb{c}}}}{b{Jd}}}{{Mb{c}}}{MdMj}}{{{b{{Md{}{{Ml{c}}}}}}{b{{Gl{c}}}}}{{Md{}{{Ml{c}}}}}{}}{{{b{{Mn{c}}}}{b{{Gl{e}}}}}{{Mn{c}}}h{}}{{{b{{N`{ce}}}}{b{{Gl{g}}}}}{{N`{ce}}}hNb{}}{{{b{{Mb{c}}}}{b{{Gl{e}}}}}{{Mb{c}}}{Mdh}{}}{{{b{{Nd{ce}}}}{b{{Gl{g}}}}}{{Nd{ce}}}Mdh{}}``{{{b{{Mf{{Gj{cG`}}Hj}}}}}{{Mf{{Gj{cG`}}Hj}}}Gh}{b{{b{c}}}{}}000000000000{{{b{d}}}{{b{dc}}}{}}000000000000{{{b{{Mf{{Gj{cG`}}Hj}}}}{b{dGd}}}{{Mf{{Gj{cG`}}Hj}}}Gh}{{{b{dGd}}g}gCb{}{{Gb{ce}}}}{{cHd}{{Mf{ec}}}{}{}}0{{{b{{Gl{c}}}}}{{Gl{c}}}h}{{{b{{Nf{c}}}}}{{Nf{c}}}h}{{{b{{Mn{c}}}}}{{Mn{c}}}h}{{{b{{N`{ce}}}}}{{N`{ce}}}hh}{{{b{{Mb{c}}}}}{{Mb{c}}}h}{{{b{Il}}}Il}{{{b{Nh}}}Nh}{{{b{Nj}}}Nj}{{{b{{Nd{ce}}}}}{{Nd{ce}}}hh}{{{b{{Nl{ceg}}}}}{{Nl{ceg}}}hhh}{{{b{{Nn{ce}}}}}{{Nn{ce}}}hh}{{b{b{dc}}}j{}}0000000000{{bl}j}0000000000{{{b{{Nf{c}}}}{b{{Nf{c}}}}}HlO`}{{{b{Il}}{b{Il}}}Hl}{{A`{Ch{{b{{Fj{c}}}}}}}{{Mf{{Gj{cG`}}Hj}}}Gh}{Nf}{{{b{{Od{}{{Ob{c}}}}}}{b{c}}}Hn{}}{{c{Dl{{Mf{{Gj{eg}}i}}}}}{{Mf{{Gj{eg}}i}}}{{An{}{{Al{Bh}}}}}CbNb{MjOf}}{{c{Dl{{Mb{{Nd{{Mb{{N`{eg}}}}i}}}}}}}{{Mb{{Nd{{Mb{{N`{eg}}}}i}}}}}{{An{}{{Al{Bh}}}}}CbNb{MjOf}}{c{{Mf{ce}}}{}{}}{{{Gj{cG`}}{Ch{{b{{Fj{c}}}}}}}{{Mf{{Gj{cG`}}Hj}}}Gh}1{Nn}`{{{b{{Mf{{Gj{cG`}}Hj}}}}}{{Mf{{Gj{cG`}}Hj}}}Gh}{{}Gd}{{}{{Nn{ce}}}n{}}{{{b{{Mf{ce}}}}InIn}In{}{}}{{{b{{Mb{{Nd{ce}}}}}}InIn}In{}{}}{A`{{b{c}}}{}}000000000000{A`{{b{dc}}}{}}000000000000{c{{Ab{{Nf{e}}}}}AdAf}{c{{Ab{{Mn{e}}}}}AdAf}{c{{Ab{Nh}}}Ad}{c{{Ab{Nj}}}Ad}{c{{Ab{{Nl{egi}}}}}AdAfAfAf}{c{{Ab{{Nn{eg}}}}}AdAfAf}{{{Mf{ce}}}{{Mf{ce}}}{}{}}={{{Mb{{Nd{ce}}}}}{{Mb{{Nd{ce}}}}}{}{}}{A`j}000000000000{Gl}{{{b{{Nf{c}}}}{b{{Nf{c}}}}}H`Mj}{{{b{{Mn{c}}}}{b{{Mn{c}}}}}H`Mj}{{{b{{N`{ce}}}}{b{{N`{ce}}}}}H`MjMj}{{{b{{Mb{c}}}}{b{{Mb{c}}}}}H`Mj}{{{b{Il}}{b{Il}}}H`}{{{b{Nh}}{b{Nh}}}H`}{{{b{Nj}}{b{Nj}}}H`}{{{b{{Nd{ce}}}}{b{{Nd{ce}}}}}H`MjMj}{{{b{{Nl{ceg}}}}{b{{Nl{ceg}}}}}H`MjMjMj}{{b{b{c}}}H`{}}0000000000000{{{b{{Oh{}{{Ob{c}}}}}}c}{{Ab{{L`{e}}{Oj{c}}}}}{}{}}{{{b{{Mf{{Gj{ce}}g}}}}{Id{c}}c{b{i}}{b{m}}}{{Ab{c{Oj{g}}}}}I`Of{MjOf}{{Oh{c}{{Ob{g}}}}}{{On{e}{{Ol{c}}}}}{{Od{cek}{{Ob{g}}}}}}{{{b{{Mf{ce}}}}{Id{c}}cIn{b{g}}}{{Ab{c{Oj{e}}}}}I`Of{{Oh{c}{{Ob{e}}}}}}{{{b{{Mb{{Nd{ce}}}}}}{Id{c}}cIn{b{g}}}{{Ab{c{Oj{e}}}}}I`Of{{Oh{c}{{Ob{e}}}}}}{{{b{{Mb{{Nd{{Mb{{N`{ce}}}}g}}}}}}{Id{c}}c{b{i}}{b{m}}}{{Ab{c{Oj{g}}}}}I`Of{MjOf}{{Oh{c}{{Ob{g}}}}}{{On{e}{{Ol{c}}}}}{{Od{cek}{{Ob{g}}}}}}{{{b{{Dn{{Nl{ceg}}}}}}{Id{c}}c{b{i}}{b{{Gl{c}}}}{b{On}}}{{Ab{c{Oj{e}}}}}I`OfOf{{Oh{c}{{Ob{e}}}}}}{{{b{{Mf{{Gj{ce}}g}}}}{Id{c}}c{b{i}}{b{{Gl{c}}}}{b{On}}}{{Ab{c{Oj{g}}}}}I`Of{MjOf}{{Oh{c}{{Ob{g}}}}}}{{{b{{Mb{{Nd{{Mb{{N`{ce}}}}g}}}}}}{Id{c}}c{b{i}}{b{{Gl{c}}}}{b{On}}}{{Ab{c{Oj{g}}}}}I`Of{MjOf}{{Oh{c}{{Ob{g}}}}}}{{{b{{Mf{{Gj{ce}}g}}}}{b{k}}}{{Mf{cg}}}I`Of{MjOf}{{On{e}{{Ol{c}}}}}{{Od{cei}{{Ob{g}}}}}}{{{b{{Mb{{Nd{{Mb{{N`{ce}}}}g}}}}}}{b{k}}}{{Mf{cg}}}I`Of{MjOf}{{On{e}{{Ol{c}}}}}{{Od{cei}{{Ob{g}}}}}}{{{b{{Nn{{Mf{{Gj{ce}}g}}g}}}}{b{k}}}{{Nn{{Mf{cg}}g}}}I`Of{MjOf}{{On{e}{{Ol{c}}}}}{{Od{cei}{{Ob{g}}}}}}{{{b{{Mf{{Gj{ce}}g}}}}{b{k}}}{{If{c{Id{c}}}}}I`Of{MjOf}{{On{e}{{Ol{c}}}}}{{Od{cei}{{Ob{g}}}}}}{{{b{{Mf{ce}}}}{b{k}}}{{If{c{Id{c}}}}}I`Of{}{{On{g}{{Ol{c}}}}}{{Od{cgi}{{Ob{e}}}}}}{{{b{{Mb{{Nd{{Mb{{N`{ce}}}}g}}}}}}{b{k}}}{{If{c{Id{c}}}}}I`Of{MjOf}{{On{e}{{Ol{c}}}}}{{Od{cei}{{Ob{g}}}}}}{{{b{{Mb{{Nd{ce}}}}}}{b{k}}}{{If{c{Id{c}}}}}I`Of{}{{On{g}{{Ol{c}}}}}{{Od{cgi}{{Ob{e}}}}}}{{{b{{Mf{{Gj{ce}}g}}}}{b{dB`}}}BbGhNb{A@`Bdh}}{{{b{{Oj{c}}}}{b{dB`}}}BbBd}0{{{b{{Nf{c}}}}{b{dB`}}}BbBd}{{{b{{Mn{c}}}}{b{dB`}}}BbBd}{{{b{{N`{ce}}}}{b{dB`}}}BbBdBd}{{{b{{Mb{c}}}}{b{dB`}}}BbBd}{{{b{Il}}{b{dB`}}}Bb}{{{b{Nh}}{b{dB`}}}Bb}{{{b{Nj}}{b{dB`}}}Bb}{{{b{{Nd{ce}}}}{b{dB`}}}BbBdBd}{{{b{{Nl{ceg}}}}{b{dB`}}}BbBdBdBd}{{{b{{Nn{ce}}}}{b{dB`}}}BbBdBd}{c{{Gj{ec}}}Nb{}}{{{Mn{c}}}{{Gj{ce}}}{}{}}{In{{Gj{ce}}}Cb{}}{In{{Mf{{Gj{ce}}g}}}CbNb{}}{c{{Mf{{Gj{ec}}g}}}Nb{}{}}{{{Mn{c}}}{{Mf{{Gj{ce}}g}}}{}Nb{}}{{{Gj{ce}}}{{Mf{{Gj{ce}}g}}}{}{}{}}{In{{Mf{ce}}}Cb{}}{cc{}}000{{{Mn{c}}}{{N`{ce}}}{}{}}{c{{N`{ec}}}Nb{}}2{A@bc{}}3{c{{Mb{c}}}{}}4444444{KdNh}{{{b{{Od{}{{Ob{c}}}}}}}{{b{i}}}{}{}I`{{On{e}{{Ol{g}}}}}}{{{b{{Od{}{{Ob{c}}}}}}{b{c}}}{{Ch{{b{{If{e{Id{e}}}}}}}}}{}I`}{{{b{{Od{}{{Ob{c}}}}}}}{{b{{Gl{e}}}}}{}I`}{{{b{{Od{}{{Ob{c}}}}}}Hn}{{Id{e}}}{}I`}{{{b{{Nf{c}}}}{b{de}}}jA@dHb}{{{b{{Mb{c}}}}{b{de}}}jA@dHb}{{{b{Il}}{b{dc}}}jHb}{{{b{Nh}}{b{dc}}}jHb}{NnDl}{{}A`}000000000000{{}c{}}000000000000{{Nh{b{Kh}}}Kd}{{{b{A@`}}}H`}{{{b{{Mf{{Gj{ce}}g}}}}}H`GhNb{A@`Bdh}}{{{b{{Nf{c}}}}}H`{A@`Bd}}{{{b{{Mn{c}}}}}H`Gh}{{{b{{N`{ce}}}}}H`GhNb}{{{b{{Mb{c}}}}}H`{A@`h}}{{{b{{Mb{c}}}}}H`{MdMj}}{{{b{{Mb{c}}}}}H`Md}{{{Id{c}}}cI`}{{{b{{Od{}{{Ob{c}}}}}}}e{}I`}{{{b{A@`}}{b{d{Ij{IlA@`}}}}}Cn}{{{b{{Mf{{Gj{ce}}g}}}}{b{d{Ij{Il{Mf{{Gj{ce}}g}}}}}}}CnGhNb{A@`Bdh}}{{{b{{Nf{c}}}}{b{d{Ij{Il{Nf{c}}}}}}}Cn{A@`Bd}}{{{b{{Mn{c}}}}{b{d{Ij{Il{Mn{c}}}}}}}CnGh}{{{b{{N`{ce}}}}{b{d{Ij{Il{N`{ce}}}}}}}CnGhNb}{{{b{{Mb{c}}}}{b{d{Ij{Il{Mb{c}}}}}}}Cn{A@`h}}{{{b{{Mf{{Gj{ce}}g}}}}}{{Dl{Cn}}}GhNb{A@`Bdh}}{{{b{{Mb{{Nd{{Mb{{N`{ce}}}}g}}}}}}}{{Dl{Cn}}}GhNb{A@`Bdh}}{{{b{{Mf{ce}}}}{A@f{e}}}{{Ab{{Nn{{Mf{ce}}e}}{Oj{e}}}}}{{A@h{}{{Ol{}}}}hA@jMhMj}{O`OfA@d}}{{{b{{Mb{{Nd{ce}}}}}}{A@f{e}}}{{Ab{{Nn{{Mf{ce}}e}}{Oj{e}}}}}{}{O`OfA@d}}{c{{Md{}{{Ml{c}}}}}{}}{c{{Mf{{Gj{cG`}}Hj}}}Gh}{c{{Mf{{Gj{ce}}g}}}CbNb{MjOf}}{c{{Mn{e}}}{}h}{c{{N`{eg}}}{}hNb}{c{{Mb{e}}}{}{Mdh}}{c{{Mb{{Nd{{Mb{{N`{ce}}}}g}}}}}CbNb{MjOf}}{c{{Nd{eg}}}{}Mdh}{{{b{{Nn{ce}}}}i}{{Nn{ge}}}{}Of{}{{A@l{{b{c}}}{{Ol{g}}}}}}{Glb}{{{Mf{{Gj{ce}}g}}c}iCbNb{MjOf}{}}{{{Mb{c}}{Mb{c}}}{{Mb{c}}}{MdMj}}{{{b{d{Mf{ce}}}}{Mf{ce}}}j{MhA@jMjh}{Mjh}}{{{Mb{c}}}{{Mb{c}}}Md}{{{b{A@`}}{b{d{Ij{IlA@`}}}}}Cn}{{{b{{Mf{{Gj{ce}}g}}}}{b{d{Ij{Il{Mf{{Gj{ce}}g}}}}}}}CnGhNb{A@`Bdh}}{{{b{{Nf{c}}}}{b{d{Ij{Il{Nf{c}}}}}}}Cn{A@`Bd}}{{{b{{Mn{c}}}}{b{d{Ij{Il{Mn{c}}}}}}}CnGh}{{{b{{N`{ce}}}}{b{d{Ij{Il{N`{ce}}}}}}}CnGhNb}{{{b{{Mb{c}}}}{b{d{Ij{Il{Mb{c}}}}}}}Cn{A@`h}}{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}{{{b{{Mf{{Gj{ce}}g}}}}}CnGhNb{A@`Bdh}}{{{b{{Mb{{Nd{{Mb{{N`{ce}}}}g}}}}}}}CnGhNb{A@`Bdh}}{NjA@n}{{}{{Mb{c}}}{MdMj}}{{{b{{Nf{c}}}}{b{{Nf{c}}}}}{{Ch{Hl}}}AA`}{{{b{Il}}{b{Il}}}{{Ch{Hl}}}}{{{b{{Mf{{Gj{cG`}}Hj}}}}In}{{Mf{{Gj{cG`}}Hj}}}Gh}{{{Mb{c}}In}{{Mb{c}}}Md}`{NfHd}{{{b{{Nf{c}}}}e}AbCjCl}{{{b{{Mn{c}}}}e}AbCjCl}{{{b{Nh}}c}AbCl}{{{b{Nj}}c}AbCl}{{{b{{Nl{ceg}}}}i}AbCjCjCjCl}{{{b{{Nn{ce}}}}g}AbCjCjCl}{{{b{{Mf{{Gj{cG`}}Hj}}}}}{{Mf{{Gj{cG`}}Hj}}}Gh}{{{Mf{ce}}}{{Mf{ce}}}{}{}}{{{Mb{{Nd{ce}}}}}{{Mb{{Nd{ce}}}}}{}{}}{{{Mb{c}}{Mb{c}}}{{Mb{c}}}Md}{{{b{A@`}}{b{d{Ij{IlA@`}}}}}Cn}{{{b{{Mf{{Gj{ce}}g}}}}{b{d{Ij{Il{Mf{{Gj{ce}}g}}}}}}}CnGhNb{A@`Bdh}}{{{b{{Nf{c}}}}{b{d{Ij{Il{Nf{c}}}}}}}Cn{A@`Bd}}{{{b{{Mn{c}}}}{b{d{Ij{Il{Mn{c}}}}}}}CnGh}{{{b{{N`{ce}}}}{b{d{Ij{Il{N`{ce}}}}}}}CnGhNb}{{{b{{Mb{c}}}}{b{d{Ij{Il{Mb{c}}}}}}}Cn{A@`h}}{{{Md{}{{Ml{c}}}}}{{Ab{c{Md{}{{Ml{c}}}}}}}{}}{{{Mn{c}}}{{Ab{e{Mn{c}}}}}h{}}{{{N`{ce}}}{{Ab{g{N`{ce}}}}}hNb{}}{{{Mb{c}}}{{Ab{e{Mb{c}}}}}{Mdh}{}}{{{Nd{ce}}}{{Ab{g{Nd{ce}}}}}Mdh{}}{{{b{{Md{}{{Ml{c}}}}}}}{{Ch{{b{c}}}}}{}}{{{b{{Mn{c}}}}}{{Ch{{b{e}}}}}h{}}{{{b{{N`{ce}}}}}{{Ch{{b{g}}}}}hNb{}}{{{b{{Mb{c}}}}}{{Ch{{b{e}}}}}{Mdh}{}}{{{b{{Nd{ce}}}}}{{Ch{{b{g}}}}}Mdh{}}{bc{}}0000000000{{{b{{Mf{{Gj{ce}}g}}}}}{{Dl{{Nl{cge}}}}}I`OfOf}{{{b{{Mb{{Nd{{Mb{{N`{ce}}}}g}}}}}}}{{Dl{{Nl{cge}}}}}I`OfOf}{{{b{{Nn{{Mf{{Gj{ce}}g}}g}}}}{b{k}}c{b{m}}}{{Cf{c{Jl{c}}}}}I`Of{BdMjOf}{{On{e}{{Ol{c}}}}}{{Od{cei}{{Ob{g}}}}}{{Oh{c}{{Ob{g}}}}}}{{{b{{Nn{{Dl{{Nl{ceg}}}}e}}}}{b{k}}c{b{m}}}{{Cf{c{If{c{Id{c}}}}}}}I`{OfBd}Of{{On{g}{{Ol{c}}}}}{{Od{cgi}{{Ob{e}}}}}{{Oh{c}{{Ob{e}}}}}}{bCn}0{c{{Ab{e}}}{}{}}000000000000{{}{{Ab{c}}}{}}000000000000{In{{Mf{{Gj{cG`}}Hj}}}Gh}{{}{{Mf{{Gj{cG`}}Hj}}}Gh}00{bD`}000000000000{{}Lj}{{{b{{Id{c}}}}A@n{b{c}}}cI`}{{{b{{Gj{ce}}}}{b{{Gl{c}}}}{b{On}}}cCbOf}{{{b{{Mb{{N`{ce}}}}}}{b{{Gl{c}}}}{b{On}}}cCbOf}{{{b{{Od{}{{Ob{c}}}}}}}{{b{{If{e{Id{e}}}}}}}{}I`}{{}c{}}000000000000{{HdA`{Ch{{b{{Fj{c}}}}}}}{{Mf{{Gj{cG`}}Hj}}}Gh}{{}{{Mb{c}}}Md}{GlIn}{NjH`}{AAbA`}0`{{{b{g}}}gCb{}{{Gb{ce}}}}{{{b{Gb}}}Gb}{{{b{Gb}}{b{dGd}}}Gb}{{A`{Ch{{b{{Fj{c}}}}}}}Gb{}}{{{b{g}}{b{g}}}gCb{}{{Gb{ce}}}}{{{Gj{ce}}{Ch{{b{{Fj{c}}}}}}}Gb{}{}}544{cGb{}}{{{b{Gb}}In}Gb}6{InGb}{{}Gb}00{{HdA`{Ch{{b{{Fj{c}}}}}}}Gb{}}```````````````````````````````````````````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000`{{{b{Hd}}}Hd}{{{b{Ih}}}Ih}{{{b{AAd}}}AAd}{{{b{{Jj{c}}}}}{{Jj{c}}}{hGh}}{{b{b{dc}}}j{}}000{{bl}j}000{{{b{Hd}}{b{Hd}}}Hl}{{{b{Ih}}{b{Ih}}}Hl}{JjDl}{{{b{dAAf}}A`A`}j}{{{b{dAAf}}{Cf{A`A`}}{Cf{A`A`}}}j}{{{b{dAAf}}A`{Ch{A`}}{Ch{A`}}A`}j}{AAh{{Jj{c}}}Gh}0{{A`A`}{{Cf{{Dl{{Jj{c}}}}A`}}}Gh}11{{A`{b{{Dn{AAj}}}}{b{AAl}}}{{Cf{A`{Dl{{Jj{c}}}}}}}Gh}{A`{{Cf{A`{Dl{{Jj{c}}}}}}}Gh}3{{A`{b{AAl}}}{{Cf{A`{Dl{{Jj{c}}}}}}}Gh}{{AAh{Eb{c}}}{{Jj{c}}}Gh}{{AAh{AAn{c}}{Ch{{AAn{c}}}}}{{Jj{c}}}Gh}3{{AAh{Eb{{Eb{c}}}}}{{Jj{c}}}Gh}{{A`{Eb{AAh}}{b{{Dn{{Dl{c}}}}}}}{{Cf{{Dl{{Jj{c}}}}A`}}}Gh}5{{A`BhAB`}{{Cf{A`{Dl{{Jj{c}}}}}}}Gh}{{A`Bh}{{Dl{{Jj{c}}}}}Gh}{{A`AAj{b{AAl}}}{{Cf{A`{Dl{{Jj{c}}}}}}}Gh}{{{b{{Eb{AAh}}}}}{{Dl{{Jj{c}}}}}Gh}{{A`A`}{{Cf{A`{Dl{{Jj{c}}}}}}}Gh}{{}Ih}{{}{{Jj{c}}}{nGh}}{A`{{b{c}}}{}}0000{A`{{b{dc}}}{}}0000{{}j}000{c{{Ab{Hd}}}Ad}{c{{Ab{Ih}}}Ad}{c{{Ab{{Jj{e}}}}}AdGh}{A`j}0000{{{b{{Jj{c}}}}}cGh}{{{b{Hd}}{b{Hd}}}H`}{{{b{Ih}}{b{Ih}}}H`}{{{b{AAd}}{b{AAd}}}H`}{{b{b{c}}}H`{}}00000{{{b{d{Dl{{Jj{c}}}}}}A`}A`Gh}{{{b{d{Dl{{Jj{c}}}}}}A`{b{dA`}}{b{{Dn{AAj}}}}{b{AAl}}}jGh}{{{b{d{Dl{{Jj{c}}}}}}{b{dA`}}}jGh}{{{b{d{Dl{{Jj{c}}}}}}{b{dA`}}{b{AAl}}}jGh}{{{b{d{Dl{{Jj{c}}}}}}{b{dA`}}AAh{AAn{c}}{Ch{{AAn{c}}}}}jGh}12{{{b{d{Dl{{Jj{c}}}}}}A`A`}A`Gh}03{{{b{d{Dl{{Jj{c}}}}}}BhAB`A`}A`Gh}{{{b{d{Dl{{Jj{c}}}}}}{b{dA`}}AAj{b{AAl}}}jGh}7{{{b{Hd}}{b{dB`}}}Bb}{{{b{Ih}}{b{dB`}}}Bb}{{{b{AAd}}{b{dB`}}}Bb}0{{{b{{Jj{c}}}}{b{dB`}}}Bb{BdGh}}{cc{}}00{{{ABb{c}}}{{Jj{e}}}{}{{ABd{c}}Gh}}1{{{b{{E`{c}}}}}{{ABf{c}}}Gh}2{BhHd}{BhIh}{KdHd}{KdIh}{ABfb}{{{b{Hd}}{b{dc}}}jHb}{{{b{Ih}}{b{dc}}}jHb}{{}A`}0000{{}c{}}0000{HdBh}{IhBh}{{Hd{b{Kh}}}Kd}{{Ih{b{Kh}}}Kd}{{{b{Bh}}}H`}0{{}{{Dl{ABh}}}}{{IhAAh{Dl{c}}}{{Jj{c}}}Gh}{{A`{b{{Dn{{Jj{c}}}}}}}{{ABf{c}}}Gh}{{}c{}}0{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}0{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}0{{{b{Hd}}{b{Hd}}}{{Ch{Hl}}}}{{{b{Ih}}{b{Ih}}}{{Ch{Hl}}}}{{{b{{Jj{c}}}}}cGh}{ABfA`}{{{b{{Jj{c}}}}}{{Eb{{Eb{c}}}}}Gh}{{}}0{{{b{Hd}}c}AbCl}{{{b{Ih}}c}AbCl}{{{b{{Jj{c}}}}e}AbGhCl}{{{b{{ABf{c}}}}e}AbGhCl}{{{b{Hd}}}A`}{bc{}}000{bCn}{c{{Ab{e}}}{}{}}0000{Lh{{Ab{Hd}}}}{Lh{{Ab{Ih}}}}{{}{{Ab{c}}}{}}0000{JjIh}{bD`}0000{{}Lj}0{{{b{{Jj{c}}}}}cGh}{c{{Ll{{Dn{Hd}}}}}{}}{c{{Ll{{Dn{Ih}}}}}{}}{{{Ll{{Dn{Hd}}}}}c{}}{{{Ll{{Dn{Ih}}}}}c{}}{{{b{{Jj{c}}}}A`{b{{Eb{{Dl{c}}}}}}{b{{El{eg}}}}{b{{Dn{c}}}}}{{Ab{jCn}}}Gh{{Eh{}{{ABj{c}}}}}{{ABl{e}}}}{{{b{{Jj{c}}}}A`{b{{Eb{{Dl{c}}}}}}{b{{E`{c}}}}}{{Ab{jCn}}}Gh}{{{b{{Jj{c}}}}A`{b{{Eb{{Dl{c}}}}}}}{{Ab{jCn}}}Gh}11{{{b{{Jj{c}}}}A`{b{{Eb{{Dl{c}}}}}}{b{{Dn{c}}}}}{{Ab{jCn}}}Gh}11{{{b{{Jj{c}}}}A`{b{{Eb{{Dl{c}}}}}}{b{{E`{c}}}}{b{{Dn{c}}}}}{{ABn{j}}}Gh}{{}c{}}0000{JjAAh}{AAh{{Jj{c}}}Gh}{AC`ACb}0{AC`Ih}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{ABbDl}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{{{Jj{c}}}{{ABb{e}}}Gh{{ABd{c}}}}{{{b{{Jj{c}}}}}{{ABb{e}}}Gh{{ABd{c}}}}{cc{}}{Kd{{ABb{c}}}ACd}{{}A`}{{}c{}}{{{ABb{c}}{b{Kh}}}KdACf}{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{ABbIh}{bD`}{{}Lj}{{}c{}}{ABbCf}`````{{}Bh}`{{c{b{{If{c{Id{c}}}}}}{Id{c}}{b{{Dn{{Jj{c}}}}}}{b{{Eb{{Dl{c}}}}}}{b{c}}{b{c}}cc{b{{Dn{{If{c{Id{c}}}}}}}}{b{de}}{b{ACh}}A`}{{Ab{{If{c{Id{c}}}}ACj}}}Gh{AClACn}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{AD`{c}}}}}{{AD`{c}}}h}{{b{b{dc}}}j{}}{{bl}j}{{{b{{AD`{c}}}}H`}{{Dl{{Gf{c}}}}}I`}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{c{{Ab{{AD`{e}}}}}Ad{ADbADd}}{A`j}{AD`ADf}{{{b{{AD`{c}}}}{b{dB`}}}BbBd}{cc{}}{{}A`}{{}c{}}{AD`ACh}{ACh{{AD`{c}}}Mh}{{{b{{AD`{c}}}}e}Ab{ADbADd}Cl}{{c{b{{If{c{Id{c}}}}}}{Id{c}}{b{{Dn{{Jj{c}}}}}}{b{{Eb{{Dl{c}}}}}}cc{b{ACh}}A`}{{Ab{{Dl{{Dl{c}}}}ACj}}}Gh}{bc{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{cgA`{Id{c}}{b{{Dn{{Jj{c}}}}}}{b{{Eb{{Dl{c}}}}}}{b{c}}{b{c}}{b{{Dn{{If{c{Id{c}}}}}}}}{b{ACh}}A`}jGh{{An{}{{Al{c}}}}}{{A@l{}{{Ol{e}}}}}}{{}c{}}{{{Dl{c}}{Id{c}}A`{b{de}}}{{If{c{Id{c}}}}}I`{AClACn}}```````{{{b{{ADh{c}}}}}{{ADh{{b{c}}}}}{}}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{ADj}}}ADj}{{{b{{ADh{c}}}}}{{ADh{c}}}h}{{{b{{ADl{c}}}}}{{ADl{c}}}{hI`}}{{b{b{dc}}}j{}}00{{bl}j}00{ADlAD`}{{{b{{Dn{{Jj{c}}}}}}{Dl{{Kj{c}}}}{Ch{{Dl{{Lf{c}}}}}}{b{{Ib{c}}}}A`}{{Ab{{Ch{{ADl{c}}}}ADj}}}Gh}{{}{{ADh{c}}}n}{A`{{b{c}}}{}}00{A`{{b{dc}}}{}}00{c{{Ab{ADj}}}Ad}{c{{Ab{{ADh{e}}}}}AdAf}{c{{Ab{{ADl{e}}}}}Ad{nI`}}{A`j}00{ADhCh}{{{b{ADj}}{b{dB`}}}Bb}0{{{b{{ADh{c}}}}{b{dB`}}}BbBd}{{{b{{ADl{c}}}}{b{dB`}}}Bb{BdI`}}{cc{}}00{{{b{{ADh{c}}}}ABh}{{b{e}}}{}{}}{{{b{d{ADh{c}}}}ABh}{{b{de}}}{}{}}{{}A`}00{{}c{}}008{ADlADh}{ADlDl}0{{{ADh{c}}g}{{ADh{e}}}{}{}{{A@l{c}{{Ol{e}}}}}};{ADlCh}00{{{b{ADj}}c}AbCl}{{{b{{ADh{c}}}}e}AbCjCl}{{{b{{ADl{c}}}}e}AbI`Cl}33{bc{}}00{bCn}{c{{Ab{e}}}{}{}}00{{}{{Ab{c}}}{}}00{bD`}00{{}c{}}00{ADhCh}{ADnCn}{AE`A`}0`````````````````{b{{b{c}}}{}}00000000{{{b{d}}}{{b{dc}}}{}}00000000{{{b{ACh}}{b{{Dn{{Jj{c}}}}}}}{{Dl{{Dl{{AEb{c}}}}}}}Gh}{{{b{AEd}}}AEd}{{{b{Kb}}}Kb}{{{b{ACh}}}ACh}{{{b{AEf}}}AEf}{{{b{{AEh{c}}}}}{{AEh{c}}}h}{{{b{AEj}}}AEj}{{{b{{AEl{ce}}}}}{{AEl{ce}}}hh}{{{b{AEn}}}AEn}{{{b{ABh}}}ABh}{{b{b{dc}}}j{}}00000000{{bl}j}00000000{{{b{ABh}}{b{ABh}}}Hl}{AEfA`}{KbACh}{{{b{{Dn{{Jj{c}}}}}}H`}{{Ch{ACh}}}Gh}{{}AEd}{{}Kb}{A`{{b{c}}}{}}00000000{A`{{b{dc}}}{}}00000000{{}j}00000{c{{Ab{AEd}}}Ad}{c{{Ab{Kb}}}Ad}{c{{Ab{ACh}}}Ad}{c{{Ab{AEf}}}Ad}{c{{Ab{{AEh{e}}}}}AdAf}{c{{Ab{AEj}}}Ad}{c{{Ab{{AEl{eg}}}}}AdAfAf}{c{{Ab{ABh}}}Ad}{c{{Ab{{ADf{e}}}}}Ad{}}{A`j}00000000{AEbDl}{ADfDl}{AElDl}{{{b{AEd}}{b{AEd}}}H`}{{{b{Kb}}{b{Kb}}}H`}{{{b{ABh}}{b{ABh}}}H`}{{b{b{c}}}H`{}}00000{{{b{{ADf{c}}}}{b{c}}{b{c}}}c{MhA@jh{A@h{}{{Ol{}}}}ABd}}{{{b{{AEh{c}}}}g}eOf{}{{A@l{AEf}{{Ol{e}}}}}}{{{b{{AEl{{AEh{c}}AEj}}}}{b{e}}{b{e}}{b{g}}}eOf{MhA@jh{AF`{c}{{Ol{}}}}{A@h{}{{Ol{}}}}{ABd{In}}}{{A@l{AEf}{{Ol{e}}}}}}{{{b{{AEl{cc}}}}{b{c}}{b{c}}}c{MhA@jh{A@h{}{{Ol{}}}}ABd}}{AChKb}{{{b{AEd}}{b{dB`}}}Bb}{{{b{Kb}}{b{dB`}}}Bb}{{{b{ACh}}{b{dB`}}}Bb}{{{b{AEf}}{b{dB`}}}Bb}{{{b{AEj}}{b{dB`}}}Bb}{{{b{{AEl{ce}}}}{b{dB`}}}BbBdBd}{{{b{AEn}}{b{dB`}}}Bb}{{{b{ABh}}{b{dB`}}}Bb}{AEdH`}{cc{}}00000000{BhAEd}{BhKb}{BhACh}{{IhHd}{{Ch{ABh}}}}{{{b{{Dn{{Jj{c}}}}}}}AEdGh}{{{b{{Dn{{Jj{c}}}}}}H`}KbGh}{KdAEd}{KdKb}{KdABh}{{{b{ABh}}{b{dc}}}jHb}{{{b{AEd}}ABh}{{b{c}}}{}}{{{b{dAEd}}ABh}{{b{dc}}}{}}{{}A`}00000000{{}c{}}00000000{AEdBh}{KbBh}{AChBh}{AEdc{}}{{}c{}}{{AEd{b{Kh}}}Kd}{{Kb{b{Kh}}}Kd}{{ABh{b{Kh}}}Kd}{{{b{c}}}H`{}}00{b}{{}AEn}{KbH`}{{{b{AEd}}}H`}{bA`}{{{b{AEn}}}A`}{ce{}{}}00{AEdH`}{{{b{ABh}}}{{Dl{{AEb{c}}}}}Cb}{{{b{ABh}}}Bh}{AChBh}{{{b{ABh}}}A`}{AChA`}{{H`H`H`H`}AEd}{{AEdH`H`}Kb}{{A`BhKb}ACh}{{{b{dAEn}}}{{Ch{c}}}{}}0{{}c{}}00{{{b{dAEn}}A`}{{Ch{c}}}{}}{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}00{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}00{{}{{AFb{c}}}{}}{{{b{ABh}}{b{ABh}}}{{Ch{Hl}}}}{KbAEd}{AEdH`}{{{b{{AEl{{AEh{c}}AEj}}}}{b{g}}}{{ADf{e}}}Of{Mh{AF`{c}{{Ol{}}}}{A@h{}{{Ol{}}}}{ABd{In}}}{{A@l{AEf}{{Ol{e}}}}}}{ce{}{}}00{ce{}{}}00{{}}00{AEfHd}{{{b{ACh}}{b{{Ib{c}}}}{b{{Dn{{Jj{c}}}}}}}{{Cf{{ADh{{If{c{Id{c}}}}}}{Dl{{Kj{c}}}}}}}Gh}{{{b{AEd}}c}AbCl}{{{b{Kb}}c}AbCl}{{{b{ACh}}c}AbCl}{{{b{AEf}}c}AbCl}{{{b{{AEh{c}}}}e}AbCjCl}{{{b{AEj}}c}AbCl}{{{b{{AEl{ce}}}}g}AbCjCjCl}{{{b{ABh}}c}AbCl}{{{b{{ADf{c}}}}e}Ab{}Cl}{{{b{AEn}}}{{Cf{A`{Ch{A`}}}}}}{{{b{ABh}}}{{Ch{AFd}}}}{AEbAEj}{ADf}{AEl}{bc{}}00000000{c{{Ab{e}}}{}{}}00000000{Lh{{Ab{AEdc}}}{}}{Lh{{Ab{Kbc}}}{}}{Lh{{Ab{AChc}}}{}}{{}{{Ab{c}}}{}}00000000{bD`}00000000{{}Lj}00{KbH`}{AEhDl}{c{{Ll{{Dn{AEd}}}}}{}}{c{{Ll{{Dn{Kb}}}}}{}}{c{{Ll{{Dn{ACh}}}}}{}}{{{Ll{{Dn{AEd}}}}}c{}}{{{Ll{{Dn{Kb}}}}}c{}}{{{Ll{{Dn{ACh}}}}}c{}}{{}c{}}00000000`{AEdH`}```{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00`{{{b{AFf}}}AFf}{{{b{{Lf{c}}}}}{{Lf{c}}}h}{{{b{{Ed{c}}}}}{{Ed{c}}}h}{{b{b{dc}}}j{}}00{{bl}j}00{{}{{Dl{{Gf{c}}}}}Cb}{EdDl}{A`{{b{c}}}{}}00{A`{{b{dc}}}{}}00{c{{Ab{AFf}}}Ad}{c{{Ab{{Lf{e}}}}}AdAf}{A`j}00{LfDl}{{{b{AFf}}{b{dB`}}}Bb}{{{b{{Lf{c}}}}{b{dB`}}}BbBd}{{{b{{Ed{c}}}}{b{dB`}}}BbBd}{AFhAFf}{cc{}}{{{Lf{c}}}AFf{}}1{{{AFj{e}}}{{Lf{c}}}Gh{{AFl{c}}}}{{{AFn{e}}}{{Ed{c}}}Gh{{AFl{c}}}}3{{{b{{Lf{c}}}}}A@n{}}{AFfA@n}{LfA@n}{EdA@n}{{}A`}00{{}c{}}00{{{b{{Lf{c}}}}}H`{}}{{{b{{Lf{c}}}}}A`{}}{AFfA`}{{{b{AFf}}c}AbCl}{{{b{{Lf{c}}}}e}AbCjCl}{bc{}}00{c{{Ab{e}}}{}{}}00{{}{{Ab{c}}}{}}00{bD`}00{{}c{}}00```{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{AFnDl}{A`{{b{c}}}{}}00{A`{{b{dc}}}{}}00{A`j}00{AFjDl}{cc{}}{{{Ed{c}}}{{AFn{e}}}Gh{{ABd{c}}}}1{AFfAFh}2{{{Lf{c}}}{{AFj{e}}}Gh{{ABd{c}}}}{Kd{{AFn{c}}}ACd}{KdAFh}{Kd{{AFj{c}}}ACd}{AFnA@n}{AFhA@n}{AFjA@n}{{}A`}00{{}c{}}00{{{AFn{c}}{b{Kh}}}KdACf}{{AFh{b{Kh}}}Kd}{{{AFj{c}}{b{Kh}}}KdACf}{AFhA`}{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}00{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}00{c{{Ab{e}}}{}{}}00{{}{{Ab{c}}}{}}00{bD`}00{{}Lj}00{{}c{}}00```{{}A@n}`0`{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00`{{{b{AFd}}}AFd}{{{b{AG`}}}AG`}{{{b{{Kj{c}}}}}{{Kj{c}}}h}{{b{b{dc}}}j{}}00{{bl}j}00{{{b{{Dn{{b{{AGb{c}}}}}}}}{Ch{{b{{AGb{c}}}}}}{Ch{{b{{AGb{c}}}}}}}{{AGb{c}}}AGd}{{{b{c}}{b{c}}e{b{c}}}c{MhA@jh}{{AGf{}{{Al{{b{c}}}}}}}}{KjDl}{A`{{b{c}}}{}}00{A`{{b{dc}}}{}}00{c{{Ab{AFd}}}Ad}{c{{Ab{AG`}}}Ad}{A`j}00{{{b{AFd}}{b{AFd}}}H`}{{{b{AG`}}{b{AG`}}}H`}{{b{b{c}}}H`{}}000{{{b{AFd}}{b{dB`}}}Bb}{{{b{AG`}}{b{dB`}}}Bb}{{{b{{Kj{c}}}}{b{dB`}}}BbBd}{cc{}}00{{{AGh{e}}}{{Kj{c}}}Gh{{AFl{c}}}}{AFd{{Kj{c}}}I`}{{{b{{Kj{c}}}}}H`I`}{{{b{AFd}}{b{dc}}}jHb}{{{b{AG`}}{b{dc}}}jHb}{KjA@n}{{{b{AG`}}AFd}{{b{c}}}{}}{{{b{dAG`}}AFd}{{b{dc}}}{}}{{}A`}00{{}c{}}00{AG`c{}}8{b}{bA`}{{{b{{Kj{c}}}}}A`I`}`{AG`H`}{{{b{AFd}}c}AbCl}{{{b{AG`}}c}AbCl}{{{b{AFd}}}A`}{bc{}}00{c{{Ab{e}}}{}{}}00{{}{{Ab{c}}}{}}00{bD`}00{{}c{}}009`8`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{AGhDl}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{cc{}}{{{Kj{c}}}{{AGh{e}}}Gh{{ABd{c}}}}{Kd{{AGh{c}}}ACd}{AGhA@n}{{}A`}{{}c{}}{{{AGh{c}}{b{Kh}}}KdACf}{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}Lj}{{}c{}}{{}Bh}:{{}{{Kj{c}}}Cb};0```````{b{{b{c}}}{}}00000{{{b{d}}}{{b{dc}}}{}}00000{{{b{{AGj{c}}}}}{{AGj{c}}}{hI`}}{{{b{{AGl{c}}}}}{{AGl{c}}}{hI`}}{{{b{{Jn{c}}}}}{{Jn{c}}}{hI`}}{{{b{{AGn{c}}}}}{{AGn{c}}}{hI`}}{{{b{{AH`{c}}}}}{{AH`{c}}}{hI`}}{{{b{{AHb{c}}}}}{{AHb{c}}}{hI`}}{{b{b{dc}}}j{}}00000{{bl}j}00000{JnAGl}0{A`{{b{c}}}{}}00000{A`{{b{dc}}}{}}00000{A`j}00000{cc{}}00000{AGnIf}{AHbJl}10{{}A`}00000{{}c{}}000003232{AGlAGj}{AH`AGn}10{bc{}}00000{c{{Ab{e}}}{}{}}00000{{}{{Ab{c}}}{}}00000{bD`}00000{{}c{}}00000{AGjEb}{AGjIf}`````````````````{{ccA`}{{Eb{{Dl{c}}}}}Gh}{{{b{d{Eb{{Dl{c}}}}}}ccA`}jGh}{{}{{Kj{c}}}Gh}`{bBf}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{b{b{{f{c}}}}{b{dGd}}}{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}{}}{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}{{b{b{dGd}}}{{Dl{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}}}{}}{{}{{AHd{c}}}n}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{cc{}}{{}A`}{{}c{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}c{}}`{bBf}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{b{b{{f{c}}}}{b{dGd}}}{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}{}}{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}{{b{b{dGd}}}{{Dl{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}}}{}}{{}{{AHf{c}}}n}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{cc{}}{{{b{d{Eb{{Dl{c}}}}}}ccA`}c{GhAj}}{{}A`}{{}c{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}c{}}``{AHhCf}{bBf}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{b{b{{f{c}}}}{b{dGd}}}{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}{}}{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}{{b{b{dGd}}}{{Dl{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}}}{}}{{}{{AHj{c}}}n}{A`{{b{c}}}{}}0{A`{{b{dc}}}{}}0{A`j}0{cc{}}0{{{b{d{Eb{{Dl{c}}}}}}A`c{Cf{cc}}{b{{Dn{H`}}}}{Cf{cc}}}{{AHh{c}}}{CbAj}}{{}A`}0{{}c{}}0{AHh}{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{bD`}0{{}c{}}0````{bBf}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{b{b{{f{c}}}}{b{dGd}}}{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}{}}{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}{{b{b{dGd}}}{{Dl{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}}}{}}{{}{{AHl{c}}}n}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{cc{}}{{}A`}{{}c{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}c{}}```?>{{{b{AAj}}}AAj}{{b{b{dc}}}j{}}{{bl}j}{{{b{{Dn{AAl}}}}{b{{Dn{AAj}}}}AAl}{{Eb{{Dl{c}}}}}Gh}=<;{{{b{AAj}}{b{AAj}}}H`}{{b{b{c}}}H`{}}0{{{b{d{Eb{{Dl{c}}}}}}{b{{Eb{c}}}}{b{{Eb{c}}}}}jGh}{{{b{AAj}}{b{dB`}}}Bb}>=<{{{b{AAj}}}cGh}{bc{}}=<;:?``````?`????{{}Lj}{{}AHn}{{{b{AI`}}}AAl}{{{b{AIb}}}AAl}{AIdEb}3{{{b{AHn}}}AAl}{{{b{AIf}}}{{Eb{AAl}}}}{{{b{AHn}}}{{Eb{c}}}Cb}{{{b{AHn}}}{{Eb{AAl}}}}{{{b{AIh}}}{{Eb{c}}}Gh}2{{{b{AIj}}}{{Eb{c}}}Cb}024999````{bBf}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{b{b{{f{c}}}}{b{dGd}}}{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}{}}{{{b{{Eb{e}}}}}eGh{{Gb{cG`}}}}{{{b{{Eb{e}}}}{b{{Eb{e}}}}{b{{Eb{e}}}}{b{{Eb{e}}}}}{{Eb{e}}}Gh{{Gb{cG`}}}}{{{b{{Eb{e}}}}{b{{Eb{e}}}}{b{{Eb{e}}}}{b{{Eb{e}}}}{b{{Eb{e}}}}}{{Eb{e}}}Gh{{Gb{cG`}}}}{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}{{b{b{dGd}}}{{Dl{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}}}{}}{{}{{AIl{c}}}n}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{cc{}}{{}A`}{{}c{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}c{}}5{IhBh}{{Ih{b{{f{c}}}}{b{dGd}}}{{Gf{c}}}Gh}{IhA`}{{}{{Eb{Ih}}}}{{{b{{f{c}}}}{b{dGd}}}{{Gf{c}}}Gh}{{}{{Kj{c}}}Gh}`{{{b{d{AIn{c}}}}{b{{Eb{c}}}}}jGh}0{{{b{d{AIn{c}}}}{b{c}}}jGh}01{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{AInDl}0{{{b{AAl}}{b{AAl}}}AAl}0{{{b{AAl}}{b{AAl}}{b{AAl}}}{{Cf{{Eb{{Dl{c}}}}{AIn{c}}}}}Gh}{{}{{AIn{c}}}{nGh}}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{{{b{d{AIn{c}}}}{b{d{Eb{{Dl{c}}}}}}{b{{Eb{c}}}}}jGh}{{{b{d{AIn{c}}}}{b{d{Eb{{Dl{c}}}}}}}jGh}{{{b{d{AIn{c}}}}{b{d{Eb{{Dl{c}}}}}}{b{AAl}}}jGh}11{cc{}}:{{}A`}{{}c{}}<<{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}c{}}`{{}Bh}`6666`````{bBf}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{{AAn{c}}}}}{{AAn{c}}}h}{{b{b{dc}}}j{}}{{bl}j}{{b{b{{f{c}}}}{b{dGd}}}{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}{}}{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}{{b{b{dGd}}}{{Dl{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}}}{}}{{}{{AJ`{c}}}n}{A`{{b{c}}}{}}0{A`{{b{dc}}}{}}0{A`j}0{cc{}}0{{}A`}0{{}c{}}0`{bc{}}{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{bD`}0{{}c{}}0{AJbCh}{AJdCh}101{{A`A`}{{Dl{{Jj{c}}}}}Gh}{{A`{b{d{Eb{{Dl{c}}}}}}{b{{Dn{c}}}}}jI`}`{{}Eb}0{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{Dn{In}}}}}{{Dl{In}}}}0{{{b{{Dn{In}}}}}In}`{In{{Dl{In}}}}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{InIn}{{{b{{Dn{l}}}}}{{Dl{In}}}}{In{{Dl{e}}}Gh{{Gb{cG`}}}}{cc{}}{{}A`}{{}c{}}{A`A`}{{{b{{Dn{l}}}}}{{Dl{l}}}}16==;{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}c{}}`77777777777777777777777777777777777777777777777777777777`````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{{{b{{Dn{In}}}}}AJf}{{{b{{Dn{In}}}}}AJh}{{{b{{Dn{In}}}}}AJj}{{{b{{Dn{In}}}}A`}AJl}{{{b{AJf}}A`A`}In}{{{b{AJh}}A`A`A`}In}10{A`{{b{c}}}{}}0000{A`{{b{dc}}}{}}0000{A`j}000043{{{b{d{Eb{{Dl{c}}}}}}AAl}jGh}{cc{}}0000{{}A`}0000{{}c{}}0000{{{b{AJf}}A`}In}898{{{b{AJl}}A`}In}{{{b{AJj}}A`A`A`A`}In}{{{b{AJf}}A`A`A`}In}{{{b{AJh}}A`A`A`A`}In}2{{{b{AJh}}}{{Dl{In}}}}{{{b{AJf}}}{{Dl{In}}}}{{{b{AJj}}}{{Dl{In}}}}{{{b{AJl}}}{{Dl{In}}}}{c{{Ab{e}}}{}{}}0000{{}{{Ab{c}}}{}}0000{bD`}0000{{}c{}}0000{{{b{d{Eb{{Dl{c}}}}}}c{Ch{A`}}}jGh}{{{b{d{Eb{{Dl{c}}}}}}{b{{Dn{c}}}}A`}{{Ab{jCn}}}Gh}{{}Bh}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{{{Id{c}}Inc}cI`}0{cc{}}{{}A`}{{}c{}}{{{b{{Id{c}}}}}{{AJn{c}}}I`}{{{Id{c}}In}{{Jl{c}}}I`}{{{b{{AJn{c}}}}}{{b{{Eb{c}}}}}I`}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}4{{}c{}}{{{Id{c}}In}cI`}9`999{{}Eb}{bBf}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{b{b{{f{c}}}}{b{dGd}}}{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}{}}{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}{{b{b{dGd}}}{{Dl{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}}}{}}{{}{{AK`{c}}}n}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{cc{}}{{A`{b{{AKb{c}}}}{b{d{Eb{{Dl{c}}}}}}{Eb{c}}}jCb}{{}A`}{{}c{}}{A`{{Cd{A`}}}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}c{}}`````{bBf}0{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{b{b{{f{c}}}}{b{dGd}}}{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}{}}0{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}0{{b{b{dGd}}}{{Dl{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}}}{}}0{{}{{AKd{c}}}n}{{}{{AKf{c}}}n}{A`{{b{c}}}{}}0{A`{{b{dc}}}{}}0{A`j}0{cc{}}0{{}A`}0{{}c{}}0{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{bD`}0{{}c{}}05{IhBh}{{Ih{b{{f{c}}}}{b{dGd}}}{{Gf{c}}}Gh}{{}{{Eb{Ih}}}}{{{b{{f{c}}}}{b{dGd}}}{{Gf{c}}}Gh}{{}{{Kj{c}}}I`}{c{{Eb{{Dl{c}}}}}Gh}{{ccc}{{Eb{{Dl{c}}}}}Gh}{{cc}{{Eb{{Dl{c}}}}}Gh}{{{b{{Eb{c}}}}}{{Eb{{Dl{c}}}}}Gh}0{{{b{d{Eb{{Dl{c}}}}}}c}jGh}{{{b{d{Eb{{Dl{c}}}}}}ccc}jGh}{{{b{d{Eb{{Dl{c}}}}}}cc}jGh}{{{b{d{Eb{{Dl{c}}}}}}{b{{Eb{c}}}}}jGh}{{{b{d{Eb{{Dl{c}}}}}}{b{{AKh{c}}}}}jGh}14{{{b{Kn}}A`}{{Dl{{Ll{AKj}}}}}}````{bBf}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{AB`}}}AB`}{{b{b{dc}}}j{}}{{bl}j}{{b{b{{f{c}}}}{b{dGd}}}{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}{}}{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}{{b{b{dGd}}}{{Dl{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}}}{}}{{}{{AKl{c}}}n}{A`{{b{c}}}{}}0{A`{{b{dc}}}{}}0{A`j}0{{{b{AB`}}{b{AB`}}}H`}{{b{b{c}}}H`{}}0{{{b{d{Eb{{Dl{c}}}}}}InBhAB`}jGh}{{{b{AB`}}{b{dB`}}}Bb}{cc{}}0{{}A`}0{{}c{}}0{{}{{Kj{c}}}Gh}{bc{}}{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{bD`}0{{}c{}}07````{bBf}000{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{{Ih{b{{f{c}}}}{b{dGd}}}{{Gf{c}}}Gh}{{b{b{{f{c}}}}{b{dGd}}}{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}{}}000{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}000{{b{b{dGd}}}{{Dl{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}}}{}}000{A`{{b{c}}}{}}000{A`{{b{dc}}}{}}000{A`j}000{cc{}}000{{}A`}000{{}c{}}000`{c{{Ab{e}}}{}{}}000{{}{{Ab{c}}}{}}000{bD`}000{{}c{}}000`{{{b{{Jj{c}}}}A`{b{{Eb{{Dl{c}}}}}}}{{Ab{jCn}}}Gh}{{{b{{AKn{c}}}}}{{Eb{{Dl{c}}}}}Cb}```{AL`Cf}{bBf}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{b{b{{f{c}}}}{b{dGd}}}{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}{}}{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}{{b{b{dGd}}}{{Dl{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}}}{}}{{}{{ALb{c}}}n}{A`{{b{c}}}{}}00{A`{{b{dc}}}{}}00{A`j}00{cc{}}00{{}A`}00{{}c{}}00{AL`}{c{{Ab{e}}}{}{}}00{{}{{Ab{c}}}{}}00{bD`}00{{}c{}}00{{{b{d{Eb{{Dl{c}}}}}}A`{Cf{cc}}{b{{Dn{H`}}}}{Cf{cc}}}{{AL`{c}}}{I`Aj}}`{bBf}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{b{b{{f{c}}}}{b{dGd}}}{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}{}}{{{b{{Fn{ce}}}}{b{dGd}}}{{Dl{e}}}Gh{{Gb{cG`}}}}{{b{b{dGd}}}{{Dl{{Mb{{Nd{{Mb{{N`{cG`}}}}Hj}}}}}}}{}}{{ccA`}{{Eb{{Dl{c}}}}}Gh}{{}{{ALd{c}}}n}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{{{b{d{Eb{{Dl{c}}}}}}ccA`}jGh}{cc{}}{{}A`}{{}c{}}{{}{{Kj{c}}}Gh}{A`A`}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}c{}}`{ALf}{ALfALh}1{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}`{{{b{{ALf{c}}}}}{{ALf{c}}}{hCb}}{{b{b{dc}}}j{}}{{bl}j}{{}{{ALf{c}}}Cb}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{{{b{{ALf{c}}}}{b{dB`}}}Bb{BdCb}}{cc{}}{{{ALj{e}}}{{ALf{c}}}Cb{{AFl{c}}}}={{}A`}{{}c{}}{ALfCh}{bc{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{ALf}{ALfALh}10{{}c{}}21`{ALj}{ALjALl}1{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{{{ALf{c}}}{{ALj{e}}}Cb{{ABd{c}}}}{cc{}}{Kd{{ALj{c}}}ACd}9{{}A`}{{}c{}}{{{ALj{c}}{b{Kh}}}KdACf}{ALjCh}{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{ALj}{ALjALl}{{}Lj}21{{}c{}}32<`<{{}Eb}``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}`{{{b{ACb}}}ACb}{{b{b{dc}}}j{}}{{bl}j}{ACbA`}{{A@nA@n}ACb}{{}ACb}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{{}j}0{c{{Ab{ACb}}}Ad}{A`j}{{{b{ACb}}{b{ACb}}}H`}{{b{b{c}}}H`{}}0{{{b{ACb}}{b{dB`}}}Bb}{A`{{Eb{ACb}}}}{cc{}}{ALnACb}{BhACb}{{}A`}{{}c{}}{ACbBh}{{{b{c}}}H`{}}{ce{}{}}{A`AM`}{A`AAh}{{A`A`}ACb}{{}c{}}{ce{}{}}{ce{}{}}{{}}{ACbA`}{{{b{ACb}}c}AbCl}{bc{}}{c{{Ab{e}}}{}{}}{Lh{{Ab{ACbc}}}{}}{{}{{Ab{c}}}{}}{bD`}{c{{Ll{{Dn{ACb}}}}}{}}{{{Ll{{Dn{ACb}}}}}c{}}{{}c{}}`{{AM`A`ACb}AM`}{{AAhA`ACb}AAh}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{ALnAMb}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{ACbALn}{cc{}}{KdALn}{{}A`}{{}c{}}{{ALn{b{Kh}}}Kd}{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn};{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}Lj}{{}c{}}`````````{b{{b{c}}}{}}0000000{{{b{d}}}{{b{dc}}}{}}0000000{c{{Ll{{AMd{c}}}}}Cb}{{A`A`A`A`}{{Ll{AMf}}}}{{A`A`}{{Ll{AMh}}}}{{A`A`In}{{Ll{AMj}}}}{{{b{Kn}}A`A`}{{Ll{AMl}}}}{{{b{Kn}}A`{Ch{A`}}}{{Ll{AMn}}}}{{{b{Kn}}}{{Ll{AN`}}}}{{}{{ANb{c}}}{}}{A`{{b{c}}}{}}0000000{A`{{b{dc}}}{}}0000000{A`j}0000000{cc{}}0000000{{{b{{ANb{c}}}}{b{Kn}}}{{b{e}}}{}{}}{{{b{d{ANb{c}}}}{b{Kn}}}{{b{de}}}{}{}}{{{b{d{Eb{{Dl{c}}}}}}A`{b{{Dn{{Dl{{Ll{AKj}}}}}}}}{b{{ANb{e}}}}}jGh{}}{{}A`}0000000{{{b{d{Eb{{Dl{c}}}}}}A`A`A`A`A`{b{{Dn{{Dl{{Ll{AKj}}}}}}}}{b{{ANb{e}}}}}jGh{}}{{{b{d{Eb{{Dl{c}}}}}}A`A`{b{{Dn{{Dl{{Ll{AKj}}}}}}}}{b{{ANb{e}}}}}jGh{}}{{{b{d{ANb{c}}}}{b{Kn}}c}j{}}{{}c{}}0000000{{{b{AMl}}}A`}{{{b{AKj}}}A`}{c{{Ab{e}}}{}{}}0000000{{}{{Ab{c}}}{}}0000000{bD`}0000000{{{b{AKj}}{b{d{Eb{{Dl{c}}}}}}{b{{ANb{e}}}}A`}cCb{}}{{{b{{AMd{c}}}}{b{d{Eb{{Dl{c}}}}}}{b{{ANb{c}}}}A`}cCb}{{{b{AMf}}{b{d{Eb{{Dl{c}}}}}}{b{{ANb{c}}}}A`}cCb}{{{b{AMh}}{b{d{Eb{{Dl{c}}}}}}{b{{ANb{c}}}}A`}cCb}{{{b{AMj}}{b{d{Eb{{Dl{c}}}}}}{b{{ANb{c}}}}A`}cCb}{{{b{AMl}}{b{d{Eb{{Dl{c}}}}}}{b{{ANb{{Dl{c}}}}}}A`}cCb}{{{b{AMn}}{b{d{Eb{{Dl{c}}}}}}{b{{ANb{c}}}}A`}cCb}{{{b{AN`}}{b{d{Eb{{Dl{c}}}}}}{b{{ANb{c}}}}A`}cCb}``{{}c{}}0000000`{{}{{b{{Cf{ce}}}}}{}{}}{{}{{b{c}}}{}}{{}{{Cf{cc}}}{}}{{}{{b{{AKb{c}}}}}{}}{{}{{b{Cf}}}}{{}{{b{{AKb{c}}}}}{}}1```````````````````````````````````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{{{b{ACj}}}ACj}{{{b{ANd}}}ANd}{{{b{M`}}}M`}{{{b{Jb}}}Jb}{{{b{ANf}}}ANf}{{b{b{dc}}}j{}}0000{{bl}j}0000{A`{{b{c}}}{}}0000{A`{{b{dc}}}{}}0000{A`j}0000{{{b{ACj}}{b{dB`}}}Bb}0{{{b{ANd}}{b{dB`}}}Bb}0{{{b{M`}}{b{dB`}}}Bb}0{{{b{Jb}}{b{dB`}}}Bb}0{{{b{ANf}}{b{dB`}}}Bb}0{{{ANh{ADj}}}ACj}{cc{}}00{{{ANh{ADj}}}Jb}11{{}A`}0000{{}c{}}0000{bc{}}0000{bCn}0000{c{{Ab{e}}}{}{}}0000{{}{{Ab{c}}}{}}0000{bD`}0000{{}c{}}0000`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{{{b{{ANj{c}}}}}A`I`}{A`j}{{{b{{ANj{c}}}}{b{{If{ce}}}}}{{Dl{c}}}I`{{ANl{c}}}}0{cc{}}?>{{A`{Id{c}}c}{{ANj{c}}}I`}<;:9{{{Ch{{b{Jd}}}}H`}{{Cf{{Mf{{Gj{cG`}}Hj}}{f{c}}}}}Gh}{{{Ch{{b{Jd}}}}H`}{{Cf{{Nn{{Dl{{Nl{cHjG`}}}}Hj}}{f{c}}}}}Gh}{{{Ch{{b{Jd}}}}}{{A@f{Hj}}}}`{ANnf}<;`{ANn};:08060{{}A`}{{}c{}}{ANnALf}{ANnDl}{ANnL`}{ANnEb}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}c{}}:`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{Dl{{AGb{c}}}}{AO`{c{Df{c}}}}{Dh{c{Df{c}}}}{b{Dn}}}{{Ab{{AOb{e}}ANd}}}EhABd}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{AOb}{A`j}{cc{}}{Kd{{AOb{c}}}ACd}{{}A`}{{}c{}}{{{AOb{c}}{b{Kh}}}KdACf}{AObALj}{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}{AObDl}{AObCf}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}Lj}{{}c{}}`{{{b{dAOd}}{b{c}}}jCb}{{{b{dAOd}}{b{{Lb{{L`{{Dl{c}}}}}}}}}jCb}{{{b{dAOd}}{b{{Dn{c}}}}}jCb}{{{b{dAOd}}}{{ALh{c}}}Cb}{AOdcCb}{{{b{{AKb{c}}}}}AOdCb}``````{AOfAGb}{b{{b{c}}}{}}00000{{{b{d}}}{{b{dc}}}{}}00000`{EfDl}{{{b{{L`{c}}}}}{{L`{c}}}h}{{{b{{Lb{c}}}}}{{Lb{c}}}h}{{{b{{AOf{c}}}}}{{AOf{c}}}{hAOh}}{{{b{{AOj{c}}}}}{{AOj{c}}}{hAOh}}{{{b{{Dh{ce}}}}}{{Dh{ce}}}{hAOh}h}{{{b{{Ef{c}}}}}{{Ef{c}}}{AOhh}}{{b{b{dc}}}j{}}00000{{bl}j}00000{LbEb}{{{b{{Lb{{L`{{Dl{c}}}}}}}}{b{{L`{c}}}}}{{Lb{{L`{c}}}}}I`}{EfAGb}{DhAOj}{Lb}{{b{Eb{Dl}}{b{{Dn{Ed}}}}{b{{El{ce}}}}{b{dg}}}{{Ab{{Dh{ce}}ACj}}}Eh{{ABl{c}}}{AOlAOn}}{{b{Eb{Dl}}{b{{Dn{Ed}}}}{b{{El{ce}}}}{Dl{{Ef{c}}}}{Ch{{Eb{{Ch{AGb}}}}}}{b{dg}}}{{Ab{{Dh{ce}}ACj}}}Eh{{ABl{c}}}{AOlAOn}}{{}{{L`{c}}}n}{A`{{b{c}}}{}}00000{A`{{b{dc}}}{}}00000{c{{Ab{{L`{e}}}}}Ad{}}{c{{Ab{{Lb{e}}}}}AdAf}{c{{Ab{{AOf{e}}}}}Ad{ADdADbAOh}}{c{{Ab{{AOj{e}}}}}Ad{ADdADbAOh}}{c{{Ab{{Dh{eg}}}}}Ad{ADdADbAOh}Af}{c{{Ab{{Ef{e}}}}}Ad{AOhADdADb}}{A`j}00000{{{Eb{c}}{Eb{c}}}{{Lb{{L`{c}}}}}{MhOf}}=={{{b{{L`{c}}}}{b{{L`{c}}}}}H`Mj}{{{b{{Lb{c}}}}{b{{Lb{c}}}}}H`Mj}{{{b{{AOf{c}}}}{b{{AOf{c}}}}}H`{MjAOh}}{{{b{{AOj{c}}}}{b{{AOj{c}}}}}H`{MjAOh}}{{{b{{Dh{ce}}}}{b{{Dh{ce}}}}}H`{MjAOh}Mj}{{{b{{Ef{c}}}}{b{{Ef{c}}}}}H`{AOhMj}}{{{b{{Ef{c}}}}A`{b{Dn}}{b{Dn}}}{{Dl{Dl}}}AOh}{DhLb}{{{b{{Lb{{L`{c}}}}}}e}{{Ab{{L`{c}}{Oj{e}}}}}Of{}}{{{b{{L`{c}}}}{b{dB`}}}BbBd}{{{b{{Lb{c}}}}{b{dB`}}}BbBd}{{{b{{AOf{c}}}}{b{dB`}}}Bb{BdAOh}}{{{b{{AOj{c}}}}{b{dB`}}}Bb{BdAOh}}{{{b{{Dh{ce}}}}{b{dB`}}}Bb{BdAOh}Bd}{{{b{{Ef{c}}}}{b{dB`}}}Bb{AOhBd}}{LbCh}00{cc{}}0{{{Cf{{Ch{{L`{{Dl{c}}}}}}{B@`{c}}}}}{{Lb{{L`{{Dl{e}}}}}}}h{h{ABd{c}}}}1{{{B@b{c}}}{{AOf{e}}}{}AOh}2{{{B@d{c}}}{{AOj{e}}}{}AOh}33{{{B@f{ce}}}{{Ef{g}}}{}{}{AOh{ABd{c}}}}{Kd{{L`{c}}}ACd}{Dh}{Lb}{{{b{{Lb{c}}}}Hj}{{Ch{{b{c}}}}}{}}{{}A`}00000{{}c{}}00000{{{L`{c}}{b{Kh}}}KdACf}{AOjCh}=={LbEb}>{{{L`{c}}{b{g}}}{{L`{e}}}{}{}{{A@l{c}{{Ol{e}}}}}}{{{Lb{c}}{b{g}}}{{Lb{e}}}{}{}{{A@l{c}{{Ol{e}}}}}}{{{b{{L`{c}}}}{b{g}}}{{L`{e}}}{}{}{{A@l{{b{c}}}{{Ol{e}}}}}}{{{b{{Lb{c}}}}{b{g}}}{{Lb{e}}}{}{}{{A@l{{b{c}}}{{Ol{e}}}}}}:{{Dl{AGb{c}}}{{Ef{c}}}AOh}{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}{{{b{{Dh{ce}}}}{b{{AO`{ce}}}}{b{{AGb{c}}}}{Ch{{b{Dn}}}}}{{B@h{{ANn{cg}}}}}Eh{{ABl{c}}}{h{B@j{c}}}}>{DhDl}{Dh}{LbCh}0000{AOfCh}11<{{{b{{L`{c}}}}e}Ab{}Cl}{{{b{{Lb{c}}}}e}AbCjCl}{{{b{{AOf{c}}}}e}Ab{ADdADbAOh}Cl}{{{b{{AOj{c}}}}e}Ab{ADdADbAOh}Cl}{{{b{{Dh{ce}}}}g}Ab{ADdADbAOh}CjCl}{{{b{{Ef{c}}}}e}Ab{AOhADdADb}Cl}{AOfDl}{AOjAGb}{bc{}}00000{c{{Ab{e}}}{}{}}00000{{}{{Ab{c}}}{}}00000{bD`}00000{{}Lj}{{}c{}}00000{LbEb}{AOjEb}{LbCh}0{Lb}:{L`}0``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{B@fDl}{{{b{{B@f{ce}}}}}{{B@f{ce}}}hh}{{{b{{B@`{c}}}}}{{B@`{c}}}h}{{b{b{dc}}}j{}}0{{bl}j}0{B@`Cf}{B@fB@l}{B@`L`}{A`{{b{c}}}{}}0{A`{{b{dc}}}{}}0{A`j}033{B@`Ch}00{{{Ef{c}}}{{B@f{eg}}}AOh{{ABd{c}}}ABd}{cc{}}0{Kd{{B@f{ce}}}ACdACd}{Kd{{B@`{c}}}ACd}8{{}A`}0{{}c{}}0{{{B@f{ce}}{b{Kh}}}KdACfACf}{{{B@`{c}}{b{Kh}}}KdACf}88{B@`Dl}9={{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}0{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}0?;;;;;;{B@`Cf}{bc{}}0{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{bD`}0{{}Lj}0{{}c{}}06{B@`Ch}0{B@`L`}```````{B@bB@l}{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{{{b{{B@b{c}}}}}{{B@b{c}}}h}{{{b{{B@d{c}}}}}{{B@d{c}}}h}{{b{b{dc}}}j{}}0{{bl}j}0{B@nB@d}{A`{{b{c}}}{}}000{A`{{b{dc}}}{}}000{A`j}000{B@nB@`}{{{Cf{{Dh{c{Df{c}}}}Dl}}}{{BA`{eg}}}AOh{{ABd{c}}}ABd}{cc{}}0{{{AOf{c}}}{{B@b{e}}}AOh{}}11{{{AOj{c}}}{{B@d{e}}}AOh{}}{Kd{{BA`{ce}}}ACdACd}{Kd{{B@n{ce}}}ACdACd}{Kd{{B@b{c}}}ACd}{Kd{{B@d{c}}}ACd}{B@n}{{}A`}000{{}c{}}000{{{BA`{ce}}{b{Kh}}}KdACfACf}{{{B@n{ce}}{b{Kh}}}KdACfACf}{{{B@b{c}}{b{Kh}}}KdACf}{{{B@d{c}}{b{Kh}}}KdACf}{B@dCh}{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}000{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}000{B@nDl}{BA`B@n}{B@nBAb}2{BA`Ch}{B@bCh}{B@bDl}{B@dB@l}{bc{}}0{c{{Ab{e}}}{}{}}000{{}{{Ab{c}}}{}}000{bD`}000{{}Lj}000{{}c{}}000{B@dCf}7{{}BAd}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{BAfCf}`0{{{b{BAf}}}BAf}{{b{b{dc}}}j{}}{{bl}j}3333333{{}BAf}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}7{{{b{BAf}}{b{dB`}}}Bb}0{cc{}}9{{}A`}{{}c{}};;;;;{{{b{BAf}}c}AbCl}<{{}j}9{bc{}}{bCn}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{BAfCf}{{}c{}}1`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{{{b{BAh}}{b{dB`}}}Bb}{cc{}}{BAfBAh}{KdBAh}{{}A`}{{}c{}}{{BAh{b{Kh}}}Kd}{{{b{dKl}}{Ch{{b{Kn}}}}H`}Cn}{{{b{Kl}}{b{{Dn{{b{Kn}}}}}}}Cn}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{}Lj}{{}c{}}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{El{ce}}}}}{{El{ce}}}{hEh}{h{ABl{c}}}}{{b{b{dc}}}j{}}{{bl}j}{ElKf}{{{b{d{El{ce}}}}}{}Eh{{ABl{c}}}}{{E`KfH`}{{El{ce}}}Eh{{ABl{c}}}}2{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{c{{Ab{{El{eg}}}}}Ad{nEh}{n{ABl{e}}}}{A`j}{{{b{{El{ce}}}}{b{dB`}}}Bb{BdEh}{Bd{ABl{c}}}}{cc{}}{{}A`}{{}c{}}{ElNn}{ElA`}{{{b{{El{eg}}}}{b{{Eb{{Dl{c}}}}}}{b{c}}{b{c}}{b{di}}}{{Ab{{Jl{c}}ACj}}}Gh{{Eh{}{{ABj{c}}}}}{{ABl{e}}}{AOlAOn}}{{{b{{El{eg}}}}{b{{Lb{{L`{c}}}}}}ccci}{{If{c{Id{c}}}}}Gh{{Eh{}{{ABj{c}}}}}{{ABl{e}}}{{An{}{{Al{c}}}}}}{{{b{{El{eg}}}}{b{{Jn{c}}}}cc{b{{Jl{c}}}}i}{{Ab{{Cf{{If{c{Id{c}}}}{Jl{c}}}}ACj}}}Gh{{Eh{}{{ABj{c}}}}}{{ABl{e}}}{{An{}{{Al{c}}}}}}{Elf}{{{b{{El{ce}}}}g}AbEh{{ABl{c}}}Cl}{ElKf}`{bc{}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}{{{b{{El{ce}}}}}{{AO`{ce}}}Eh{{ABl{c}}}}{ElCh}{{{b{{El{ce}}}}}{}Eh{{ABl{c}}}}1{{{b{{El{eg}}}}{b{{Eb{{Dl{c}}}}}}{b{{Dn{c}}}}}{{Ab{jK`}}}Gh{{Eh{}{{ABj{c}}}}}{{ABl{e}}}}{{{b{d{El{eg}}}}{b{{Eb{{Jl{c}}}}}}{b{{Jl{c}}}}}H`Gh{{Eh{}{{ABj{c}}}}}{{ABl{e}}}}{{}c{}}{{{Dl{Jj}}A`}{{El{c{Df{c}}}}}Eh}{{{Dl{Jj}}A`A`{Dl{Kj}}{Ch{{Dl{Lf}}}}H`{Ch{A`}}H`}{{El{c{Df{c}}}}}Eh}{{{Dl{Jj}}A`A`{Dl{Kj}}{Ch{{Dl{Lf}}}}H`{Ch{A`}}cH`}{{El{eg}}}{{BAj{IdA`}{{Ol{}}}}}Eh{{ABl{e}}}}````{{b{b{{Dn{{BAl{ce}}}}}}}{{B@h{j}}}Eh{{ABl{c}}}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`j}{{{b{{BAl{ce}}}}{b{dB`}}}Bb{BdEh}{Bd{ABl{c}}}}{cc{}}{{{b{{BAl{ce}}}}Hj}{{Ch{{b{{AGb{c}}}}}}}Eh{{ABl{c}}}}{{}A`}{{}c{}}{BAlb}0{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bD`}3{{b{b{{AO`{ce}}}}{b{{Dh{ce}}}}{b{Dn}}}{{B@h{j}}}Eh{{ABl{c}}}}{{}c{}}``??>>{{{b{{BAn{c}}}}}{{BAn{c}}}{hAGd}}{{{b{{AO`{ce}}}}}{{AO`{ce}}}{hEh}{h{ABl{c}}}}{{b{b{dc}}}j{}}0{{bl}j}0{AO`Eb}{AO`AGb}{A`{{b{c}}}{}}0{A`{{b{dc}}}{}}0{c{{Ab{{BAn{e}}}}}AdAGd}{c{{Ab{{AO`{eg}}}}}AdEh{{ABl{e}}}}{{{b{{AO`{ce}}}}}{}Eh{{ABl{c}}}}{AO`Id}{A`j}07{AO`}8{{{b{{BAn{c}}}}{b{dB`}}}Bb{BdAGd}}{{{b{{AO`{ce}}}}{b{dB`}}}Bb{BdEh}{Bd{ABl{c}}}}{AO`Ch}0{cc{}}0{{Kf{b{BB`}}{Ch{In}}}{{Ab{{AO`{ce}}Cn}}}Eh{{ABl{c}}}}={{}A`}0{{}c{}}0{BAnH`}{AO`Nn}6{BAnACh}{BAnADh}{BAnDl}{AO`A`}{AO`AGb}{{{b{{AO`{ce}}}}}{{b{Jl}}}Eh{{ABl{c}}}}{AO`BBb}{AO`f}434>>>{BAnCh}{{{b{{BAn{c}}}}e}AbAGdCl}{{{b{{AO`{ce}}}}g}AbEh{{ABl{c}}}Cl}{AO`Eb}0{{{b{{AO`{ce}}}}}{{b{Kf}}}Eh{{ABl{c}}}}{AO`Kf}5{{{b{{AO`{ce}}}}{b{BB`}}{Ch{H`}}}{{Ab{jCn}}}Eh{{ABl{c}}}}{bc{}}0{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{bD`}0{{}c{}}0{{{b{{AO`{ce}}}}}bEh{{ABl{c}}}}>{AO`Ch}{AO`In}","D":"HG`","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Alphas",26],[10,"Clone",4059],[1,"unit"],[1,"u8"],[10,"Default",4060],[1,"usize"],[6,"Result",4061,null,1],[10,"Deserializer",4062],[10,"Deserialize",4062],[5,"MustConsumeIterator",26],[10,"Display",4063],[17,"Item"],[10,"Iterator",4064],[5,"Formatter",4063],[8,"Result",4063],[10,"Debug",4063],[6,"ArgumentType",142],[1,"u32"],[5,"Iter",4065],[5,"Skip",4066],[5,"Take",4067],[5,"Cloned",4068],[10,"Field",4069],[5,"Range",4070],[1,"tuple",null,null,1],[6,"Option",4071,null,1],[10,"Serialize",4072],[10,"Serializer",4072],[5,"String",4073],[5,"TypeId",4074],[5,"BenchmarkCtx",96],[8,"Vesta",4075],[5,"OpeningProof",4076],[5,"ProverProof",3486],[8,"Fp",4077],[5,"Vec",4078],[1,"slice"],[5,"ConstraintSystem",394],[1,"array"],[5,"RuntimeTable",1878],[5,"RecursionChallenge",3486],[10,"KimchiCurve",3272],[5,"SRS",4076],[5,"ProverIndex",3916],[8,"BaseSpongeVesta",96],[8,"ScalarSpongeVesta",96],[8,"BaseSpongePallas",96],[8,"ScalarSpongePallas",96],[5,"ArithmeticSponge",4079],[10,"DynArgument",142],[5,"ArgumentData",142],[5,"BerkeleyChallenges",237],[5,"ArgumentEnv",142],[6,"BerkeleyChallengeTerm",237],[10,"ExprOps",1163],[5,"Cache",657],[8,"E",237],[10,"PrimeField",4080],[8,"ConstantExpr",657],[5,"Constants",657],[5,"ArgumentWitness",142],[1,"bool"],[10,"Hasher",4081],[6,"CurrOrNext",1189],[5,"LookupEnvironment",237],[5,"Environment",237],[6,"Column",237],[6,"Ordering",4082],[6,"Domain",609],[10,"FftField",4083],[5,"EvaluationDomains",609],[5,"Radix2EvaluationDomain",4084],[5,"Evaluations",4085],[6,"GateType",1189],[5,"HashMap",4086],[5,"CacheId",657],[1,"u64"],[5,"Builder",394],[6,"SetupError",3280],[5,"FeatureFlags",394],[5,"EvaluatedColumnCoefficients",394],[5,"ColumnEvaluations",394],[5,"CircuitGate",1189],[5,"DensePolynomial",4087],[5,"WitnessOverDomains",2131],[6,"GateError",394],[5,"LookupFeatures",1570],[6,"Value",4088],[5,"Arc",4089,null,1],[5,"OCamlRuntime",4090],[5,"LookupTable",2014],[5,"Env",4091],[1,"str"],[5,"PointEvaluations",3486],[5,"ProofEvaluations",3486],[5,"DomainConstantEvaluations",582],[5,"RuntimeTableCfg",1878],[5,"JsValue",4092],[1,"u128"],[5,"Box",4093,null,1],[15,"Custom",580],[6,"DomainCreationError",3280],[6,"Operations",657],[10,"Literal",657],[8,"Expr",657],[10,"Zero",4094],[10,"PartialEq",4082],[17,"F"],[6,"ConstantTerm",657],[6,"ConstantExprInner",657],[10,"AlphaChallengeTerm",657],[6,"ExprInner",657],[5,"Variable",657],[6,"FeatureFlag",657],[5,"RowOffset",657],[6,"PolishToken",657],[5,"Linearization",657],[10,"Ord",4082],[17,"Column"],[10,"ColumnEnvironment",657],[10,"Copy",4095],[10,"ColumnEvaluations",657],[6,"ExprError",657],[17,"Output"],[10,"Index",4096],[10,"FormattedOutput",657],[1,"never"],[10,"Hash",4081],[5,"HashSet",4097],[10,"Neg",4098],[10,"One",4094],[10,"Fn",4099],[1,"i32"],[10,"PartialOrd",4082],[15,"Mds",1161],[6,"CircuitGateError",1189],[10,"Connect",1189],[8,"GateWires",3066],[6,"FFOps",2362],[5,"BigUint",4100],[6,"GenericGateSpec",2483],[6,"RotMode",2818],[5,"CamlCircuitGate",1425],[10,"From",4101,null,1],[5,"Circuit",1189],[6,"LookupPattern",1570],[17,"ScalarField"],[10,"OpenProof",4102],[8,"CircuitGateResult",1189],[15,"CopyConstraint",1422],[5,"Wire",3066],[10,"FromValue",4088],[10,"IntoValue",4088],[5,"LookupInfo",1570],[6,"ProverError",3280],[10,"Rng",4103],[10,"Sized",4095],[5,"LookupConfiguration",1453],[10,"CanonicalSerialize",4104],[10,"CanonicalDeserialize",4104],[8,"JointLookupValue",1570],[5,"LookupSelectors",1482],[6,"LookupError",1482],[5,"LookupConstraintSystem",1482],[15,"LookupTableIdCollision",1567],[15,"LookupTableTooLong",1567],[8,"JointLookupSpec",1570],[5,"LookupPatterns",1570],[5,"LocalPosition",1570],[5,"SingleLookup",1570],[6,"LookupTableID",1570],[5,"JointLookup",1570],[5,"LookupPatternIter",1570],[10,"Mul",4098],[5,"IterBridge",4105],[6,"GateLookupTable",2014],[5,"RuntimeTableSpec",1878],[5,"CamlRuntimeTableSpec",1951],[5,"CamlRuntimeTableCfg",1951],[10,"Into",4101,null,1],[5,"CamlRuntimeTable",1951],[5,"GateLookupTables",2014],[5,"PolyComm",4106],[10,"CommitmentCurve",4106],[10,"DoubleEndedIterator",4107],[5,"CamlLookupTable",2105],[5,"WitnessEvals",2131],[5,"WitnessShifts",2131],[5,"LookupEvals",2131],[5,"LookupShifts",2131],[5,"LookupPolys",2131],[5,"CompleteAdd",2270],[5,"EndomulScalar",2288],[5,"EndoMulResult",2307],[5,"EndosclMul",2307],[5,"ForeignFieldAdd",2344],[10,"BigUintForeignFieldHelpers",2388],[10,"FieldArrayCompose",2388],[10,"BigUintArrayCompose",2388],[8,"KimchiForeignElement",2388],[10,"FieldArrayBigUintHelpers",2388],[10,"FieldArrayCompact",2388],[10,"BigUintArrayFieldHelpers",2388],[5,"ForeignFieldMul",2423],[5,"ExternalChecks",2451],[5,"Generic",2483],[15,"Add",2529],[15,"Mul",2529],[5,"Theta",2623],[5,"PiRho",2623],[5,"Chi",2623],[5,"Iota",2623],[5,"Shifts",2714],[5,"Poseidon",2735],[5,"ArithmeticSpongeParams",4079],[5,"RangeCheck0",2763],[5,"RangeCheck1",2763],[5,"ForeignElement",4108],[10,"WitnessCell",3141],[5,"Rot64",2818],[5,"CairoProgram",4109],[5,"VarbaseMulResult",2935],[5,"VarbaseMul",2935],[5,"Xor16",2982],[5,"RandomOracles",3004],[5,"ScalarChallenge",4110],[5,"CamlRandomOracles",3036],[5,"CamlScalarChallenge",4111],[5,"CamlWire",3120],[10,"Wirable",3066],[8,"Int",4112],[5,"ConstantCell",3141,4113],[5,"CopyBitsCell",3141,4114],[5,"CopyCell",3141,4115],[5,"CopyShiftCell",3141,4116],[5,"IndexCell",3141,4117],[5,"VariableBitsCell",3141,4118],[5,"VariableCell",3141,4119],[5,"Variables",3141,4120],[6,"VerifyError",3280],[6,"VerifierIndexError",3280],[6,"LazyCacheErrorOr",4121],[5,"LagrangeBasisEvaluations",3412],[10,"EvaluationDomain",4122],[5,"OraclesResult",3432],[5,"VerifierIndex",3980],[5,"CamlOracles",3456],[10,"FrSponge",3479],[5,"LookupCommitments",3486],[10,"AffineRepr",4123],[5,"ProverCommitments",3486],[10,"RngCore",4124],[10,"CryptoRng",4124],[5,"CamlProofEvaluations",3678],[5,"CamlLookupCommitments",3752],[5,"CamlProverCommitments",3752],[5,"CamlRecursionChallenge",3678],[8,"Result",3957],[10,"FqSponge",4110],[5,"CamlPolyComm",4125],[5,"CamlProverProof",3752],[5,"CamlProofWithPublic",3752],[5,"CamlOpeningProof",4126],[5,"LocalKey",4127],[5,"Traces",3851],[5,"CamlTraces",3896],[10,"FnMut",4099],[5,"Context",3957],[5,"LookupVerifierIndex",3980],[5,"Path",4128],[5,"OnceCell",4129],[10,"Argument",142],[5,"Keccak",2536],[5,"Rotation",2623],[5,"Claim",2861],[5,"Instruction",2861],[5,"Flags",2861],[5,"Transition",2861],[5,"Layout",2935]],"r":[[756,0],[757,0],[1181,237],[1182,657],[1183,237],[1184,237],[1185,237],[1186,237],[1187,237],[1188,237],[2131,3066],[3141,4113],[3142,4114],[3143,4115],[3144,4116],[3145,4117],[3146,4118],[3147,4119],[3148,4120],[3150,4113],[3151,4114],[3152,4115],[3153,4116],[3154,4117],[3155,4118],[3156,4119],[3157,4120],[3158,4113],[3159,4114],[3160,4115],[3161,4116],[3162,4117],[3163,4118],[3164,4119],[3165,4120],[3166,4113],[3167,4114],[3168,4115],[3169,4116],[3170,4117],[3171,4118],[3172,4119],[3173,4120],[3174,4113],[3175,4114],[3176,4115],[3177,4116],[3178,4117],[3179,4118],[3180,4119],[3181,4120],[3182,4113],[3183,4114],[3184,4115],[3185,4116],[3186,4117],[3187,4118],[3188,4119],[3189,4120],[3190,4113],[3191,4114],[3192,4115],[3193,4116],[3194,4117],[3195,4118],[3196,4119],[3197,4120],[3198,4113],[3199,4114],[3200,4115],[3201,4116],[3202,4117],[3203,4118],[3204,4119],[3205,4120],[3206,4120],[3207,4120],[3209,4113],[3210,4114],[3211,4115],[3212,4116],[3213,4117],[3214,4118],[3215,4119],[3216,4120],[3219,4120],[3220,4113],[3221,4114],[3222,4115],[3223,4116],[3224,4117],[3225,4118],[3226,4119],[3227,4120],[3228,4117],[3230,4113],[3231,4114],[3232,4115],[3233,4116],[3234,4117],[3235,4118],[3236,4119],[3237,4120],[3238,4113],[3239,4114],[3240,4115],[3241,4116],[3242,4117],[3243,4118],[3244,4119],[3245,4120],[3246,4113],[3247,4114],[3248,4115],[3249,4116],[3250,4117],[3251,4118],[3252,4119],[3253,4120],[3255,4113],[3256,4114],[3257,4115],[3258,4116],[3259,4117],[3260,4118],[3261,4119],[3262,0],[3263,0],[3264,4113],[3265,4114],[3266,4115],[3267,4116],[3268,4117],[3269,4118],[3270,4119],[3271,4120]],"b":[[44,"impl-Display-for-Alphas%3CT%3E"],[45,"impl-Debug-for-Alphas%3CF%3E"],[317,"impl-Display-for-BerkeleyChallengeTerm"],[318,"impl-Debug-for-BerkeleyChallengeTerm"],[829,"impl-Operations%3CExprInner%3CC,+Column%3E%3E"],[830,"impl-ExprOps%3CF,+BerkeleyChallengeTerm%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+BerkeleyChallengeTerm%3E%3E,+Column%3E%3E"],[871,"impl-Operations%3CExprInner%3CC,+Column%3E%3E"],[872,"impl-ExprOps%3CF,+BerkeleyChallengeTerm%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+BerkeleyChallengeTerm%3E%3E,+Column%3E%3E"],[912,"impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E"],[913,"impl-Operations%3CExprInner%3CF,+Column%3E%3E"],[914,"impl-Operations%3CExprInner%3CF,+Column%3E%3E"],[915,"impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E"],[922,"impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E"],[923,"impl-Operations%3CExprInner%3CF,+Column%3E%3E"],[924,"impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E"],[925,"impl-Operations%3CExprInner%3CF,+Column%3E%3E"],[927,"impl-Display-for-ExprError%3CColumn%3E"],[928,"impl-Debug-for-ExprError%3CColumn%3E"],[939,"impl-From%3CChallengeTerm%3E-for-Operations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E"],[940,"impl-From%3CConstantTerm%3CF%3E%3E-for-Operations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E"],[941,"impl-From%3Cu64%3E-for-Operations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E"],[942,"impl-From%3Cu64%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E"],[943,"impl-From%3CChallengeTerm%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E"],[944,"impl-From%3CConstantTerm%3CF%3E%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E"],[945,"impl-From%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E"],[946,"impl-From%3Cu64%3E-for-Operations%3CExprInner%3CF,+Column%3E%3E"],[951,"impl-From%3CConstantTerm%3CF%3E%3E-for-ConstantExprInner%3CF,+ChallengeTerm%3E"],[952,"impl-From%3CChallengeTerm%3E-for-ConstantExprInner%3CF,+ChallengeTerm%3E"],[1022,"impl-ExprOps%3CF,+BerkeleyChallengeTerm%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+BerkeleyChallengeTerm%3E%3E,+Column%3E%3E"],[1023,"impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E"],[1026,"impl-Literal-for-Operations%3CT%3E"],[1027,"impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E"],[1059,"impl-ExprOps%3CF,+BerkeleyChallengeTerm%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+BerkeleyChallengeTerm%3E%3E,+Column%3E%3E"],[1060,"impl-Operations%3CExprInner%3CC,+Column%3E%3E"],[1092,"impl-Linearization%3COperations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E,+Column%3E"],[1093,"impl-Linearization%3CVec%3CPolishToken%3CF,+Column,+ChallengeTerm%3E%3E,+Column%3E"],[1322,"impl-Display-for-CircuitGateError"],[1323,"impl-Debug-for-CircuitGateError"],[1432,"impl-From%3CCircuitGate%3CF%3E%3E-for-CamlCircuitGate%3CCamlF%3E"],[1433,"impl-From%3C%26CircuitGate%3CF%3E%3E-for-CamlCircuitGate%3CCamlF%3E"],[1521,"impl-Debug-for-LookupError"],[1522,"impl-Display-for-LookupError"],[1695,"impl-JointLookup%3CSingleLookup%3CF%3E,+LookupTableID%3E"],[1696,"impl-JointLookup%3CF,+F%3E"],[1914,"impl-From%3CCamlRuntimeTableSpec%3E-for-RuntimeTableSpec"],[1916,"impl-From%3CRuntimeTableCfg%3CF%3E%3E-for-RuntimeTableSpec"],[3355,"impl-Debug-for-ProverError"],[3356,"impl-Display-for-ProverError"],[3357,"impl-Display-for-VerifyError"],[3358,"impl-Debug-for-VerifyError"],[3359,"impl-Display-for-DomainCreationError"],[3360,"impl-Debug-for-DomainCreationError"],[3361,"impl-Display-for-SetupError"],[3362,"impl-Debug-for-SetupError"],[3363,"impl-Display-for-VerifierIndexError"],[3364,"impl-Debug-for-VerifierIndexError"],[3873,"impl-Display-for-Traces"],[3874,"impl-Debug-for-Traces"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKMLbQEDAAIACAACAA0AAgARAAEAFgAAAB0AEgA0AAEAOQAbAFYAEABpAAEAbAACAHAAAAByAAMAdwAJAIYAAACJAAAAiwAAAI4AAACWAAAAmgAMAKoAAACvAAAAtAAMAMIAAwDKAAUA1gARAO4AAADwAAAA8gAAAPQAAQD3AAAA+wABAP4AAAAAAQsADwEJABoBBwAjAQAAJgELADMBDQBHAQQATQEAAE8BBABZAQEAXAEAAF4BAQBhAQIAZwEBAGsBFACBAQQAiwEAAI0BAACWAQsAowELALQBEQDJAQUA1AEEAN4BAADlAQMA7AEFAPgBBAAAAgAAAgIDAAoCAAATAgIAGgIDACECHwBDAgAARQIBAEgCBABPAgUAVgIAAFkCAABbAgQAYQIEAGcCCgBzAg0AgwIBAIcCDwCYAgIAnAICAKACAwClAgcArwIFALYCAwC7AgUAwgIFAMkCCADTAggA3gIHAOgCAgDsAgMA8QIDAPYCHQAWAyMAPwMAAEEDAABDAwIASAMvAHkDFwCfAxQAuAMBALsDAAC9AwAAxQMAAMkDEgDpAwgA9AMFAP4DAQABBAIABQQAAAgEBAAOBAUAFgQEAB4ECgAqBBgARwQuAHgEDwCJBAIAnQQIAKcEAgCyBAAAuAQBAL4EAQDDBAEAxwQAAMkEGADtBAAA8gQAAPgEAAD6BCEAIAUBACkFBAAxBQAAMwUAADUFCwBGBQUATQULAFoFBQBhBRAAcwULAIgFBACPBQsAnAUBAJ8FDACtBQAAsQUEALcFAwC8BQAAvgUAAMEFAQDEBQMAyQUAAMsFAQDPBRIA5AUMAPIFAwD5BQQABAYBAAoGAgAOBhAAIAYCACQGAAApBgEALAYAADAGAAAzBhIARwYcAGUGOACjBggAtQYCALkGEADTBgwA4gYFAO0GEAD/BgAAAQcJAAwHCQAaBykARgcQAFoHDwBsBwoAeAcDAH0HAAB/BwEAhgcCAI8HJAC1BwAAtwcAALkHCQDGBxgA4wcAAOUHEAD4BxQAEAgAABMIBwAeCAAAIAgBACQIAgAoCA4AOAgIAEIIAwBHCAcAUAgAAFIIAABUCAMAWQgfAHsIEQCXCAUAqwgdANgIAADgCAkA6wgAAO0IDgD+CAAAAAkDAAYJDwAZCQEAHQkIACoJCQA1CQAANwkDAD4JBABECQUASwkAAE0JAABQCQQAXQkAAHkJAwB/CQYAhwkAAIkJAwCQCQAAmgkDAKEJAwCrCQEArgkFAMAJEQDUCQEA2AkJAOwJAQDxCQAA8wkCAPoJAAADCgMACQoDAA4KAQARCgsAIAoDACUKCwAyCg0AQwoAAEUKIgBuCgQAeAogAJ0KBAClCgAAqgoCAK4KAAC2CgkAwgoAAMUKBADMChUA5AoBAOgKCAADCxgAHQsAACALAQAlCxkAQAsDAEgLDwBcCwMAZAsRAHgLAAB6CxUAkwsCAJkLDACnCwYArwsDALULAAC5CxIAzQsCANELFQDoCwIA7AsOAAEMEgAWDAIAGgwCAB4MAAAgDA4AMAwIADoMAQA9DAgATwwPAGcMFwCHDAEAigwHAJ0MIQDBDAcAzgwAANAMBADWDBMA6wwCAO8MAADyDDQAKg0AAC0NBAA3DR0AVg0DAFsNAABfDQAAYQ0EAGsNAgBvDQEAcg0AAHYNAAB8DQMAgQ0HAIoNAQCNDQoApg0MALQNEQDHDQAAzQ0ZAOkNBgDxDQYA/Q0AAP8NAAABDgAABA4BAAgOBgAVDgAAGw4DACAOAgAwDgUAOA4eAF8OGwB9DgQAhA5HAM4OAADRDgkA3w5EACUPAQAoDwYAMQ8OAEEPAgBFDwcATg8FAFcPBABdDwAAZQ8AAGcPBAByDwEAdQ8BAHsPBQCCDwEAhw8CAIwPDACbDwUAow8BAKgPAQCwDwEAtA8CALgPAQDGDwEAzg8JAA==","P":[[28,"T"],[32,"F"],[33,"T"],[34,""],[35,"F"],[36,"T"],[40,"__D,F"],[41,""],[43,"T,I"],[44,"T"],[45,"F"],[46,"T,I"],[47,"T"],[49,"F"],[51,""],[53,"F"],[54,"U"],[56,"I"],[57,"FromA,FromB,FromC,FromD,FromE,FromF,FromG,FromH,FromI,FromJ,FromK"],[58,"FromA,FromB,FromC,FromD"],[59,"FromA,FromB,FromC,FromD,FromE,FromF,FromG,FromH,FromI,FromJ"],[60,""],[61,"FromA"],[62,"FromA,FromB,FromC,FromD,FromE,FromF"],[63,"FromA,FromB,FromC,FromD,FromE"],[64,"FromA,FromB,FromC,FromD"],[65,"FromA,FromB,FromC,FromD,FromE,FromF,FromG,FromH,FromI"],[66,"FromA,FromB,FromC,FromD,FromE,FromF,FromG,FromH,FromI,FromJ,FromK,FromL"],[67,"FromA,FromB,FromC"],[68,"FromA,FromB"],[69,"FromA"],[70,""],[71,"FromA,FromB"],[72,"FromA,FromB,FromC,FromD,FromE,FromF,FromG,FromH"],[73,"FromA,FromB,FromC,FromD,FromE,FromF,FromG"],[74,"FromA,FromB,FromC"],[75,"FromA,FromB,FromC,FromD,FromE,FromF,FromG,FromH,FromI,FromJ,FromK"],[76,"FromA,FromB,FromC,FromD,FromE,FromF,FromG,FromH,FromI,FromJ"],[77,"FromA,FromB,FromC,FromD,FromE,FromF,FromG,FromH,FromI"],[78,"FromA,FromB,FromC,FromD,FromE,FromF,FromG,FromH"],[79,"FromA,FromB,FromC,FromD,FromE,FromF,FromG"],[80,"FromA,FromB,FromC,FromD,FromE,FromF"],[81,"FromA,FromB,FromC,FromD,FromE"],[82,"FromA,FromB,FromC,FromD,FromE,FromF,FromG,FromH,FromI,FromJ,FromK,FromL"],[83,"T,I,Iterator::Item"],[84,"F"],[85,"F,__S"],[86,"T"],[87,""],[88,"U,T"],[90,"U"],[92,""],[94,"V"],[101,""],[102,"G"],[104,"T"],[106,""],[107,"T"],[109,""],[110,"T"],[111,""],[112,"U"],[113,""],[124,"U,T"],[125,"U"],[126,""],[127,"V"],[153,""],[154,"T"],[162,""],[164,"T"],[165,""],[166,"F,T"],[168,""],[169,"F"],[171,"F,T"],[172,""],[173,"F,T"],[174,"F"],[176,"F,T"],[177,""],[178,"F,T"],[179,"T"],[187,"__D"],[188,""],[192,"F,T"],[193,""],[194,"K"],[196,""],[197,"T"],[201,"__H"],[202,"T"],[203,""],[207,"U"],[211,"F,T"],[212,""],[213,"__S"],[214,"T"],[215,"U,T"],[219,"U"],[223,""],[227,"V"],[231,"F,T"],[232,""],[233,"F,T"],[267,""],[270,"T"],[280,""],[283,"T"],[285,""],[288,"F"],[289,""],[290,"F,ColumnEnvironment::Column"],[291,"F"],[292,""],[293,"T"],[303,"__D"],[305,""],[313,"K"],[317,""],[320,"T"],[325,""],[326,"F"],[327,"F,ColumnEnvironment::Column"],[328,"F"],[330,"__H"],[331,"F"],[332,"F,Index::Output"],[333,""],[339,"U"],[344,""],[347,"F"],[348,""],[349,"ChallengeTerm"],[350,""],[352,"ChallengeTerm"],[353,""],[358,"__S"],[360,""],[362,"ChallengeTerm"],[363,""],[364,"T"],[366,""],[367,"U,T"],[372,"U"],[377,""],[382,"F"],[383,""],[384,"V"],[389,"F"],[390,""],[391,"F"],[393,""],[405,"T"],[417,"F"],[418,""],[419,"F"],[422,"T"],[426,""],[433,"F"],[434,""],[435,"T"],[447,""],[449,"__D"],[450,"__D,F"],[452,"D,F"],[453,"F"],[454,""],[465,"F"],[466,""],[468,"F"],[471,""],[472,"F"],[473,""],[477,"F"],[478,"T"],[484,""],[485,"F"],[487,""],[497,"U"],[503,""],[505,"FromWasmAbi::Abi"],[506,"F"],[507,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[508,"F"],[509,""],[511,"F"],[512,""],[513,"IntoWasmAbi::Abi"],[514,""],[516,"F"],[517,""],[521,"F"],[523,""],[524,"F"],[525,""],[530,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[531,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[532,""],[535,"F"],[537,"__S"],[538,"F,__S"],[541,"F"],[542,""],[544,"T"],[548,"U,T"],[554,"TryFromJsValue::Error"],[555,"U"],[561,""],[568,"VectorFromWasmAbi::Abi"],[569,"VectorIntoWasmAbi::Abi"],[570,"V"],[576,""],[583,"T"],[585,"F"],[586,"T"],[587,""],[590,"F"],[591,"T"],[593,"__D,F"],[594,""],[595,"F"],[596,"T"],[597,""],[598,"U"],[599,""],[602,"F,__S"],[603,"T"],[604,"U,T"],[605,"U"],[606,""],[608,"V"],[615,"T"],[619,""],[620,"F"],[621,"T"],[623,""],[625,"F"],[626,""],[630,"T"],[634,"__D,F"],[635,""],[639,"F"],[640,"T"],[642,""],[644,"U"],[646,"F,__S"],[647,"T"],[649,"U,T"],[651,"U"],[653,""],[655,"V"],[748,"T"],[749,"F,Column"],[750,"T"],[751,"Literal::F"],[752,"F,Literal::F"],[753,"F,ChallengeTerm,Literal::F"],[754,"T,Literal::F"],[755,"T,Column,Literal::F"],[758,"F"],[759,"T"],[785,"F"],[786,"F,ChallengeTerm,T"],[787,"Column,C"],[789,"F"],[790,"Column"],[791,"F"],[792,"F,ChallengeTerm"],[793,"T"],[794,""],[797,"C,Column"],[798,"F,Column,ChallengeTerm"],[799,"E,Column"],[800,"T"],[811,""],[822,"Column"],[823,""],[824,"F"],[825,""],[826,"ColumnEnvironment::Column"],[827,"F,ChallengeTerm,Column"],[829,"C,Column"],[830,"F"],[831,"C,Column"],[832,""],[834,"F"],[835,""],[836,"E,Column"],[837,"C,Column"],[839,"T"],[865,"__D,Column"],[866,"__D,F"],[867,"__D"],[869,"__D,F,Column,ChallengeTerm"],[870,"__D,E,Column"],[871,"C,Column"],[872,"F"],[873,"C,Column"],[874,""],[888,"Column"],[889,"F"],[890,"F,ChallengeTerm"],[891,"T"],[892,""],[895,"C,Column"],[896,"F,Column,ChallengeTerm"],[897,"K"],[911,"ColumnEvaluations::Column,F"],[912,"F,ChallengeTerm,Column,Evaluations,Challenge,Environment"],[913,"F,Column,Evaluations"],[915,"F,ChallengeTerm,Column,Evaluations,Challenge,Environment"],[916,"F,Column,ChallengeTerm,Evaluations"],[917,"F,ChallengeTerm,Column,Evaluations"],[919,"F,ChallengeTerm,Column,Challenge,Environment"],[923,"F,Column,ChallengeTerm,Challenge,Environment"],[924,"F,ChallengeTerm,Column,Challenge,Environment"],[925,"F,Column,ChallengeTerm,Challenge,Environment"],[926,"F,ChallengeTerm,Column"],[927,"Column"],[930,"F"],[931,"F,ChallengeTerm"],[932,"T"],[933,""],[936,"C,Column"],[937,"F,Column,ChallengeTerm"],[938,"E,Column"],[939,"ChallengeTerm,F"],[940,"F,ChallengeTerm"],[942,"F,ChallengeTerm,Column"],[943,"ChallengeTerm,F,Column"],[944,"F,ChallengeTerm,Column"],[946,"F,Column"],[947,"T"],[951,"F,ChallengeTerm"],[952,"ChallengeTerm,F"],[953,"T"],[964,""],[965,"ColumnEnvironment::Column,ChallengeTerm,F,Challenges"],[966,"ColumnEnvironment::Column,F"],[969,"Column,__H"],[970,"T,__H"],[971,"__H"],[973,""],[987,"U"],[1000,""],[1002,"F,ChallengeTerm,Column"],[1003,"Column"],[1004,"F"],[1005,"F,ChallengeTerm"],[1006,"T"],[1009,"F"],[1010,"ColumnEnvironment::Column,F"],[1011,""],[1012,"F,ChallengeTerm,Column"],[1013,"Column"],[1014,"F"],[1015,"F,ChallengeTerm"],[1016,"T"],[1017,"F,ChallengeTerm,Column"],[1019,"F,Column"],[1021,"Literal::F"],[1022,"F"],[1023,"F,ChallengeTerm,Column"],[1024,"Literal::F,F"],[1025,"Literal::F,F,ChallengeTerm"],[1026,"Literal::F,T"],[1027,"F,ChallengeTerm,Column"],[1028,"Literal::F,T,Column"],[1029,"A,Column,B,F"],[1030,""],[1031,"F,ChallengeTerm,Column,Mul::Output"],[1032,"T"],[1033,"F,Column"],[1034,"T"],[1035,""],[1036,"F,ChallengeTerm,Column"],[1037,"Column"],[1038,"F"],[1039,"F,ChallengeTerm"],[1040,"T"],[1041,""],[1043,"F,ChallengeTerm,Column"],[1045,""],[1046,"T"],[1047,"Column"],[1048,""],[1049,"F"],[1050,"T"],[1052,""],[1053,"Column,__S"],[1054,"F,__S"],[1055,"__S"],[1057,"F,Column,ChallengeTerm,__S"],[1058,"E,Column,__S"],[1059,"F"],[1060,"C,Column"],[1062,"T"],[1063,""],[1064,"F,ChallengeTerm,Column"],[1065,"Column"],[1066,"F"],[1067,"F,ChallengeTerm"],[1068,"T"],[1069,"Literal::F"],[1070,"F,Literal::F"],[1071,"F,ChallengeTerm,Literal::F"],[1072,"T,Literal::F"],[1073,"T,Column,Literal::F"],[1074,"Literal::F"],[1075,"F,Literal::F"],[1076,"F,ChallengeTerm,Literal::F"],[1077,"T,Literal::F"],[1078,"T,Column,Literal::F"],[1079,"T"],[1090,"F,ChallengeTerm,Column"],[1092,"F,ChallengeTerm,Column,Challenge,Environment,ColEvaluations"],[1093,"F,Column,ChallengeTerm,Challenge,Environment,ColEvaluations"],[1094,""],[1096,"U,T"],[1109,"U"],[1122,"F"],[1126,""],[1140,"F"],[1141,"F,ChallengeTerm"],[1143,"ColumnEnvironment::Column,F"],[1144,"V"],[1157,"F"],[1158,"T"],[1159,""],[1164,"F,ChallengeTerm,T"],[1165,""],[1167,"F"],[1168,"F,ChallengeTerm,T"],[1169,"F,ChallengeTerm"],[1170,"F,ChallengeTerm,T"],[1171,""],[1173,"F"],[1174,""],[1180,"F"],[1224,"T"],[1235,""],[1238,"F"],[1239,"T"],[1243,""],[1253,"F"],[1273,""],[1274,"F"],[1275,"T"],[1285,""],[1289,"__D"],[1291,"__D,F"],[1292,""],[1297,"F"],[1298,""],[1301,"K"],[1307,"F"],[1320,""],[1324,"F"],[1325,"T"],[1328,"CamlF,F"],[1329,"T"],[1330,"F"],[1331,"T"],[1332,""],[1337,"__H"],[1339,""],[1344,"U"],[1349,""],[1356,"F"],[1358,"IntoWasmAbi::Abi"],[1360,""],[1366,"F"],[1367,""],[1368,"F"],[1369,""],[1371,"__S"],[1373,"F,__S"],[1375,""],[1376,"T"],[1380,""],[1381,"U,T"],[1386,""],[1388,"U"],[1393,""],[1401,"F"],[1402,"VectorFromWasmAbi::Abi"],[1404,"VectorIntoWasmAbi::Abi"],[1406,"F,G,OpeningProof"],[1407,"F"],[1415,"V"],[1420,""],[1421,"F"],[1422,""],[1426,"T"],[1428,""],[1429,"T"],[1431,""],[1432,"F,CamlF"],[1434,"T"],[1435,"F"],[1436,""],[1437,"U"],[1438,"F"],[1439,""],[1441,"U,T"],[1442,"U"],[1443,""],[1446,"V"],[1447,""],[1455,"F,R"],[1456,"T"],[1458,"F"],[1459,"T"],[1460,""],[1461,"F"],[1462,"T"],[1464,"__D,F"],[1465,""],[1467,"F"],[1468,"T"],[1469,""],[1470,"U"],[1471,""],[1472,"F"],[1473,"F,__S"],[1474,"F"],[1475,"T"],[1476,"U,T"],[1477,"U"],[1478,""],[1479,"F,I,TABLE"],[1480,"V"],[1481,"F,R"],[1489,"T"],[1496,""],[1497,"T"],[1498,"F"],[1499,"T"],[1502,""],[1506,"F"],[1507,"T"],[1514,"__D"],[1515,"__D,T"],[1516,"__D,F"],[1517,""],[1523,"T"],[1524,"F"],[1525,"T"],[1528,"T,Index::Output"],[1530,""],[1533,"U"],[1536,""],[1540,"T,U,F"],[1541,""],[1545,"__S"],[1546,"T,__S"],[1547,"F,__S"],[1548,""],[1550,"T"],[1553,""],[1554,"U,T"],[1557,"U"],[1560,""],[1563,"V"],[1566,""],[1587,"T"],[1605,"F"],[1606,""],[1610,"F"],[1611,""],[1612,"SingleLookup,LookupTableID"],[1613,""],[1615,"T"],[1624,""],[1636,"F"],[1637,""],[1639,"T"],[1657,""],[1663,"__D"],[1667,"__D,F"],[1668,"__D"],[1669,"__D,SingleLookup,LookupTableID"],[1670,"__D"],[1671,"D,F"],[1672,""],[1687,"K"],[1693,"F"],[1694,"F,K,G"],[1696,"F"],[1697,""],[1703,"SingleLookup,LookupTableID"],[1704,""],[1707,"T"],[1716,""],[1720,"F"],[1722,""],[1725,"__H"],[1726,"Index::Output"],[1728,""],[1737,"U"],[1746,""],[1749,"IntoIterator::IntoIter"],[1750,"I"],[1751,""],[1754,"FromWasmAbi::Abi"],[1757,""],[1763,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[1766,""],[1767,"F"],[1768,""],[1775,"Iterator::Item"],[1777,"IntoWasmAbi::Abi"],[1780,"Iterator::Item"],[1781,""],[1787,"T"],[1788,""],[1791,"F,K,G"],[1792,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[1795,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[1798,""],[1802,"F"],[1803,"__S"],[1807,"F,__S"],[1808,"__S"],[1809,"SingleLookup,LookupTableID,__S"],[1810,"__S"],[1811,"F,S"],[1812,""],[1817,"T"],[1826,"U,T"],[1835,"TryFromJsValue::Error"],[1838,"U"],[1847,""],[1861,"VectorFromWasmAbi::Abi"],[1864,"VectorIntoWasmAbi::Abi"],[1867,"V"],[1877,""],[1881,"T"],[1888,""],[1889,"F"],[1891,"T"],[1894,""],[1897,"F"],[1898,""],[1899,"T"],[1905,"__D"],[1906,"__D,F"],[1907,""],[1912,"F"],[1914,""],[1915,"T"],[1916,"F"],[1917,"T"],[1918,"F,CamlF"],[1920,"T"],[1921,"F"],[1922,""],[1928,"U"],[1931,"F"],[1933,""],[1934,"__S"],[1935,"F,__S"],[1936,"T"],[1939,"U,T"],[1942,"U"],[1945,""],[1948,"V"],[1954,"T"],[1960,""],[1961,"T"],[1967,""],[1971,"T"],[1972,"F,CamlF"],[1973,"T"],[1974,""],[1975,"T"],[1976,"F,CamlF"],[1977,"CamlF"],[1978,""],[1979,"CamlF"],[1980,""],[1986,"U"],[1989,"CamlF"],[1990,""],[1991,"CamlF"],[1992,""],[1999,"U,T"],[2002,"U"],[2005,""],[2011,"V"],[2017,""],[2021,"T"],[2028,""],[2030,"F"],[2031,"T"],[2034,""],[2037,"G"],[2038,"F,I"],[2039,""],[2040,"T"],[2046,"__D"],[2048,""],[2053,"K"],[2057,""],[2059,"F"],[2060,"T"],[2063,"F,CamlF"],[2064,"F"],[2066,"__H"],[2068,""],[2069,"Index::Output"],[2071,""],[2074,"U"],[2077,"IntoIterator::IntoIter"],[2078,"F"],[2079,""],[2081,"F"],[2083,""],[2084,"__S"],[2086,""],[2087,"T"],[2090,"U,T"],[2093,"U"],[2096,""],[2099,"V"],[2102,"F"],[2104,""],[2106,"T"],[2108,""],[2109,"T"],[2111,""],[2112,"T"],[2113,"F,CamlF"],[2114,"CamlF"],[2115,""],[2117,"U"],[2118,"CamlF"],[2119,""],[2121,"U,T"],[2122,"U"],[2123,""],[2125,"V"],[2126,""],[2128,"F"],[2129,""],[2130,"F"],[2138,"T"],[2150,"F"],[2156,"T"],[2162,""],[2170,"T"],[2182,""],[2188,"T"],[2194,""],[2204,"U"],[2210,""],[2218,"T"],[2224,"U,T"],[2230,"U"],[2236,""],[2242,"V"],[2248,""],[2267,"F"],[2271,""],[2272,"T"],[2274,"F"],[2275,"F,T"],[2276,"F"],[2278,"T"],[2280,""],[2281,"T"],[2282,""],[2283,"U"],[2284,"U,T"],[2285,"U"],[2286,""],[2287,"V"],[2289,""],[2290,"T"],[2292,"F"],[2293,"F,T"],[2294,"F"],[2296,"T"],[2298,""],[2299,"T"],[2300,"F"],[2301,""],[2302,"U"],[2303,"U,T"],[2304,"U"],[2305,""],[2306,"V"],[2309,""],[2311,"T"],[2315,"F"],[2316,"F,T"],[2317,"F"],[2319,"T"],[2323,""],[2325,"T"],[2327,"F"],[2328,""],[2330,"U"],[2332,""],[2333,"U,T"],[2335,"U"],[2337,""],[2339,"V"],[2345,""],[2346,"T"],[2348,"F"],[2349,"F,T"],[2350,"F"],[2352,"T"],[2354,""],[2355,"T"],[2356,""],[2357,"U"],[2358,"U,T"],[2359,"U"],[2360,""],[2361,"V"],[2365,"T"],[2367,""],[2368,"T"],[2369,""],[2370,"F"],[2371,"T"],[2373,""],[2375,"K"],[2377,"F"],[2378,""],[2379,"T"],[2380,""],[2381,"U"],[2382,"F"],[2383,"T"],[2384,"U,T"],[2385,"U"],[2386,""],[2387,"V"],[2388,""],[2409,"F"],[2410,""],[2411,"F"],[2415,""],[2425,"T"],[2427,"F"],[2428,"F,T"],[2432,"F"],[2434,"T"],[2436,""],[2437,"T"],[2438,""],[2439,"U"],[2440,"U,T"],[2441,"U"],[2442,""],[2443,"V"],[2444,""],[2446,"F"],[2447,""],[2449,"F"],[2457,"T"],[2459,""],[2463,"F"],[2465,"T"],[2467,""],[2468,"F"],[2473,"T"],[2474,""],[2476,"U"],[2477,""],[2479,"U,T"],[2480,"U"],[2481,""],[2482,"V"],[2484,""],[2496,"T"],[2500,"F"],[2501,"T"],[2502,""],[2503,"F"],[2504,"F,T"],[2505,"F"],[2507,"T"],[2511,""],[2513,"T"],[2515,""],[2517,"U"],[2520,"T"],[2521,"U,T"],[2523,"U"],[2525,""],[2527,"V"],[2529,""],[2534,"F"],[2537,""],[2539,"T"],[2541,""],[2546,"T"],[2548,""],[2551,"F,T"],[2552,"T"],[2553,""],[2554,"U"],[2555,""],[2562,"U,T"],[2563,"U"],[2564,""],[2565,"V"],[2567,""],[2628,"T"],[2638,""],[2646,"T"],[2656,""],[2663,"F"],[2664,"T"],[2669,""],[2674,"U"],[2679,""],[2692,"U,T"],[2697,"U"],[2702,""],[2707,"V"],[2712,"F"],[2714,""],[2716,"T"],[2720,""],[2721,"F"],[2723,"T"],[2724,""],[2725,"U"],[2726,"F"],[2729,"U,T"],[2730,"U"],[2731,""],[2732,"F"],[2733,"V"],[2734,"F"],[2735,""],[2742,"T"],[2744,"F"],[2745,"F,T"],[2746,"F"],[2748,"T"],[2750,""],[2751,"T"],[2752,"F"],[2753,""],[2754,"U"],[2755,""],[2756,"U,T"],[2757,"U"],[2758,""],[2759,"V"],[2765,""],[2767,"T"],[2771,"F"],[2773,"F,T"],[2775,"F"],[2779,"T"],[2783,""],[2785,"T"],[2787,""],[2789,"U"],[2791,"U,T"],[2793,"U"],[2795,""],[2797,"V"],[2799,""],[2801,"F"],[2802,""],[2803,"F"],[2817,""],[2823,"T"],[2827,""],[2828,"T"],[2829,""],[2830,"F"],[2831,"F,T"],[2832,"F"],[2834,"T"],[2838,""],[2841,"K"],[2843,"F"],[2844,""],[2845,"T"],[2847,""],[2849,"U"],[2851,"F"],[2852,"T"],[2853,"U,T"],[2855,"U"],[2857,""],[2859,"V"],[2861,""],[2870,"T"],[2878,"F"],[2883,"F,T"],[2887,"F"],[2891,"T"],[2899,""],[2903,"T"],[2907,""],[2911,"U"],[2916,"U,T"],[2920,"U"],[2924,""],[2928,"V"],[2933,"F"],[2938,""],[2940,"T"],[2946,"F"],[2947,"F,T"],[2948,"F"],[2950,"T"],[2956,""],[2959,"T"],[2962,""],[2965,"U"],[2968,""],[2969,"U,T"],[2972,"U"],[2975,""],[2978,"V"],[2981,"F"],[2983,""],[2984,"T"],[2986,"F"],[2987,"F,T"],[2988,"F"],[2991,"T"],[2993,""],[2994,"F"],[2995,"T"],[2996,""],[2997,"U"],[2998,"F"],[2999,""],[3000,"U,T"],[3001,"U"],[3002,""],[3003,"V"],[3005,""],[3008,"T"],[3011,"F"],[3012,"T"],[3013,""],[3014,"F"],[3015,"T"],[3017,""],[3018,"F"],[3019,"T"],[3020,"F,CamlF"],[3021,""],[3023,"U"],[3024,""],[3025,"T"],[3026,"U,T"],[3027,"U"],[3028,""],[3033,"V"],[3034,""],[3040,"T"],[3044,""],[3045,"F,CamlF"],[3046,"T"],[3047,"CamlF"],[3048,""],[3050,"U"],[3051,"CamlF"],[3052,""],[3055,"U,T"],[3056,"U"],[3057,""],[3063,"V"],[3064,""],[3072,"T"],[3075,""],[3076,"T"],[3077,""],[3081,"T"],[3083,""],[3085,"__D"],[3086,""],[3088,"K"],[3090,""],[3092,"T"],[3093,""],[3096,"U"],[3097,""],[3098,"FromWasmAbi::Abi"],[3099,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[3100,""],[3103,"IntoWasmAbi::Abi"],[3104,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[3105,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[3106,""],[3108,"__S"],[3109,"T"],[3110,"U,T"],[3111,"TryFromJsValue::Error"],[3112,"U"],[3113,""],[3114,"VectorFromWasmAbi::Abi"],[3115,"VectorIntoWasmAbi::Abi"],[3116,"V"],[3118,""],[3121,"T"],[3123,""],[3124,"T"],[3126,""],[3128,"T"],[3129,""],[3131,"U"],[3132,""],[3136,"U,T"],[3137,"U"],[3138,""],[3140,"V"],[3150,"T"],[3166,"F"],[3167,""],[3173,"T"],[3190,""],[3198,"T"],[3206,"T,Index::Output"],[3208,"F,T"],[3209,""],[3217,"F,T"],[3219,"T"],[3220,"U"],[3228,""],[3230,"U,T"],[3238,"U"],[3246,""],[3254,"F,T"],[3255,"F"],[3264,"V"],[3273,"AffineRepr::BaseField,AffineRepr::ScalarField"],[3274,"AffineRepr::ScalarField"],[3276,"AffineRepr::BaseField"],[3277,""],[3278,"AffineRepr::ScalarField"],[3279,""],[3315,"T"],[3325,""],[3330,"T"],[3335,""],[3340,"T"],[3350,""],[3366,"T"],[3369,""],[3370,"T"],[3372,""],[3377,"U"],[3382,"T"],[3387,""],[3392,"U,T"],[3397,"U"],[3402,""],[3407,"V"],[3413,"T"],[3417,"F"],[3418,""],[3419,"F,D"],[3421,"T"],[3422,""],[3423,"U"],[3424,"F"],[3425,"U,T"],[3426,"U"],[3427,""],[3428,"V"],[3429,"F"],[3431,""],[3434,"T"],[3437,""],[3438,"T"],[3440,""],[3443,"T"],[3444,""],[3446,"U"],[3447,""],[3451,"U,T"],[3452,"U"],[3453,""],[3454,"V"],[3455,""],[3457,"T"],[3459,"G,CamlF"],[3460,"T"],[3462,""],[3464,"T"],[3465,"CamlF"],[3466,""],[3467,"U"],[3468,"CamlF"],[3469,""],[3474,"U,T"],[3475,"U"],[3476,""],[3478,"V"],[3480,"Fr"],[3492,""],[3493,"T"],[3506,""],[3507,"Evals"],[3509,"G"],[3511,"G,OpeningProof"],[3512,"G"],[3513,"T"],[3519,""],[3526,"F"],[3527,""],[3530,"G,OpeningProof,RNG"],[3532,"Evals"],[3533,"T"],[3545,"__D,Evals"],[3547,"__D,G"],[3549,"__D,G,OpeningProof"],[3550,"__D,G"],[3551,""],[3557,"F"],[3558,""],[3560,"Evals"],[3562,"G"],[3564,"G,OpeningProof"],[3565,"G"],[3567,""],[3568,"F,ColumnEvaluations::Column"],[3569,"Evals"],[3571,"G"],[3573,"G,OpeningProof"],[3574,"G"],[3575,""],[3578,"T"],[3580,"CamlF,F"],[3581,"T"],[3582,"CamlG,G"],[3583,"T"],[3584,"CamlG,G"],[3585,"T"],[3587,"CamlG,CamlF,G"],[3588,"Evals"],[3589,""],[3591,"F"],[3592,""],[3598,"U"],[3604,"Evals"],[3605,""],[3610,"Evals,Evals2,FN"],[3611,"Eval,Eval2,FN"],[3612,"Evals,Evals2,FN"],[3613,"Eval,Eval2,FN"],[3614,""],[3615,"G"],[3616,""],[3618,"G,OpeningProof,EFqSponge"],[3619,""],[3631,"Evals,__S"],[3633,"G,__S"],[3635,"G,OpeningProof,__S"],[3636,"G,__S"],[3637,""],[3639,"T"],[3645,"U,T"],[3651,"U"],[3657,""],[3664,"V"],[3670,""],[3680,"T"],[3684,""],[3685,"CamlG,CamlF"],[3686,"CamlF"],[3687,"T"],[3689,""],[3694,"T"],[3698,""],[3705,"G,CamlG,CamlF"],[3706,"T"],[3708,"CamlG,CamlF"],[3709,"CamlF"],[3710,""],[3713,"U"],[3715,"CamlG,CamlF"],[3716,"CamlF"],[3717,""],[3734,"T"],[3736,"U,T"],[3738,"U"],[3740,""],[3744,"V"],[3746,""],[3758,"T"],[3766,"CamlG"],[3768,"T"],[3770,""],[3773,"T"],[3781,""],[3786,"G,CamlG,CamlF"],[3787,"T"],[3789,"G,CamlG"],[3790,"T"],[3792,"G,CamlG"],[3793,"CamlG,CamlF"],[3795,"CamlG"],[3797,""],[3802,"U"],[3806,"CamlG,CamlF"],[3808,"CamlG"],[3810,""],[3827,"T"],[3829,"U,T"],[3833,"U"],[3837,""],[3845,"V"],[3849,""],[3853,"T"],[3855,""],[3859,"T"],[3860,""],[3869,"T"],[3871,""],[3875,"T"],[3876,""],[3878,"U"],[3879,""],[3884,"__S"],[3885,""],[3888,"T"],[3889,""],[3890,"U,T"],[3891,"U"],[3892,""],[3894,"V"],[3895,""],[3897,"T"],[3901,""],[3903,"T"],[3904,""],[3907,"U"],[3908,""],[3911,"U,T"],[3912,"U"],[3913,""],[3915,"V"],[3917,"T"],[3919,"G,OpeningProof"],[3920,"T"],[3921,""],[3923,"G,OpeningProof"],[3925,""],[3926,"T"],[3928,"__D,G,OpeningProof"],[3929,""],[3930,"G,OpeningProof"],[3931,"T"],[3932,""],[3933,"U"],[3934,""],[3936,"F,G,OpeningProof"],[3939,""],[3940,"G,OpeningProof,__S"],[3941,""],[3943,"T"],[3944,"U,T"],[3945,"U"],[3946,""],[3947,"G,OpeningProof"],[3948,""],[3949,"G,OpeningProof"],[3950,""],[3951,"F,G,OpeningProof"],[3953,"V"],[3954,"G"],[3956,"F,G,OpeningProof"],[3961,"G,OpeningProof"],[3962,"T"],[3966,""],[3967,"G,OpeningProof"],[3968,"T"],[3969,"G,OpeningProof"],[3970,""],[3971,"U"],[3972,""],[3974,"U,T"],[3975,"U"],[3976,""],[3978,"G,OpeningProof"],[3979,"V"],[3982,"T"],[3986,"G"],[3987,"G,OpeningProof"],[3988,"T"],[3990,""],[3994,"T"],[3998,"__D,G"],[3999,"__D,G,OpeningProof"],[4000,"G,OpeningProof"],[4001,""],[4007,"G"],[4008,"G,OpeningProof"],[4009,""],[4011,"T"],[4013,"G,OpeningProof"],[4014,""],[4017,"U"],[4019,""],[4027,"G,OpeningProof"],[4028,""],[4037,"G,__S"],[4038,"G,OpeningProof,__S"],[4039,""],[4041,"G,OpeningProof"],[4042,""],[4044,"G,OpeningProof"],[4045,"T"],[4047,"U,T"],[4049,"U"],[4051,""],[4053,"V"],[4055,"G,OpeningProof"],[4056,""]]}],["kimchi_msm",{"t":"IIIISIIISEEEEEESIIIOCCCCCCOOCCCCCOCOOCCCEEEEECCCCKKKKKKRMMMMMMMMHMMMMHHHFFKRFFRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNFONNNNNONNNNNNNNNNNNONONNNNNNFONNNNNNNNNNONNNNNNNNNNOONNNONNONNNNNNNNONNFNNONONNONONNNNNNNNOONNNNNOGKPPPPPPTPNNNNNNNNNNNNNNNNNNNNNNMNNNNNPPPPIPPPPPHHCCCPPPPGGGGSPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHIGFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCPGSSPPPPPNNNNNNNNNNNNNNNNNNNNNNNHHHGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFKMNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNONNNNNNONNNNNNNNMNNNNNNNNNMMMONCNMONNNNNNMNNNNNNNNNNNNNNNNFFONNNNNNNNNNNOOOONNNNNNOOOOOOOOOOOOONNNNNNNNPGPIGIPNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFNNNNNHNNNNNNNNNNNOHHNNNNNNNONFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNHNNNNNNSCCCPPPPPPPPSSPPPPGNNNNNNNNNNNNNNNNNNNNNNNKSSSSHMHHHHHHHHHHHHIGFPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCHHHHCCCPPPPPPPSSGNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHHHHGFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHFNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BN254","BN254G1Affine","BN254G2Affine","BaseSponge","DOMAIN_SIZE","Ff1","Ff2","Fp","LIMB_BITSIZE","Logup","LogupProof","LogupTable","LogupTableID","LogupWitness","LookupTableID","N_LIMBS","OpeningProof","ScalarSponge","SpongeParams","blinding","circuit_design","column_env","columns","expr","fec","ffa","last_squeezed","","logup","lookups","precomputed_srs","proof","prover","quotient","serialization","sponge","","test","verifier","witness","ConstraintBuilderEnv","MPrism","SubEnvColumn","SubEnvLookup","WitnessBuilderEnv","capabilities","composition","constraints","witness","ColAccessCap","ColWriteCap","DirectWitnessCap","HybridCopyCap","LookupCap","MultiRowReadCap","Variable","assert_zero","constant","curr_row","hcopy","lookup","lookup_runtime_write","next_row","read_column","read_column_array","read_row_column","set_assert_mapper","variable_to_field","write_column","write_column_array","write_column_array_const","write_column_const","ComposedMPrism","IdMPrism","MPrism","Source","SubEnvColumn","SubEnvLookup","Target","assert_zero","","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","compose","constant","","curr_row","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","hcopy","","init","","","","into","","","","lookup","","lookup_runtime_write","","new","","next_row","re_get","","","read_column","","read_row_column","set_assert_mapper","","to_owned","traverse","","","try_from","","","","try_into","","","","type_id","","","","variable_to_field","vzip","","","","write_column","","ConstraintBuilderEnv","assert_mapper","assert_zero","bitmask_be","borrow","borrow_mut","constant","constraints","create","deref","deref_mut","drop","from","get_constraints","get_lookup_constraints","get_relation_constraints","hcopy","init","into","lookup","lookup_reads","lookup_runtime_write","lookup_writes","read_column","set_assert_mapper","try_from","try_into","type_id","vzip","WitnessBuilderEnv","assert_mapper","assert_zero","bitmask_be","borrow","borrow_mut","constant","create","curr_row","deref","deref_mut","drop","fixed_selectors","from","get_logup_witness","get_lookup_multiplicities","get_proof_inputs","get_relation_witness","get_runtime_tables","hcopy","init","into","lookup","lookup_multiplicities","lookup_reads","lookup_runtime_write","next_row","","phantom_cix","read_column","read_row_column","runtime_lookup_writes","set_assert_mapper","set_fixed_selector_cix","set_fixed_selectors","try_from","try_into","type_id","variable_to_field","vzip","witness","write_column","write_column_raw","ColumnEnvironment","borrow","borrow_mut","challenges","column_domain","constants","deref","deref_mut","domain","drop","fixed_selectors","from","get_challenges","get_column","get_constants","get_domain","init","into","l0_1","","lookup","try_from","try_into","type_id","vanishes_on_zero_knowledge_and_previous_rows","vzip","witness","Column","ColumnIndexer","DynamicSelector","FixedSelector","LookupAggregation","LookupFixedTable","LookupMultiplicity","LookupPartialSum","N_COL","Relation","add_rel_offset","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","is_alpha","is_witness","latex","ocaml","text","to_column","to_owned","try_from","try_into","type_id","vzip","Add","Atom","Cache","Double","E","IfFeature","Mul","Pow","Square","Sub","curr_cell","next_cell","columns","interpreter","lookups","Carry1","Carry2","Carry3","F","FECColumn","FECColumnInput","FECColumnInter","FECColumnOutput","FEC_N_COLUMNS","Input","Inter","Output","Q1","Q1L","Q1Sign","Q2","Q2L","Q2Sign","Q3","Q3L","Q3Sign","S","XP","XQ","XR","YP","YQ","YR","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","cmp","","","","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","fmt","","","","from","","","","init","","","","into","","","","partial_cmp","","","","to_column","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","constrain_ec_addition","ec_add_circuit","limbs_to_bigints","Lookup","LookupTable","LookupTableIter","RangeCheck14Abs","RangeCheck15","RangeCheck9Abs","RangeCheckFfHighest","all_variants","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cmp","deref","","deref_mut","","drop","","entries","eq","equivalent","","fmt","","from","","from_u32","hash","init","","into","","into_iter","is_fixed","is_member","iter","ix_by_value","len","length","next","next_back","nth","partial_cmp","runtime_create_column","size_hint","to_owned","","to_u32","try_from","","try_into","","type_id","","vzip","","columns","interpreter","lookups","Carry","FFAColumn","FFA_NPUB_COLUMNS","FFA_N_COLUMNS","InputA","InputB","ModulusF","Quotient","Remainder","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_column","to_owned","try_from","try_into","type_id","vzip","constrain_ff_addition","constrain_ff_addition_row","ff_addition_circuit","LookupTable","LookupTableIter","RangeCheck15","RangeCheck1BitSigned","all_variants","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cmp","deref","","deref_mut","","drop","","entries","eq","equivalent","","fmt","","from","","from_u32","hash","init","","into","","into_iter","is_fixed","is_member","iter","ix_by_value","len","length","next","next_back","nth","par_bridge","partial_cmp","runtime_create_column","size_hint","to_owned","","to_u32","try_from","","try_into","","type_id","","vzip","","Logup","LogupWitness","LookupProof","LookupTable","LookupTableID","all_variants","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","combine_lookups","constraint_lookups","deref","","","","deref_mut","","","","drop","","","","entries","eq","","equivalent","","","","f","fmt","","","","from","","","","from_u32","init","","","","into","","","","into_iter","is_fixed","ix_by_value","length","m","new","prover","random","runtime_create_column","table_id","to_constraint","to_field","to_owned","","","","to_u32","try_from","","","","try_into","","","","type_id","","","","vzip","","","","Env","QuotientPolynomialEnvironment","beta","borrow","","borrow_mut","","create","deref","","deref_mut","","drop","","fixed_lookup_tables_comms_d1","fixed_lookup_tables_evals_d8","fixed_lookup_tables_poly_d1","fixed_tables_evals_d8","from","","init","","into","","joint_combiner","lookup_aggregation_comm_d1","lookup_aggregation_evals_d8","","lookup_aggregation_poly_d1","lookup_counters_comm_d1","lookup_counters_evals_d8","","lookup_counters_poly_d1","lookup_terms_comms_d1","lookup_terms_evals_d8","","lookup_terms_poly_d1","try_from","","try_into","","type_id","","vzip","","Custom","DummyLookupTable","","Lookup","LookupTableIDs","LookupWitness","RangeCheck16","all_variants","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cmp","","deref","","deref_mut","","drop","","entries","eq","","equivalent","","","","f","fmt","","from","","from_u32","","hash","","init","","into","","is_fixed","","ix_by_value","","length","","m","partial_cmp","","random","runtime_create_column","","to_owned","","to_u32","","try_from","","try_into","","type_id","","vzip","","TestPairingSRS","borrow","borrow_mut","clone","clone_into","clone_to_uninit","create_and_store_srs","default","deref","deref_mut","deserialize","drop","eq","equivalent","","fmt","from","","full_srs","get_bn254_srs","get_bn254_srs_path","init","into","serialize","to_owned","try_from","try_into","type_id","verifier_srs","vzip","Proof","ProofCommitments","ProofEvaluations","ProofInputs","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","deref_mut","","","","drop","","","","eq","equivalent","","evaluate","evaluations","fmt","","","","from","","","","init","","","","into","","","","logups","random","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","ConstraintDegreeTooHigh","ConstraintNotSatisfied","Generic","ProverError","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","","from","init","into","prove","to_owned","to_string","try_from","try_into","type_id","vzip","N_INTERMEDIATE_LIMBS","column","interpreter","lookups","Carry","ChalConverted","ChalIntermediate","ChalKimchi","CoeffInput","CoeffResult","CurrentRow","FFieldModulus","N_COL_SER","N_FSEL_SER","PreviousCoeffRow","QuotientLarge","QuotientSign","QuotientSmall","SerializationColumn","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_column","to_owned","try_from","try_into","type_id","vzip","HybridSerHelpers","LIMB_BITSIZE_LARGE","LIMB_BITSIZE_SMALL","N_LIMBS_LARGE","N_LIMBS_SMALL","bigint_to_biguint_f","bitmask_be","build_selectors","combine_carry","combine_limbs_m_to_n","combine_small_to_large","constrain_multiplication","deserialize_field_element","ff_modulus_highest_limb","fold_choice2","limb_decompose_biguint","limb_decompose_ff","multiplication_circuit","serialization_circuit","Lookup","LookupTable","LookupTableIter","MultiplicationBus","RangeCheck14Abs","RangeCheck15","RangeCheck4","RangeCheck9Abs","RangeCheckFfHighest","all_variants","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cmp","deref","","deref_mut","","drop","","entries","eq","equivalent","","fmt","","from","","from_u32","hash","init","","into","","into_iter","is_fixed","is_member","iter","ix_by_value","len","length","next","next_back","nth","partial_cmp","runtime_create_column","size_hint","to_owned","","to_u32","try_from","","try_into","","type_id","","vzip","","generic","logup","proof_system","test_circuit","test_completeness_generic","test_completeness_generic_no_lookups","test_completeness_generic_only_relation","test_soundness_generic","columns","interpreter","lookups","A","B","C","D","FixedSel1","FixedSel2","FixedSel3","N_COL_TEST","N_FSEL_TEST","TestColumn","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_column","to_owned","try_from","try_into","type_id","vzip","build_fixed_selectors","constrain_addition","constrain_lookups","constrain_multiplication","constrain_test_const","constrain_test_fixed_sel","constrain_test_fixed_sel_degree_7","constrain_test_fixed_sel_degree_7_mul_witness","constrain_test_fixed_sel_degree_7_with_constants","lookups_circuit","test_addition","test_const","test_fixed_sel","test_fixed_sel_degree_7","test_fixed_sel_degree_7_mul_witness","test_fixed_sel_degree_7_with_constants","test_multiplication","LookupTable","LookupTableIter","RangeCheck15","RuntimeTable1","RuntimeTable2","all_variants","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cmp","deref","","deref_mut","","drop","","entries","eq","equivalent","","fmt","","from","","from_u32","hash","init","","into","","into_iter","is_fixed","is_member","iter","ix_by_value","len","length","next","next_back","nth","par_bridge","partial_cmp","runtime_create_column","size_hint","to_owned","","to_u32","try_from","","try_into","","type_id","","vzip","","verify","Witness","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cols","combine","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","from_par_iter","hash","index","init","into","into_iter","","into_par_iter","","","is_empty","len","par_iter","par_iter_mut","relax","to_owned","to_pub_columns","try_from","","try_into","type_id","vzip","zero_vec"],"q":[[0,"kimchi_msm"],[40,"kimchi_msm::circuit_design"],[49,"kimchi_msm::circuit_design::capabilities"],[72,"kimchi_msm::circuit_design::composition"],[162,"kimchi_msm::circuit_design::constraints"],[191,"kimchi_msm::circuit_design::witness"],[234,"kimchi_msm::column_env"],[261,"kimchi_msm::columns"],[299,"kimchi_msm::expr"],[311,"kimchi_msm::fec"],[314,"kimchi_msm::fec::columns"],[434,"kimchi_msm::fec::interpreter"],[437,"kimchi_msm::fec::lookups"],[500,"kimchi_msm::ffa"],[503,"kimchi_msm::ffa::columns"],[535,"kimchi_msm::ffa::interpreter"],[538,"kimchi_msm::ffa::lookups"],[599,"kimchi_msm::logup"],[697,"kimchi_msm::logup::prover"],[742,"kimchi_msm::lookups"],[813,"kimchi_msm::precomputed_srs"],[843,"kimchi_msm::proof"],[923,"kimchi_msm::prover"],[947,"kimchi_msm::serialization"],[951,"kimchi_msm::serialization::column"],[989,"kimchi_msm::serialization::interpreter"],[1008,"kimchi_msm::serialization::lookups"],[1073,"kimchi_msm::test"],[1077,"kimchi_msm::test::generic"],[1081,"kimchi_msm::test::test_circuit"],[1084,"kimchi_msm::test::test_circuit::columns"],[1117,"kimchi_msm::test::test_circuit::interpreter"],[1134,"kimchi_msm::test::test_circuit::lookups"],[1196,"kimchi_msm::verifier"],[1197,"kimchi_msm::witness"],[1237,"ark_ff::fields::models::fp"],[1238,"alloc::vec"],[1239,"ark_ec::models::short_weierstrass::affine"],[1240,"mina_poseidon::poseidon"],[1241,"core::clone"],[1242,"core::ops::arith"],[1243,"core::convert"],[1244,"core::fmt"],[1245,"ark_ff::fields::prime"],[1246,"core::ops::function"],[1247,"alloc::boxed"],[1248,"core::option"],[1249,"core::result"],[1250,"core::any"],[1251,"alloc::collections::btree::map"],[1252,"core::marker"],[1253,"kimchi::circuits::berkeley_columns"],[1254,"kimchi::circuits::domains"],[1255,"ark_ff::fields::fft_friendly"],[1256,"kimchi::circuits::expr"],[1257,"ark_poly::domain::radix2"],[1258,"ark_poly::evaluations::univariate"],[1259,"core::cmp"],[1260,"core::hash"],[1261,"std::collections::hash::map"],[1262,"alloc::string"],[1263,"ark_ff::fields"],[1264,"num_bigint::bigint"],[1265,"rayon::iter::par_bridge"],[1266,"kimchi::curve"],[1267,"mina_poseidon::sponge"],[1268,"poly_commitment::commitment"],[1269,"ark_poly::polynomial::univariate::dense"],[1270,"ark_ec::pairing"],[1271,"poly_commitment::kzg"],[1272,"core::default"],[1273,"serde::de"],[1274,"poly_commitment::precomputed_srs"],[1275,"std::path"],[1276,"serde::ser"],[1277,"poly_commitment"],[1278,"kimchi::proof"],[1279,"rand_core"],[1280,"num_bigint::biguint"],[1281,"num_traits::identities"],[1282,"rayon::iter"],[1283,"folding::instance_witness"]],"i":"```````````````````d``````hl`````2`10``````````````````Af00C`CbCf023`23OnD```````Dh``0DbDjE`21Dl13200001322013201320132001320321320132032323224103223204101320132013202132032`El000000000000000000000000000`Fd00000000000000000000000000000000000000000`G`0000000000000000000000000``Fn00000Cd11111111111111111111111011111F`000`00000`````If000`````Ih001111111111Ib0Id11010321032103210321032103210321032103210321100332210321032103210321032103210321032103210321032``````Il00000Jb10101010110101011111010111010011110100011010110101010```Jj```0000000000000000000000000000`````Jl000Jn101010101101010111110101110100111101000011010110101010`````ChKbKdFfKf3210321032103210``3210321032102313311132103210432103210044413`14244321043210321032103210``KjL`10110101011110010101110111011101101010101Kh`Lf```1010101010101010101010010011Lh121212121212121212012012121212121212`Lj0000`000000000000``000000000````FhMnN`Nb321032103210321033210321032103332332103210321032103332103210321032103210Nj00`0000000000000`000000````O`0000000``0000`00000000000000000000000``````Od```````````````Of0000000Oh10101010110101011111010111010011110100011010110101010```````````Oj000000```00000000000000000000000```````````````````Ol0000A@`101010101101010111110101110100111101000011010110101010``Fj00000000000000000000000000000000000000","f":"````{{}b}```0``````0```{df}``````{hj}{lj}`````{dn}`{hA`}{lA`}```````````````````{{{Ah{Ab{Af{}{{Ad{c}}}}}}c}Aj{Al{B`{c}{{An{c}}}}{Bb{c}{{An{c}}}}{Bd{c}{{An{c}}}}{Bf{}{{An{c}}}}{Bj{Bh}}Bl}}{ceBn{}}{{{Ah{C`}}}b}{{{Ah{AbCb}}{Ah{c}}e}c{}{{Cd{b}}}}{{{Ah{AbCf}}c{j{e}}}AjCh{}}0{{{Ah{AbC`}}}Aj}{{{Ah{{Af{}{{Ad{c}}}}}}e}c{Al{B`{c}{{An{c}}}}{Bb{c}{{An{c}}}}{Bd{c}{{An{c}}}}{Bf{}{{An{c}}}}{Bj{Bh}}Bl}{{Cd{b}}}}{{{Ah{Abg}}i}CjBn{{Cd{b}}}{{Af{ce}}}{{Cl{b}{{An{e}}}}}}{{{Ah{AbC`}}bc}e{{Cd{b}}}{}}{{{Ah{Ab{Af{}{{Ad{c}}}}}}{Cn{Cl}}}Aj{Al{B`{c}{{An{c}}}}{Bb{c}{{An{c}}}}{Bd{c}{{An{c}}}}{Bf{}{{An{c}}}}{Bj{Bh}}Bl}}{ce{}Bn}{{{Ah{AbD`}}c{Ah{e}}}Aj{{Cd{b}}}{}}{{{Ah{Abg}}Cji}AjBn{{Cd{b}}}{{D`{ce}}}{{Cl{b}{{An{e}}}}}}{{{Ah{Abg}}{Ah{{Cj{c}}}}i}AjBn{{Cd{b}}}{{D`{ce}}}{{Cl{b}{{An{e}}}}}}{{{Ah{Abg}}e{Ah{c}}}AjBn{{Cd{b}}}{{D`{ce}}}}```````{{{Ah{Ab{Db{cegk}}}}m}AjBn{{Cd{b}}}{{Af{ce}}}{{Cd{b}}}{{Dh{}{{Dd{e}}{Df{i}}}}}{}}{{{Ah{Ab{Dj{cegi}}}}k}AjBn{{Cd{b}}}{{Af{ce}}}{}{}}{Ah{{Ah{c}}}{}}000{{{Ah{Ab}}}{{Ah{Abc}}}{}}000{{{Ah{{Dl{c}}}}}{{Dl{c}}}Al}{{Ah{Ah{Abc}}}Aj{}}{{AhDn}Aj}{{ce}{{E`{ce}}}Dh{{Dh{}{{Dd{}}}}}}{ceBn{}}0{{{Ah{{Dj{cegi}}}}}bBn{{Cd{b}}}{{C`{ce}}}{}}{{}{{Dl{c}}}{}}{b{{Ah{c}}}{}}000{b{{Ah{Abc}}}{}}000{bAj}000{{{Ah{{Dl{c}}}}{Ah{AbEb}}}EdBl}{cc{}}000{{{Ah{Ab{Db{cegk}}}}{Ah{m}}i}mBn{{Cd{b}}}{{Cb{ce}}}{{Cd{b}}}{{Dh{}{{Dd{e}}{Df{i}}}}}{}}{{{Ah{Ab{Dj{cegi}}}}{Ah{k}}e}kBn{{Cd{b}}}{{Cb{ce}}}{}{}}{{}b}000{{}c{}}000{{{Ah{Ab{Db{ceim}}}}g{j{o}}}AjBn{{Cd{b}}}Ch{{Cf{ceg}}}{{Cd{b}}}{{Dh{}{{Dd{e}}{Df{k}}}}}{}}{{{Ah{Ab{Dj{ceim}}}}k{j{o}}}AjBn{{Cd{b}}}Ch{{Cf{ceg}}}Ch{{Dh{}{{Dd{g}}{Df{k}}}}}{}}10{{{Ah{Abg}}i}{{Db{cegi}}}Bn{{Cd{b}}}{{Af{ce}}}{}}{{{Ah{Abg}}i}{{Dj{cegi}}}Bn{{Cd{b}}}{{Af{ce}}}{}}{{{Ah{Ab{Dj{cegi}}}}}AjBn{{Cd{b}}}{{C`{ce}}}{}}{{{Ah{{Dh{}{{Dd{c}}{Df{e}}}}}}e}c{}{}}{{{Ah{{E`{ce}}}}g}iDh{{Dh{}{{Dd{}}}}}{}{}}{{{Ah{{Dl{c}}}}e}g{}{}{}}{{{Ah{{Db{cegk}}}}i}mBn{{Cd{b}}}{{Af{ce}}}{{Cd{b}}}{{Dh{}{{Dd{e}}{Df{i}}}}}{}}{{{Ah{{Dj{cegi}}}}e}kBn{{Cd{b}}}{{Af{ce}}}{}{}}{{{Ah{Ab{Dj{cegi}}}}be}kBn{{Cd{b}}}{{C`{ce}}}{}{}}{{{Ah{Ab{Db{cegk}}}}{Cn{Cl}}}AjBn{{Cd{b}}}{{Af{ce}}}{{Cd{b}}}{{Dh{}{{Dd{e}}{Df{i}}}}}}{{{Ah{Ab{Dj{cegi}}}}{Cn{Cl}}}AjBn{{Cd{b}}}{{Af{ce}}}{}}{Ahc{}}{{{Ah{{Dh{}{{Dd{c}}{Df{e}}}}}}c}{{Ef{e}}}{}{}}{{{Ah{{E`{ce}}}}g}{{Ef{i}}}Dh{{Dh{}{{Dd{}}}}}{}{}}{{{Ah{{Dl{c}}}}e}{{Ef{g}}}{}{}{}}{c{{Eh{e}}}{}{}}000{{}{{Eh{c}}}{}}000{AhEj}000{ce{}Bn}{{}c{}}000{{{Ah{Ab{Db{cegk}}}}i{Ah{m}}}AjBn{{Cd{b}}}{{D`{ce}}}{{Cd{b}}}{{Dh{}{{Dd{e}}{Df{i}}}}}{}}{{{Ah{Ab{Dj{cegi}}}}e{Ah{k}}}AjBn{{Cd{b}}}{{D`{ce}}}{}{}}`{ElCn}{{{Ah{Ab{El{ce}}}}g}AjBnCh{}}{{{Ah{Ab{El{ce}}}}{Ah{g}}EnEni}gBnCh{}{{Cd{b}}}}{Ah{{Ah{c}}}{}}{{{Ah{Ab}}}{{Ah{Abc}}}{}}{ceBn{}}{Elj}{{}{{El{ce}}}BnCh}{b{{Ah{c}}}{}}{b{{Ah{Abc}}}{}}{bAj}{cc{}}{{{Ah{{El{ce}}}}}{{j{{F`{c}}}}}BnCh}00{{{Ah{Ab{El{ce}}}}{Ah{g}}i}gBnCh{}{{Cd{b}}}}{{}b}{{}c{}}{{{Ah{Ab{El{ce}}}}e{j{g}}}AjBnCh{}}{ElFb}10{{{Ah{{El{ce}}}}g}iBnCh{{Cd{b}}}{}}{{{Ah{Ab{El{ce}}}}{Cn{Cl}}}AjBnCh}{c{{Eh{e}}}{}{}}{{}{{Eh{c}}}{}}{AhEj}{{}c{}}`{FdCn}{{{Ah{Ab{Fd{ceg}}}}i}AjBn{{Cd{b}}}Ch{}}{{{Ah{Ab{Fd{ceg}}}}{Ah{i}}EnEne}iBn{{Cd{b}}}Ch{}}{Ah{{Ah{c}}}{}}{{{Ah{Ab}}}{{Ah{Abc}}}{}}{ceBn{}}{{}{{Fd{ceg}}}Bn{{Cd{b}}}Ch}{{{Ah{{Fd{ceg}}}}}bBn{{Cd{b}}}Ch}{b{{Ah{c}}}{}}{b{{Ah{Abc}}}{}}{bAj}{Fdj}{cc{}}{{{Ah{{Fd{ceg}}}}b{Fb{g{j{{j{{j{c}}}}}}}}}{{Fb{g{Ff{cg}}}}}Bn{{Cd{b}}}Ch}{{{Ah{{Fd{ceg}}}}bg}{{j{{j{c}}}}}Bn{{Cd{b}}}Ch}{{{Ah{{Fd{ceg}}}}b{Fb{g{j{{j{{j{c}}}}}}}}}{{Fh{cg}}}Bn{{Cd{b}}}Ch}{{{Ah{{Fd{ceg}}}}b}{{Fj{{j{c}}}}}Bn{{Cd{b}}}Ch}{{{Ah{{Fd{ceg}}}}b}{{Fb{g{j{{j{{j{c}}}}}}}}}Bn{{Cd{b}}}Ch}{{{Ah{Ab{Fd{ceg}}}}{Ah{i}}e}iBn{{Cd{b}}}Ch{}}{{}b}{{}c{}}{{{Ah{Ab{Fd{ceg}}}}g{j{i}}}AjBn{{Cd{b}}}Ch{}}{FdFb}01{{{Ah{Ab{Fd{ceg}}}}}AjBn{{Cd{b}}}Ch}0{FdFl}{{{Ah{{Fd{ceg}}}}e}iBn{{Cd{b}}}Ch{}}{{{Ah{Ab{Fd{ceg}}}}be}iBn{{Cd{b}}}Ch{}}4{{{Ah{Ab{Fd{ceg}}}}{Cn{Cl}}}AjBn{{Cd{b}}}Ch}{{{Ah{Ab{Fd{ceg}}}}e{j{c}}}AjBn{{Cd{b}}}Ch}{{{Ah{Ab{Fd{ceg}}}}{j{{j{c}}}}}AjBn{{Cd{b}}}Ch}{c{{Eh{e}}}{}{}}{{}{{Eh{c}}}{}}{AhEj}{ce{}Bn}{{}c{}}{Fdj}{{{Ah{Ab{Fd{ceg}}}}e{Ah{i}}}AjBn{{Cd{b}}}Ch{}}{{{Ah{Ab{Fd{ceg}}}}{Fn{b}}c}AjBn{{Cd{b}}}Ch}`{Ah{{Ah{c}}}{}}{{{Ah{Ab}}}{{Ah{Abc}}}{}}{G`Gb}{{{Ah{{G`{ce}}}}{Ah{g}}}GdGfCh{}}{G`Gh}{b{{Ah{c}}}{}}{b{{Ah{Abc}}}{}}{G`Gj}{bAj}{G`Ah}{cc{}}{{{Ah{{G`{ce}}}}}{{Ah{{Gb{c}}}}}GfCh}{{{Ah{{G`{ce}}}}{Ah{g}}}{{Ef{{Ah{{Gn{c{Gl{c}}}}}}}}}GfCh{}}{{{Ah{{G`{ce}}}}}{{Ah{{Gh{c}}}}}GfCh}{{{Ah{{G`{ce}}}}Gd}{{Gl{c}}}GfCh}{{}b}{{}c{}}{{{Ah{{G`{ce}}}}}cGfCh}{G`}{G`Ef}{c{{Eh{e}}}{}{}}{{}{{Eh{c}}}{}}{AhEj}{{{Ah{{G`{ce}}}}}{{Ah{{Gn{c{Gl{c}}}}}}}GfCh}{{}c{}}?``````````{{{Fn{b}}b}{{Fn{b}}}}{Ah{{Ah{c}}}{}}{{{Ah{Ab}}}{{Ah{Abc}}}{}}{{{Ah{{Fn{c}}}}}{{Fn{c}}}Al}{{Ah{Ah{Abc}}}Aj{}}{{AhDn}Aj}{b{{Ah{c}}}{}}{b{{Ah{Abc}}}{}}{bAj}{{{Ah{{Fn{c}}}}{Ah{{Fn{c}}}}}H`Hb}{{Ah{Ah{c}}}H`{}}0{{{Ah{{Fn{c}}}}{Ah{AbEb}}}EdBl}{cc{}}{{{Ah{{Fn{c}}}}{Ah{Abe}}}AjHdHf}{{}b}{{}c{}}{{{Ah{{Fn{b}}}}}H`}{{{Ah{{Fn{c}}}}}H`Hh}{{{Ah{{Fn{b}}}}{Ah{Ab{Hl{Hj{Fn{b}}}}}}}Hn}00{Cd{{Fn{c}}}{}}{Ahc{}}{c{{Eh{e}}}{}{}}{{}{{Eh{c}}}{}}{AhEj}{{}c{}}``````````{{{Fn{b}}}{{F`{c}}}I`}0```````````;```````````````````{Ah{{Ah{c}}}{}}000{{{Ah{Ab}}}{{Ah{Abc}}}{}}000{{{Ah{Ib}}}Ib}{{{Ah{Id}}}Id}{{{Ah{If}}}If}{{{Ah{Ih}}}Ih}{{Ah{Ah{Abc}}}Aj{}}000{{AhDn}Aj}000{{{Ah{Ib}}{Ah{Ib}}}Ij}{{{Ah{Id}}{Ah{Id}}}Ij}{{{Ah{If}}{Ah{If}}}Ij}{{{Ah{Ih}}{Ah{Ih}}}Ij}{b{{Ah{c}}}{}}000{b{{Ah{Abc}}}{}}000{bAj}000{{{Ah{Ib}}{Ah{Ib}}}H`}{{{Ah{Id}}{Ah{Id}}}H`}{{{Ah{If}}{Ah{If}}}H`}{{{Ah{Ih}}{Ah{Ih}}}H`}{{Ah{Ah{c}}}H`{}}0000000{{{Ah{Ib}}{Ah{AbEb}}}Ed}{{{Ah{Id}}{Ah{AbEb}}}Ed}{{{Ah{If}}{Ah{AbEb}}}Ed}{{{Ah{Ih}}{Ah{AbEb}}}Ed}{cc{}}000{{}b}000{{}c{}}000{{{Ah{Ib}}{Ah{Ib}}}{{Ef{Ij}}}}{{{Ah{Id}}{Ah{Id}}}{{Ef{Ij}}}}{{{Ah{If}}{Ah{If}}}{{Ef{Ij}}}}{{{Ah{Ih}}{Ah{Ih}}}{{Ef{Ij}}}}{Ib{{Fn{b}}}}{Id{{Fn{b}}}}{If{{Fn{b}}}}{Ih{{Fn{b}}}}{Ahc{}}000{c{{Eh{e}}}{}{}}000{{}{{Eh{c}}}{}}000{AhEj}000{{}c{}}000{{{Ah{Abg}}}AjBnBn{{Af{cIh}}{Cf{cIh{Il{e}}}}}}{{{Ah{Abg}}eeee}{{In{ee}}}BnBn{{D`{cIh}}{Cf{cIh{Il{e}}}}}}{{{Cj{c}}}{{j{J`}}}Bn}```````{{}{{j{{Il{c}}}}}Bn}{Ah{{Ah{c}}}{}}0{{{Ah{Ab}}}{{Ah{Abc}}}{}}0{{{Ah{{Il{c}}}}}{{Il{c}}}Al}{{{Ah{{Jb{c}}}}}{{Jb{c}}}{}}{{Ah{Ah{Abc}}}Aj{}}0{{AhDn}Aj}0{{{Ah{{Il{c}}}}{Ah{{Il{c}}}}}IjJd}{b{{Ah{c}}}{}}0{b{{Ah{Abc}}}{}}0{bAj}0{{{Ah{{Il{c}}}}Bh}{{j{e}}}BnBn}{{{Ah{{Il{c}}}}{Ah{{Il{c}}}}}H`Hb}{{Ah{Ah{c}}}H`{}}0{{{Ah{{Il{c}}}}{Ah{AbEb}}}EdBl}{{{Ah{{Jb{c}}}}{Ah{AbEb}}}Ed{}}{cc{}}0{En{{Il{c}}}Bn}{{{Ah{{Il{c}}}}{Ah{Abe}}}AjHdHf}{{}b}0{{}c{}}0{{}c{}}{{{Ah{{Il{c}}}}}H`Bn}{{{Ah{{Il{c}}}}e}H`BnBn}{{}{{Jb{c}}}{}}{{{Ah{{Il{c}}}}{Ah{{Jf{e}}}}}{{Ef{b}}}BnBn}{{{Ah{{Jb{c}}}}}b{}}{{{Ah{{Il{c}}}}}bBn}{{{Ah{Ab{Jb{c}}}}}{{Ef{e}}}{}{}}0{{{Ah{Ab{Jb{c}}}}b}{{Ef{e}}}{}{}}{{{Ah{{Il{c}}}}{Ah{{Il{c}}}}}{{Ef{Ij}}}Jh}8{{{Ah{{Jb{c}}}}}{{In{b{Ef{b}}}}}{}}{Ahc{}}0{{{Ah{{Il{c}}}}}EnBn}{c{{Eh{e}}}{}{}}0{{}{{Eh{c}}}{}}0{AhEj}0{{}c{}}0`````{{}b}0`````{Ah{{Ah{c}}}{}}{{{Ah{Ab}}}{{Ah{Abc}}}{}}{{{Ah{Jj}}}Jj}{{Ah{Ah{Abc}}}Aj{}}{{AhDn}Aj}{{{Ah{Jj}}{Ah{Jj}}}Ij}{b{{Ah{c}}}{}}{b{{Ah{Abc}}}{}}{bAj}{{{Ah{Jj}}{Ah{Jj}}}H`}{{Ah{Ah{c}}}H`{}}0{{{Ah{Jj}}{Ah{AbEb}}}Ed}{cc{}}={{}c{}}{{{Ah{Jj}}{Ah{Jj}}}{{Ef{Ij}}}}{Jj{{Fn{b}}}}{Ahc{}}{c{{Eh{e}}}{}{}}{{}{{Eh{c}}}{}}{AhEj}{{}c{}}{{{Ah{Abe}}}AjBn{{Af{cJj}}{Cf{cJjJl}}}}{{{Ah{Abe}}b}AjBn{{Af{cJj}}{Cf{cJjJl}}}}{{{Ah{Abe}}gg}AjBn{{Af{cJj}}{D`{cJj}}{Cf{cJjJl}}}Bn}````{{}{{j{Jl}}}}{Ah{{Ah{c}}}{}}0{{{Ah{Ab}}}{{Ah{Abc}}}{}}0{{{Ah{Jl}}}Jl}{{{Ah{Jn}}}Jn}{{Ah{Ah{Abc}}}Aj{}}0{{AhDn}Aj}0{{{Ah{Jl}}{Ah{Jl}}}Ij}{b{{Ah{c}}}{}}0{b{{Ah{Abc}}}{}}0{bAj}0{{{Ah{Jl}}Bh}{{j{c}}}Bn}{{{Ah{Jl}}{Ah{Jl}}}H`}{{Ah{Ah{c}}}H`{}}0{{{Ah{Jl}}{Ah{AbEb}}}Ed}{{{Ah{Jn}}{Ah{AbEb}}}Ed}{cc{}}0{EnJl}{{{Ah{Jl}}{Ah{Abc}}}AjHf}{{}b}0{{}c{}}0{{}c{}}{{{Ah{Jl}}}H`}{{{Ah{Jl}}c}H`Bn}{{}Jn}{{{Ah{Jl}}{Ah{{Jf{c}}}}}{{Ef{b}}}Bn}{{{Ah{Jn}}}b}{{{Ah{Jl}}}b}{{{Ah{AbJn}}}{{Ef{c}}}{}}0{{{Ah{AbJn}}b}{{Ef{c}}}{}}{{}{{K`{c}}}{}}{{{Ah{Jl}}{Ah{Jl}}}{{Ef{Ij}}}}9{{{Ah{Jn}}}{{In{b{Ef{b}}}}}}{Ahc{}}0{{{Ah{Jl}}}En}{c{{Eh{e}}}{}{}}0{{}{{Eh{c}}}{}}0{AhEj}0{{}c{}}0`````{{}{{j{Ch}}}}{Ah{{Ah{c}}}{}}000{{{Ah{Ab}}}{{Ah{Abc}}}{}}000{{{Ah{{Kb{ce}}}}}{{Kb{ce}}}Al{AlCh}}{{{Ah{{Kd{ce}}}}}{{Kd{ce}}}Al{AlCh}}{{{Ah{{Ff{ce}}}}}{{Ff{ce}}}Al{AlCh}}{{{Ah{{Kf{ce}}}}}{{Kf{ce}}}AlAl}{{Ah{Ah{Abc}}}Aj{}}000{{AhDn}Aj}000{{{Fn{b}}{j{{Kb{{F`{c}}e}}}}}{{F`{c}}}BnCh}{{{Ah{{Fb{c{j{{j{{F`{e}}}}}}}}}}{Ah{{Fb{c{j{{j{{F`{e}}}}}}}}}}}{{j{{F`{e}}}}}ChBn}{b{{Ah{c}}}{}}000{b{{Ah{Abc}}}{}}000{bAj}000{Kdj}{{{Ah{{Kb{ce}}}}{Ah{{Kb{ce}}}}}H`Hb{HbCh}}{{{Ah{{Ff{ce}}}}{Ah{{Ff{ce}}}}}H`Hb{HbCh}}{{Ah{Ah{c}}}H`{}}000{Ffj}{{{Ah{{Kb{ce}}}}{Ah{AbEb}}}EdBl{BlCh}}{{{Ah{{Kd{ce}}}}{Ah{AbEb}}}EdBl{BlCh}}{{{Ah{{Ff{ce}}}}{Ah{AbEb}}}EdBl{BlCh}}{{{Ah{{Kf{ce}}}}{Ah{AbEb}}}EdBlBl}{cc{}}000{EnCh}{{}b}000{{}c{}}000{{{Ah{{Kf{ce}}}}}g{}Ch{}}{{{Ah{Ch}}}H`}{{{Ah{Ch}}{Ah{{Jf{c}}}}}{{Ef{b}}}Bn}{{{Ah{Ch}}}b}<{{ce{Ah{{Jf{e}}}}}{{Kb{ec}}}ChAl}`{{{Gj{c}}}{{In{Kh{Ff{cKh}}}}}Gf}4{Kd}{{{Ah{Ch}}}{{F`{c}}}I`}{{{Ah{Ch}}}cI`}{Ahc{}}000{{{Ah{Ch}}}En}{c{{Eh{e}}}{}{}}000{{}{{Eh{c}}}{}}000{AhEj}000{{}c{}}000``{Kj}{Ah{{Ah{c}}}{}}0{{{Ah{Ab}}}{{Ah{Abc}}}{}}0{{{Fb{c{Ff{c}}}}Gj{Ah{Abg}}Ah}{{Kj{ec}}}ChKl{{Kn{e}}}}{b{{Ah{c}}}{}}0{b{{Ah{Abc}}}{}}0{bAj}0{KjFb}00{L`Ah}{cc{}}0{{}b}0{{}c{}}0;{KjLb}4{KjGn}{KjLd}76777677{c{{Eh{e}}}{}{}}0{{}{{Eh{c}}}{}}0{AhEj}0{{}c{}}0```````{{}{{j{Lf}}}}{{}{{j{Kh}}}}{Ah{{Ah{c}}}{}}0{{{Ah{Ab}}}{{Ah{Abc}}}{}}0{{{Ah{Lf}}}Lf}{{{Ah{Kh}}}Kh}{{Ah{Ah{Abc}}}Aj{}}0{{AhDn}Aj}0{{{Ah{Lf}}{Ah{Lf}}}Ij}{{{Ah{Kh}}{Ah{Kh}}}Ij}{b{{Ah{c}}}{}}0{b{{Ah{Abc}}}{}}0{bAj}0{{{Ah{Lf}}Bh}{{j{c}}}Bn}{{{Ah{Lf}}{Ah{Lf}}}H`}{{{Ah{Kh}}{Ah{Kh}}}H`}{{Ah{Ah{c}}}H`{}}000{Lhj}{{{Ah{Lf}}{Ah{AbEb}}}Ed}{{{Ah{Kh}}{Ah{AbEb}}}Ed}{cc{}}0{EnLf}{EnKh}{{{Ah{Lf}}{Ah{Abc}}}AjHf}{{{Ah{Kh}}{Ah{Abc}}}AjHf}{{}b}0{{}c{}}0{{{Ah{Lf}}}H`}{{{Ah{Kh}}}H`}{{{Ah{Lf}}{Ah{{Jf{c}}}}}{{Ef{b}}}Bn}{{{Ah{Kh}}{Ah{{Jf{c}}}}}{{Ef{b}}}Bn}{{{Ah{Lf}}}b}{{{Ah{Kh}}}b}?{{{Ah{Lf}}{Ah{Lf}}}{{Ef{Ij}}}}{{{Ah{Kh}}{Ah{Kh}}}{{Ef{Ij}}}}{{{Gj{c}}}{{In{Kh{Lh{c}}}}}Gf}87{Ahc{}}0{{{Ah{Lf}}}En}{{{Ah{Kh}}}En}{c{{Eh{e}}}{}{}}0{{}{{Eh{c}}}{}}0{AhEj}0{{}c{}}0`{Ah{{Ah{c}}}{}}{{{Ah{Ab}}}{{Ah{Abc}}}{}}{{{Ah{{Lj{c}}}}}{{Lj{c}}}{AlLl}}{{Ah{Ah{Abc}}}Aj{}}{{AhDn}Aj}{{H`b}{{M`{Ln}}}}{{}{{Lj{c}}}{MbLl}}{b{{Ah{c}}}{}}{b{{Ah{Abc}}}{}}{c{{Eh{{Lj{e}}}}}MdLl}{bAj}{{{Ah{{Lj{c}}}}{Ah{{Lj{c}}}}}H`{HbLl}}{{Ah{Ah{c}}}H`{}}0{{{Ah{{Lj{c}}}}{Ah{AbEb}}}Ed{BlLl}}{cc{}}{{{M`{c}}}{{Lj{c}}}Ll}{LjMf}{{{Gj{Mh}}}{{M`{Ln}}}}{{}Mj}{{}b}{{}c{}}{{{Ah{{Lj{c}}}}e}EhLlMl}{Ahc{}}{c{{Eh{e}}}{}{}}{{}{{Eh{c}}}{}}{AhEj}9{{}c{}}````{Ah{{Ah{c}}}{}}000{{{Ah{Ab}}}{{Ah{Abc}}}{}}000{{{Ah{{Fh{ce}}}}}{{Fh{ce}}}{AlBn}{AlCh}}{{{Ah{{Mn{ce}}}}}{{Mn{ce}}}Al{AlCh}}{{{Ah{{N`{ce}}}}}{{N`{ce}}}{AlKl}{AlCh}}{{{Ah{{Nb{ceg}}}}}{{Nb{ceg}}}{AlKl}{Al{Nd{c}}}{AlCh}}{{Ah{Ah{Abc}}}Aj{}}000{{AhDn}Aj}000{{}{{Fh{ce}}}BnCh}{b{{Ah{c}}}{}}000{b{{Ah{Abc}}}{}}000{bAj}000{{{Ah{{Fh{ce}}}}{Ah{{Fh{ce}}}}}H`{HbBn}{HbCh}}{{Ah{Ah{c}}}H`{}}0{{{Ah{{Mn{ce}}}}g}{{Eh{{Nf{c}}{Nh{g}}}}}AlCh{}}{FhFj}{{{Ah{{Fh{ce}}}}{Ah{AbEb}}}Ed{BlBn}{BlCh}}{{{Ah{{Mn{ce}}}}{Ah{AbEb}}}EdBl{BlCh}}{{{Ah{{N`{ce}}}}{Ah{AbEb}}}Ed{BlKl}{BlCh}}{{{Ah{{Nb{ceg}}}}{Ah{AbEb}}}Ed{BlKl}{Bl{Nd{c}}}{BlCh}}{cc{}}000{{}b}000{{}c{}}000{FhFb}{{{Gj{c}}}{{Fh{cKh}}}Bn}{Ahc{}}000{c{{Eh{e}}}{}{}}000{{}{{Eh{c}}}{}}000{AhEj}000{{}c{}}000````{Ah{{Ah{c}}}{}}{{{Ah{Ab}}}{{Ah{Abc}}}{}}{{{Ah{Nj}}}Nj}{{Ah{Ah{Abc}}}Aj{}}{{AhDn}Aj}{b{{Ah{c}}}{}}{b{{Ah{Abc}}}{}}{bAj}{{{Ah{Nj}}{Ah{AbEb}}}Ed}0{cc{}}{{}b}{{}c{}}{{GjAh{Ah{{Jf{F`}}}}{Cn{{Cj{j}}}}{Fh{c}}{Ah{Abe}}}{{Eh{{Nb{gic}}Nj}}}Ch{NlNn}Kl{{Nd{g}}}}{Ahc{}}{AhHn}{c{{Eh{e}}}{}{}}{{}{{Eh{c}}}{}}{AhEj}{{}c{}}8```````````88`````{Ah{{Ah{c}}}{}}{{{Ah{Ab}}}{{Ah{Abc}}}{}}{{{Ah{O`}}}O`}{{Ah{Ah{Abc}}}Aj{}}{{AhDn}Aj}{{{Ah{O`}}{Ah{O`}}}Ij}{b{{Ah{c}}}{}}{b{{Ah{Abc}}}{}}{bAj}{{{Ah{O`}}{Ah{O`}}}H`}{{Ah{Ah{c}}}H`{}}0{{{Ah{O`}}{Ah{AbEb}}}Ed}{cc{}}{{}b}{{}c{}}{{{Ah{O`}}{Ah{O`}}}{{Ef{Ij}}}}{O`{{Fn{b}}}}{Ahc{}}{c{{Eh{e}}}{}{}}{{}{{Eh{c}}}{}}{AhEj}{{}c{}}`8888{{J`{Ah{J`}}}Ob}{{{Ah{AbOd}}{Ah{c}}EnEne}c{}{{Cd{b}}}}{b{{Cj{{j{c}}}}}Bn}{CjCj}{{g{Cj{e}}}{{Cj{e}}}Bn{}{{Cl{c}{{An{e}}}}}}1{{{Ah{Abg}}}AjBnBn{{Af{cO`}}{Cf{cO`{Of{e}}}}}}{{{Ah{Abg}}{Cj{Ob}}}AjBnBn{{Af{cO`}}{Cf{cO`{Of{e}}}}{Cb{cO`}}{Od{cO`{Of{e}}}}}}{{}Ob}{{bbe}c{}{{Cl{bb}{{An{c}}}}}}{Ob{{Cj{c}}}Bn}{{{Ah{c}}}{{Cj{e}}}BnBn}{{{Ah{Abg}}eeH`}eBnBn{{D`{cO`}}{Cf{cO`{Of{e}}}}}}{{{Ah{Abg}}e{j{{Cj{c}}}}b}AjBnBn{{D`{cO`}}{Cf{cO`{Of{e}}}}{Cb{cO`}}{Od{cO`{Of{e}}}}{C`{cO`}}}}`````````{{}{{j{{Of{c}}}}}Bn}{Ah{{Ah{c}}}{}}0{{{Ah{Ab}}}{{Ah{Abc}}}{}}0{{{Ah{{Of{c}}}}}{{Of{c}}}Al}{{{Ah{{Oh{c}}}}}{{Oh{c}}}{}}{{Ah{Ah{Abc}}}Aj{}}0{{AhDn}Aj}0{{{Ah{{Of{c}}}}{Ah{{Of{c}}}}}IjJd}{b{{Ah{c}}}{}}0{b{{Ah{Abc}}}{}}0{bAj}0{{{Ah{{Of{c}}}}Bh}{{Ef{{j{e}}}}}BnBn}{{{Ah{{Of{c}}}}{Ah{{Of{c}}}}}H`Hb}{{Ah{Ah{c}}}H`{}}0{{{Ah{{Of{c}}}}{Ah{AbEb}}}EdBl}{{{Ah{{Oh{c}}}}{Ah{AbEb}}}Ed{}}{cc{}}0{En{{Of{c}}}Bn}{{{Ah{{Of{c}}}}{Ah{Abe}}}AjHdHf}{{}b}0{{}c{}}0{{}c{}}{{{Ah{{Of{c}}}}}H`Bn}{{{Ah{{Of{c}}}}e}{{Ef{H`}}}BnBn}{{}{{Oh{c}}}{}}{{{Ah{{Of{c}}}}{Ah{{Jf{e}}}}}{{Ef{b}}}BnBn}{{{Ah{{Oh{c}}}}}b{}}{{{Ah{{Of{c}}}}}bBn}{{{Ah{Ab{Oh{c}}}}}{{Ef{e}}}{}{}}0{{{Ah{Ab{Oh{c}}}}b}{{Ef{e}}}{}{}}{{{Ah{{Of{c}}}}{Ah{{Of{c}}}}}{{Ef{Ij}}}Jh}8{{{Ah{{Oh{c}}}}}{{In{b{Ef{b}}}}}{}}{Ahc{}}0{{{Ah{{Of{c}}}}}EnBn}{c{{Eh{e}}}{}{}}0{{}{{Eh{c}}}{}}0{AhEj}0{{}c{}}0````{{{j{{F`{Mh}}}}{Cn{{Cj{{j{Mh}}}}}}{Fh{Mhc}}b{Ah{Abe}}}AjCh{NlNn}}{{{j{{F`{Mh}}}}{Cn{{Cj{{j{Mh}}}}}}{Fj{{j{Mh}}}}b{Ah{Abc}}}Aj{NlNn}}{{{j{{F`{Mh}}}}{Fj{{j{Mh}}}}b{Ah{Abc}}}Aj{NlNn}}{{{j{{F`{Mh}}}}{Cn{{Cj{{j{Mh}}}}}}{Fh{Mhc}}{Fh{Mhc}}b{Ah{Abe}}}AjCh{NlNn}}``````````{{}b}0`{Ah{{Ah{c}}}{}}{{{Ah{Ab}}}{{Ah{Abc}}}{}}{{{Ah{Oj}}}Oj}{{Ah{Ah{Abc}}}Aj{}}{{AhDn}Aj}{{{Ah{Oj}}{Ah{Oj}}}Ij}{b{{Ah{c}}}{}}{b{{Ah{Abc}}}{}}{bAj}{{{Ah{Oj}}{Ah{Oj}}}H`}{{Ah{Ah{c}}}H`{}}0{{{Ah{Oj}}{Ah{AbEb}}}Ed}{cc{}}={{}c{}}{{{Ah{Oj}}{Ah{Oj}}}{{Ef{Ij}}}}{Oj{{Fn{b}}}}{Ahc{}}{c{{Eh{e}}}{}{}}{{}{{Eh{c}}}{}}{AhEj}{{}c{}}{b{{Cn{{Cj{{j{c}}}}}}}I`}{{{Ah{Abe}}}AjBn{{Af{cOj}}}}{{{Ah{Abe}}}AjBn{{Af{cOj}}{Cf{cOjOl}}}}1{{{Ah{Abe}}c}AjBn{{Af{cOj}}}}2222{{{Ah{Abe}}b}AjBn{{Af{cOj}}{D`{cOj}}{On{cOj}}{Cf{cOjOl}}}}{{{Ah{Abe}}gg}AjBn{{Af{cOj}}{D`{cOj}}}Bn}{{{Ah{Abe}}ccc}AjBn{{Af{cOj}}{D`{cOj}}}}{{{Ah{Abe}}c}AjBn{{Af{cOj}}{D`{cOj}}}}0{{{Ah{Abe}}c}AjBn{{Af{cOj}}{D`{cOj}}{On{cOj}}}}13`````{{}{{j{Ol}}}}{Ah{{Ah{c}}}{}}0{{{Ah{Ab}}}{{Ah{Abc}}}{}}0{{{Ah{Ol}}}Ol}{{{Ah{A@`}}}A@`}{{Ah{Ah{Abc}}}Aj{}}0{{AhDn}Aj}0{{{Ah{Ol}}{Ah{Ol}}}Ij}{b{{Ah{c}}}{}}0{b{{Ah{Abc}}}{}}0{bAj}0{{{Ah{Ol}}Bh}{{Ef{{j{c}}}}}Bn}{{{Ah{Ol}}{Ah{Ol}}}H`}{{Ah{Ah{c}}}H`{}}0{{{Ah{Ol}}{Ah{AbEb}}}Ed}{{{Ah{A@`}}{Ah{AbEb}}}Ed}{cc{}}0{EnOl}{{{Ah{Ol}}{Ah{Abc}}}AjHf}{{}b}0{{}c{}}0{{}c{}}{{{Ah{Ol}}}H`}{{{Ah{Ol}}c}{{Ef{H`}}}Bn}{{}A@`}{{{Ah{Ol}}{Ah{{Jf{c}}}}}{{Ef{b}}}Bn}{{{Ah{A@`}}}b}{{{Ah{Ol}}}b}{{{Ah{AbA@`}}}{{Ef{c}}}{}}0{{{Ah{AbA@`}}b}{{Ef{c}}}{}}{{}{{K`{c}}}{}}{{{Ah{Ol}}{Ah{Ol}}}{{Ef{Ij}}}}9{{{Ah{A@`}}}{{In{b{Ef{b}}}}}}{Ahc{}}0{{{Ah{Ol}}}En}{c{{Eh{e}}}{}{}}0{{}{{Eh{c}}}{}}0{AhEj}0{{}c{}}0{{GjAh{Ah{{Jf{F`}}}}{Cn{{Cj{j}}}}{Ah{{Nb{ceg}}}}{Fj{j}}}H`Kl{{Nd{c}}}Ch}`{Ah{{Ah{c}}}{}}{{{Ah{Ab}}}{{Ah{Abc}}}{}}{{{Ah{{Fj{c}}}}}{{Fj{c}}}Al}{{Ah{Ah{Abc}}}Aj{}}{{AhDn}Aj}{FjCn}{{{Fj{{Gn{c{Gl{c}}}}}}{Fj{{Gn{c{Gl{c}}}}}}c}{{Fj{{Gn{c{Gl{c}}}}}}}Gf}{{}{{Fj{c}}}{A@bAl}}{b{{Ah{c}}}{}}{b{{Ah{Abc}}}{}}{bAj}{{{Ah{{Fj{c}}}}{Ah{{Fj{c}}}}}H`Hb}{{Ah{Ah{c}}}H`{}}0{{{Ah{{Fj{c}}}}{Ah{AbEb}}}EdBl}{cc{}}{e{{Fj{c}}}{A@dBl}{{A@h{}{{A@f{c}}}}}}{{{Ah{{Fj{c}}}}{Ah{Abe}}}AjHdHf}{{{Ah{{Fj{c}}}}b}{{Ah{e}}}{}{}}{{}b}{{}c{}}{{{Fj{c}}}eAl{}}{{{Ah{{Fj{c}}}}}e{}{}}{{{Ah{Ab{Fj{c}}}}}e{}{}}{{{Ah{{Fj{c}}}}}e{}{}}{{{Fj{c}}}e{}{}}{{{Ah{{Fj{c}}}}}H`{}}{{{Ah{{Fj{c}}}}}b{}}{Ah}{{{Ah{Ab}}}}{{{Ah{{Gn{Gl}}}}}{{A@j{ce}}}{}{}}{Ahc{}}{{{Ah{{Fj{{j{c}}}}}}}{{Fj{{j{c}}}}}{A@bAl}}{{{j{c}}}{{Eh{{Fj{c}}e}}}{}{}}{c{{Eh{e}}}{}{}}{{}{{Eh{c}}}{}}{AhEj}{{}c{}}{b{{Fj{{j{c}}}}}{A@bAl}}","D":"BGn","p":[[1,"usize"],[8,"OpeningProof",0],[5,"Fp",1237],[8,"BaseSponge",0],[5,"Vec",1238],[8,"ScalarSponge",0],[5,"Affine",1239],[5,"ArithmeticSponge",1240],[0,"mut"],[17,"Variable"],[10,"ColAccessCap",49],[1,"reference",null,null,1],[1,"unit"],[10,"Clone",1241],[17,"Output"],[10,"Add",1242],[10,"Sub",1242],[10,"Mul",1242],[10,"Neg",1242],[1,"u64"],[10,"From",1243,null,1],[10,"Debug",1244],[10,"PrimeField",1245],[10,"MultiRowReadCap",49],[10,"HybridCopyCap",49],[10,"ColumnIndexer",261],[10,"LookupCap",49],[10,"LookupTableID",599],[1,"array"],[10,"Fn",1246],[5,"Box",1247,null,1],[10,"ColWriteCap",49],[5,"SubEnvColumn",72],[17,"Source"],[17,"Target"],[10,"MPrism",72],[5,"SubEnvLookup",72],[5,"IdMPrism",72],[1,"u8"],[5,"ComposedMPrism",72],[5,"Formatter",1244],[8,"Result",1244],[6,"Option",1248,null,1],[6,"Result",1249,null,1],[5,"TypeId",1250],[5,"ConstraintBuilderEnv",162],[1,"u32"],[8,"E",299],[5,"BTreeMap",1251],[5,"WitnessBuilderEnv",191],[5,"LogupWitness",599],[5,"ProofInputs",843],[5,"Witness",1197],[5,"PhantomData",1252],[6,"Column",261],[5,"ColumnEnvironment",234],[5,"BerkeleyChallenges",1253],[6,"Domain",1254],[10,"FftField",1255],[5,"Constants",1256],[5,"EvaluationDomains",1254],[5,"Radix2EvaluationDomain",1257],[5,"Evaluations",1258],[1,"bool"],[10,"PartialEq",1259],[10,"Hash",1260],[10,"Hasher",1260],[10,"Copy",1252],[5,"CacheId",1256],[5,"HashMap",1261],[5,"String",1262],[10,"Field",1263],[6,"FECColumnInput",314],[6,"FECColumnOutput",314],[6,"FECColumnInter",314],[6,"FECColumn",314],[6,"Ordering",1259],[6,"LookupTable",437],[1,"tuple",null,null,1],[5,"BigInt",1264],[5,"LookupTableIter",437],[10,"Ord",1259],[1,"slice"],[10,"PartialOrd",1259],[6,"FFAColumn",503],[6,"LookupTable",538],[5,"LookupTableIter",538],[5,"IterBridge",1265],[5,"Logup",599],[5,"LookupTable",599],[5,"LookupProof",599],[6,"LookupTableIDs",742],[5,"Env",697],[10,"KimchiCurve",1266],[10,"FqSponge",1267],[5,"QuotientPolynomialEnvironment",697],[5,"PolyComm",1268],[5,"DensePolynomial",1269],[6,"DummyLookupTable",742],[8,"LookupWitness",742],[5,"TestPairingSRS",813],[10,"Pairing",1270],[8,"BN254",0],[5,"PairingSRS",1271],[10,"Default",1272],[10,"Deserializer",1273],[5,"TestSRS",1274],[8,"Fp",0],[5,"PathBuf",1275],[10,"Serializer",1276],[5,"ProofEvaluations",843],[5,"ProofCommitments",843],[5,"Proof",843],[10,"OpenProof",1277],[5,"PointEvaluations",1278],[6,"ExprError",1256],[6,"ProverError",923],[10,"RngCore",1279],[10,"CryptoRng",1279],[6,"SerializationColumn",951],[5,"BigUint",1280],[10,"HybridSerHelpers",989],[6,"LookupTable",1008],[5,"LookupTableIter",1008],[6,"TestColumn",1084],[6,"LookupTable",1134],[10,"DirectWitnessCap",49],[5,"LookupTableIter",1134],[10,"Zero",1281],[10,"Send",1252],[17,"Item"],[10,"IntoParallelIterator",1282],[5,"RelaxedWitness",1283]],"r":[[9,599],[13,599],[14,599],[40,162],[41,72],[42,72],[43,72],[44,191]],"b":[[217,"impl-MultiRowReadCap%3CF,+CIx%3E-for-WitnessBuilderEnv%3CF,+CIx,+N_WIT,+N_REL,+N_DSEL,+N_FSEL,+LT%3E"],[218,"impl-WitnessBuilderEnv%3CF,+CIx,+N_WIT,+N_REL,+N_DSEL,+N_FSEL,+LT%3E"],[935,"impl-Display-for-ProverError"],[936,"impl-Debug-for-ProverError"],[1219,"impl-IntoIterator-for-Witness%3CN_WIT,+F%3E"],[1220,"impl-IntoIterator-for-%26Witness%3CN_WIT,+G%3E"],[1221,"impl-IntoParallelIterator-for-%26mut+Witness%3CN_WIT,+G%3E"],[1222,"impl-IntoParallelIterator-for-%26Witness%3CN_WIT,+G%3E"],[1223,"impl-IntoParallelIterator-for-Witness%3CN_WIT,+G%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJYDhQAAAAQABwAAAAoABQARAAIAFQAHACAAEQA4AAAARQAAAEkAAABQAA8AYQANAHMABQB9AAUAhAAEAIoAGQClAAQAqwADALMAAQC2AAAAuAAAALoABQDCAAQAyQACAM4AAADRAAAA0wABANYAAADZAAAA3AABAOAAAADjAAIA5wAAAOkAAQDsAAEA7wAAAPEAAQD0AAAA9wAEAP0AAAAAAQQAEQELAB4BAQAhAQQAJwEIADEBDQBEAUYAjwEDAJcBGwC2AQAAvQERANABBADXAQMA3QEAAOABAADiARYA+gEAAPwBEQAPAgAAEQIHABoCAAAfAhEAMgIEADkCAwA/AgAAQgIAAEQCEwBdAhQAdAILAIECBQCIAgMAkQIDAJkCAACfAgAApQIDAKoCDwC9AgMAwgIIAM4CAQDVAgAA2QIAAN0CAADfAgcA6QIAAO0CFAADAwUACgMBAA4DBQAYAwMAHQMBACADDQAvAwQANQMIAD8DAQBDAwAARQMeAGUDDwB2AwMAfgMDAIYDGACgAwkAqwMAAK0DBgC1AwIAxwMMANUDAADXAwcA4QMAAPEDAAD6AxEADQQEABQEAwAaBAEAHQQAAB8EGAA5BAoARwQMAFUEAABXBAYAYAQAAGcEAABvBAAAdAQRAIcEBACOBAMAlAQBAJcEAACZBBQArwQEALUECAC/BAMAxQQCAMkEAwDOBAcA","P":[[56,"ColAccessCap::Variable"],[57,"F,ColAccessCap::Variable"],[58,""],[59,"ColAccessCap::Variable,CIx"],[60,"LT,ColAccessCap::Variable"],[62,""],[63,"ColAccessCap::Variable,CIx"],[64,"F,CIx,Env,ColMap"],[65,"CIx,ColAccessCap::Variable"],[66,"ColAccessCap::Variable"],[67,"ColAccessCap::Variable,F"],[68,"CIx,ColAccessCap::Variable"],[69,"F,CIx,Env,ColMap"],[71,"F,CIx,Env"],[79,"F,CIx1,Env1,CIx2,L,ColAccessCap::Variable"],[80,"F,CIx1,Env1,L,ColAccessCap::Variable"],[81,"T"],[91,""],[92,"LHS,RHS"],[93,"F,ColAccessCap::Variable"],[95,"F,CIx,Env1,L"],[96,"T"],[105,""],[109,"T"],[114,"F,CIx1,Env1,CIx2,L,ColAccessCap::Variable"],[115,"F,CIx1,Env1,L,ColAccessCap::Variable"],[116,""],[120,"U"],[124,"F,CIx1,LT,Env1,CIx2,L,ColAccessCap::Variable"],[125,"F,CIx,LT1,Env1,LT2,L,ColAccessCap::Variable"],[126,"F,CIx1,LT,Env1,CIx2,L,ColAccessCap::Variable"],[127,"F,CIx,LT1,Env1,LT2,L,ColAccessCap::Variable"],[128,"F,CIx1,Env1,L"],[130,"F,CIx,Env1,L"],[131,"MPrism::Source,MPrism::Target"],[132,"LHS,RHS,MPrism::Target,MPrism::Source"],[133,"T,MPrism::Target,MPrism::Source"],[134,"F,CIx1,Env1,CIx2,L,ColAccessCap::Variable"],[135,"F,CIx1,Env1,L,ColAccessCap::Variable"],[136,"F,CIx,Env1,L,ColAccessCap::Variable"],[137,"F,CIx1,Env1,CIx2,L"],[138,"F,CIx1,Env1,L"],[139,"T"],[140,"MPrism::Source,MPrism::Target"],[141,"LHS,RHS,MPrism::Source,MPrism::Target"],[142,"T,MPrism::Source,MPrism::Target"],[143,"U,T"],[147,"U"],[151,""],[155,"ColAccessCap::Variable,F"],[156,"V"],[160,"F,CIx1,Env1,CIx2,L,ColAccessCap::Variable"],[161,"F,CIx1,Env1,L,ColAccessCap::Variable"],[163,""],[164,"F,LT,ColAccessCap::Variable"],[165,"F,LT,ColAccessCap::Variable,CIx"],[166,"T"],[168,"F,ColAccessCap::Variable"],[169,""],[170,"F,LT"],[171,"T"],[173,""],[174,"T"],[175,"F,LT"],[178,"F,LT,ColAccessCap::Variable,CIx"],[179,""],[180,"U"],[181,"F,LT,ColAccessCap::Variable"],[182,""],[183,"F,LT,ColAccessCap::Variable"],[184,""],[185,"F,LT,CIx,ColAccessCap::Variable"],[186,"F,LT"],[187,"U,T"],[188,"U"],[189,""],[190,"V"],[192,""],[193,"F,CIx,LT,ColAccessCap::Variable"],[195,"T"],[197,"F,ColAccessCap::Variable"],[198,"F,CIx,LT"],[200,"T"],[202,""],[204,"T"],[205,"F,CIx,LT"],[210,"F,CIx,LT,ColAccessCap::Variable"],[211,""],[212,"U"],[213,"F,CIx,LT,ColAccessCap::Variable"],[214,""],[216,"F,CIx,LT,ColAccessCap::Variable"],[217,"F,CIx,LT"],[219,""],[220,"F,CIx,LT,ColAccessCap::Variable"],[222,""],[223,"F,CIx,LT"],[226,"U,T"],[227,"U"],[228,""],[229,"ColAccessCap::Variable,F"],[230,"V"],[231,""],[232,"F,CIx,LT,ColAccessCap::Variable"],[233,"F,CIx,LT"],[235,"T"],[237,""],[238,"F,ID,ColumnEnvironment::Column"],[239,""],[240,"T"],[242,""],[245,"T"],[246,"F,ID"],[247,"F,ID,ColumnEnvironment::Column"],[248,"F,ID"],[250,""],[251,"U"],[252,"F,ID"],[253,""],[255,"U,T"],[256,"U"],[257,""],[258,"F,ID"],[259,"V"],[260,""],[272,"T"],[276,""],[277,"T"],[279,""],[280,"T"],[281,"K"],[283,"T"],[285,"T,__H"],[286,""],[287,"U"],[288,""],[289,"T"],[290,""],[293,"T"],[295,"U,T"],[296,"U"],[297,""],[298,"V"],[309,"F"],[322,""],[342,"T"],[350,""],[354,"T"],[358,""],[366,"T"],[374,""],[382,"K"],[390,""],[394,"T"],[398,""],[402,"U"],[406,""],[414,"T"],[418,"U,T"],[422,"U"],[426,""],[430,"V"],[434,"F,Ff,Env"],[436,"F"],[444,"Ff"],[445,"T"],[449,"Ff"],[451,"T"],[453,""],[455,"Ff"],[456,"T"],[460,""],[462,"Ff,F"],[463,"Ff"],[464,"K"],[466,"Ff"],[468,"T"],[470,"Ff"],[471,"Ff,__H"],[472,""],[474,"U"],[476,"I"],[477,"Ff"],[478,"Ff,F"],[479,"Ff"],[480,"Ff,F"],[481,"Ff"],[483,"Ff,Iterator::Item"],[486,"Ff"],[489,"T"],[491,"Ff"],[492,"U,T"],[494,"U"],[496,""],[498,"V"],[505,""],[512,"T"],[514,""],[515,"T"],[516,""],[518,"T"],[520,""],[522,"K"],[524,""],[525,"T"],[526,""],[527,"U"],[528,""],[530,"T"],[531,"U,T"],[532,"U"],[533,""],[534,"V"],[535,"F,Env"],[537,"F,Env,Ff"],[542,""],[543,"T"],[547,""],[549,"T"],[551,""],[554,"T"],[558,""],[560,"F"],[561,""],[562,"K"],[564,""],[566,"T"],[568,""],[569,"__H"],[570,""],[572,"U"],[574,"I"],[575,""],[576,"F"],[577,""],[578,"F"],[579,""],[581,"Iterator::Item"],[584,"T"],[585,""],[588,"T"],[590,""],[591,"U,T"],[593,"U"],[595,""],[597,"V"],[604,""],[605,"T"],[613,"F,ID"],[616,"T,ID"],[617,"T"],[621,""],[625,"F,ID"],[626,"ID,F"],[627,"T"],[635,""],[640,"F,ID"],[642,"K"],[646,""],[647,"F,ID"],[650,"T,ID"],[651,"T"],[655,""],[660,"U"],[664,"G,ID,IntoIterator::IntoIter"],[665,""],[666,"F"],[667,""],[669,"ID,F"],[671,"F"],[672,""],[674,"F"],[676,"T"],[680,""],[681,"U,T"],[685,"U"],[689,""],[693,"V"],[699,""],[700,"T"],[704,"ID,G,Sponge"],[705,"T"],[709,""],[715,"T"],[717,""],[719,"U"],[721,""],[734,"U,T"],[736,"U"],[738,""],[740,"V"],[749,""],[751,"T"],[755,""],[757,"T"],[759,""],[763,"T"],[767,""],[769,"F"],[770,""],[772,"K"],[776,""],[779,"T"],[781,""],[783,"__H"],[785,""],[787,"U"],[789,""],[791,"F"],[793,""],[798,"F"],[799,""],[801,"T"],[803,""],[805,"U,T"],[807,"U"],[809,""],[811,"V"],[814,"T"],[816,"Pair"],[817,"T"],[818,""],[820,"Pair"],[821,"T"],[823,"__D,Pair"],[824,""],[825,"Pair"],[826,"K"],[828,"Pair"],[829,"T"],[830,"Pair"],[831,""],[835,"U"],[836,"Pair,__S"],[837,"T"],[838,"U,T"],[839,"U"],[840,""],[842,"V"],[847,"T"],[855,"F,ID"],[857,"G,ID"],[858,"G,OpeningProof,ID"],[859,"T"],[863,""],[867,"F,ID"],[868,"T"],[876,""],[880,"F,ID"],[881,"K"],[883,"F,ID,ColumnEvaluations::Column"],[884,""],[885,"F,ID"],[887,"G,ID"],[888,"G,OpeningProof,ID"],[889,"T"],[893,""],[897,"U"],[901,""],[902,"F"],[903,"T"],[907,"U,T"],[911,"U"],[915,""],[919,"V"],[927,"T"],[929,""],[930,"T"],[931,""],[932,"T"],[934,""],[937,"T"],[938,""],[939,"U"],[940,"ID,RNG,G,OpeningProof"],[941,"T"],[942,""],[943,"U,T"],[944,"U"],[945,""],[946,"V"],[947,""],[966,"T"],[968,""],[969,"T"],[970,""],[972,"T"],[974,""],[976,"K"],[978,""],[979,"T"],[980,""],[981,"U"],[982,""],[984,"T"],[985,"U,T"],[986,"U"],[987,""],[988,"V"],[990,""],[995,"ColAccessCap::Variable,CIx"],[996,"F"],[997,""],[998,"F,V,Func"],[999,""],[1000,"F,Ff,Env"],[1002,""],[1003,"Var,Foo"],[1004,"F"],[1005,"Ff,F"],[1006,"F,Ff,Env"],[1017,"Ff"],[1018,"T"],[1022,"Ff"],[1024,"T"],[1026,""],[1028,"Ff"],[1029,"T"],[1033,""],[1035,"Ff,F"],[1036,"Ff"],[1037,"K"],[1039,"Ff"],[1041,"T"],[1043,"Ff"],[1044,"Ff,__H"],[1045,""],[1047,"U"],[1049,"I"],[1050,"Ff"],[1051,"Ff,F"],[1052,"Ff"],[1053,"Ff,F"],[1054,"Ff"],[1056,"Ff,Iterator::Item"],[1059,"Ff"],[1062,"T"],[1064,"Ff"],[1065,"U,T"],[1067,"U"],[1069,""],[1071,"V"],[1077,"LT,RNG"],[1078,"RNG"],[1080,"LT,RNG"],[1091,""],[1094,"T"],[1096,""],[1097,"T"],[1098,""],[1100,"T"],[1102,""],[1104,"K"],[1106,""],[1107,"T"],[1108,""],[1109,"U"],[1110,""],[1112,"T"],[1113,"U,T"],[1114,"U"],[1115,""],[1116,"V"],[1117,"F"],[1118,"F,Env"],[1127,"F,Env,Ff"],[1128,"F,Env"],[1133,"F,Env,Ff"],[1139,""],[1140,"T"],[1144,""],[1146,"T"],[1148,""],[1151,"T"],[1155,""],[1157,"F"],[1158,""],[1159,"K"],[1161,""],[1163,"T"],[1165,""],[1166,"__H"],[1167,""],[1169,"U"],[1171,"I"],[1172,""],[1173,"F"],[1174,""],[1175,"F"],[1176,""],[1178,"Iterator::Item"],[1181,"T"],[1182,""],[1185,"T"],[1187,""],[1188,"U,T"],[1190,"U"],[1192,""],[1194,"V"],[1196,"G,OpeningProof,ID"],[1198,"T"],[1202,""],[1204,"F"],[1205,"T"],[1208,""],[1209,"T"],[1210,"K"],[1212,"T"],[1214,"G,I"],[1215,"T,__H"],[1216,"T,Index::Output"],[1217,""],[1218,"U"],[1219,"F,IntoIterator::IntoIter"],[1220,"G,IntoIterator::IntoIter"],[1221,"G,IntoParallelIterator::Iter"],[1224,"T"],[1226,""],[1228,"G,W"],[1229,"T"],[1231,"T,TryFrom::Error"],[1232,"U,T"],[1233,"U"],[1234,""],[1235,"V"],[1236,"T"]]}],["kimchi_stubs",{"t":"PPPPFFFFFFFFFFFPPGPPPPGPPPPPPPPEPPOOOCONNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOCNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCCOOONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNCCCCCCCCCOOCOOOOOOONNOOOOOONNONOOCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNOONNNNNNNNNNNNNOCOONNNNNNNNNNNNNNNNNOOOOOOOOOOOEEEEEEEECCCCCFNNHHHHHHHHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNIIGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNFNNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNCCCCFNNNNNNNNNNNNNNNNCCFNNHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNFNNHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNCCFINNHHHHHHHHHHHHHHNNNNNNNNNNNNNNFINNHHHHHHHHHHHHHHNNNNNNNNNNNNNNKMHHHFNNNNONCCNNNNNONNOONNNNNHHHHHHHHHHHHHHHHFINNHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHHHHHHHHHHOONOOOOHOOOFINNHHNNNNNNNNNNNFINNHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNHHHHHHHHHHIHHHHHHHHHHHHOONOOOOHOOOFINNHHNNNNNNNNNNNFFFGFFFPPNNNNNNNNNNNNNNOONNNNNNNNNNNNNNONNNNNNNOOOOOOONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOONNNNNNNNNNNNNNOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHCCFNNHHHHHHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNFNNHHHHHHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNHH","n":["CairoClaim","CairoFlags","CairoInstruction","CairoTransition","CamlCircuitGate","CamlLookupCommitments","CamlOpeningProof","CamlPolyComm","CamlProofEvaluations","CamlProofWithPublic","CamlProverCommitments","CamlProverProof","CamlRandomOracles","CamlScalarChallenge","CamlWire","CompleteAdd","Curr","CurrOrNext","EndoMul","EndoMulScalar","ForeignFieldAdd","ForeignFieldMul","GateType","Generic","Lookup","Next","Poseidon","RangeCheck0","RangeCheck1","Rot64","VarBaseMul","WithLagrangeBasis","Xor16","Zero","aggreg","alpha","alpha_chal","arkworks","beta","borrow","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","caml","clone","","","","","","","clone_into","","","","","","","clone_to_uninit","","","","","","","cmp","","coefficients","coeffs","col","commitments","complete_add_selector","default","delta","deref","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","deserialize","","drop","","","","","","","","","","","","","emul_selector","endomul_scalar_selector","eq","","equivalent","","","","evals","field_vector","fmt","","","","foreign_field_add_selector","foreign_field_mul_lookup_selector","foreign_field_mul_selector","from","","","","","","","","","","","","","","","","","","","","","","","","from_abi","","from_value","","","","","","","","","","","","","ft_eval1","gamma","gate_vector","generic_selector","hash","","init","","","","","","","","","","","","","into","","","","","","","","","","","","","into_abi","","into_value","","","","","","","","","","","","","is_none","","joint_combiner","lagrange_basis","linearization","lookup","lookup_aggregation","lookup_gate_lookup_selector","lookup_kinds","lookup_sorted","lookup_table","lr","mul_selector","none","","ocaml_binding","","","","","","","","","","","","","ocaml_desc","","","","","","","","","","","","","oracles","partial_cmp","","pasta_fp_plonk_index","pasta_fp_plonk_proof","pasta_fp_plonk_verifier_index","pasta_fp_poseidon","pasta_fq_plonk_index","pasta_fq_plonk_proof","pasta_fq_plonk_verifier_index","pasta_fq_poseidon","plonk_verifier_index","poseidon_selector","prev_challenges","projective","proof","","public","public_evals","range_check0_selector","range_check1_selector","range_check_lookup_selector","return_abi","","rot_selector","row","runtime","runtime_lookup_table","runtime_lookup_table_selector","s","serialize","","sg","shift","shifted","sorted","srs","t_comm","to_owned","","","","","","","try_from","","","","","","","","","","","","","try_from_js_value","","try_into","","","","","","","","","","","","","typ","type_id","","","","","","","","","","","","","u","u_chal","unique_id","","","","","","","","","","","","","unshifted","urs_utils","v","v_chal","vector_from_abi","","vector_into_abi","","vzip","","","","","","","","","","","","","w","w_comm","wires","xor_lookup_selector","xor_selector","z","z1","z2","z_comm","zeta","zeta_chal","CamlBigInteger256","CamlFp","CamlFq","CamlGPallas","CamlGVesta","CamlGroupAffine","CamlGroupProjectivePallas","CamlGroupProjectiveVesta","bigint_256","group_affine","group_projective","pasta_fp","pasta_fq","CamlBigInteger256","borrow","borrow_mut","caml_bigint_256_bytes_per_limb","caml_bigint_256_bytes_per_limb_to_ocaml","caml_bigint_256_compare","caml_bigint_256_compare_to_ocaml","caml_bigint_256_deep_copy","caml_bigint_256_deep_copy_to_ocaml","caml_bigint_256_div","caml_bigint_256_div_to_ocaml","caml_bigint_256_num_limbs","caml_bigint_256_num_limbs_to_ocaml","caml_bigint_256_of_bytes","caml_bigint_256_of_bytes_to_ocaml","caml_bigint_256_of_decimal_string","caml_bigint_256_of_decimal_string_to_ocaml","caml_bigint_256_of_numeral","caml_bigint_256_of_numeral_to_ocaml","caml_bigint_256_print","caml_bigint_256_print_to_ocaml","caml_bigint_256_test_bit","caml_bigint_256_test_bit_to_ocaml","caml_bigint_256_to_bytes","caml_bigint_256_to_bytes_to_ocaml","caml_bigint_256_to_string","caml_bigint_256_to_string_to_ocaml","clone","clone_into","clone_to_uninit","deref","","deref_mut","drop","fmt","","from","","from_value","init","into","into_value","ocaml_binding","ocaml_desc","to_owned","to_string","try_from","","","try_into","type_id","unique_id","vzip","CamlGPallas","CamlGVesta","CamlGroupAffine","Finite","","","Infinity","","","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","from","","","","","from_value","init","into","into_value","ocaml_binding","ocaml_desc","to_owned","try_from","try_into","type_id","unique_id","vzip","CamlGroupProjectivePallas","CamlGroupProjectiveVesta","add","","","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","","","deref_mut","","drop","","from","","","","","","from_value","","init","","into","","into_value","","neg","","","","ocaml_binding","","ocaml_desc","","sub","","","","to_owned","","try_from","","try_into","","type_id","","unique_id","","vzip","","CamlFp","borrow","borrow_mut","caml_pasta_fp_add","caml_pasta_fp_add_to_ocaml","caml_pasta_fp_compare","caml_pasta_fp_compare_to_ocaml","caml_pasta_fp_copy","caml_pasta_fp_copy_to_ocaml","caml_pasta_fp_deep_copy","caml_pasta_fp_deep_copy_to_ocaml","caml_pasta_fp_div","caml_pasta_fp_div_to_ocaml","caml_pasta_fp_domain_generator","caml_pasta_fp_domain_generator_to_ocaml","caml_pasta_fp_equal","caml_pasta_fp_equal_to_ocaml","caml_pasta_fp_inv","caml_pasta_fp_inv_to_ocaml","caml_pasta_fp_is_square","caml_pasta_fp_is_square_to_ocaml","caml_pasta_fp_mul","caml_pasta_fp_mul_to_ocaml","caml_pasta_fp_mut_add","caml_pasta_fp_mut_add_to_ocaml","caml_pasta_fp_mut_mul","caml_pasta_fp_mut_mul_to_ocaml","caml_pasta_fp_mut_square","caml_pasta_fp_mut_square_to_ocaml","caml_pasta_fp_mut_sub","caml_pasta_fp_mut_sub_to_ocaml","caml_pasta_fp_negate","caml_pasta_fp_negate_to_ocaml","caml_pasta_fp_of_bigint","caml_pasta_fp_of_bigint_to_ocaml","caml_pasta_fp_of_bytes","caml_pasta_fp_of_bytes_to_ocaml","caml_pasta_fp_of_int","caml_pasta_fp_of_int_to_ocaml","caml_pasta_fp_of_string","caml_pasta_fp_of_string_to_ocaml","caml_pasta_fp_print","caml_pasta_fp_print_rust","caml_pasta_fp_print_rust_to_ocaml","caml_pasta_fp_print_to_ocaml","caml_pasta_fp_random","caml_pasta_fp_random_to_ocaml","caml_pasta_fp_rng","caml_pasta_fp_rng_to_ocaml","caml_pasta_fp_size","caml_pasta_fp_size_in_bits","caml_pasta_fp_size_in_bits_to_ocaml","caml_pasta_fp_size_to_ocaml","caml_pasta_fp_sqrt","caml_pasta_fp_sqrt_to_ocaml","caml_pasta_fp_square","caml_pasta_fp_square_to_ocaml","caml_pasta_fp_sub","caml_pasta_fp_sub_to_ocaml","caml_pasta_fp_to_bigint","caml_pasta_fp_to_bigint_to_ocaml","caml_pasta_fp_to_bytes","caml_pasta_fp_to_bytes_to_ocaml","caml_pasta_fp_to_string","caml_pasta_fp_to_string_to_ocaml","caml_pasta_fp_two_adic_root_of_unity","caml_pasta_fp_two_adic_root_of_unity_to_ocaml","clone","clone_into","clone_to_uninit","deref","","deref_mut","drop","fmt","from","","","from_value","init","into","into_value","ocaml_binding","ocaml_desc","to_owned","try_from","","try_into","type_id","unique_id","vzip","CamlFq","borrow","borrow_mut","caml_pasta_fq_add","caml_pasta_fq_add_to_ocaml","caml_pasta_fq_compare","caml_pasta_fq_compare_to_ocaml","caml_pasta_fq_copy","caml_pasta_fq_copy_to_ocaml","caml_pasta_fq_deep_copy","caml_pasta_fq_deep_copy_to_ocaml","caml_pasta_fq_div","caml_pasta_fq_div_to_ocaml","caml_pasta_fq_domain_generator","caml_pasta_fq_domain_generator_to_ocaml","caml_pasta_fq_equal","caml_pasta_fq_equal_to_ocaml","caml_pasta_fq_inv","caml_pasta_fq_inv_to_ocaml","caml_pasta_fq_is_square","caml_pasta_fq_is_square_to_ocaml","caml_pasta_fq_mul","caml_pasta_fq_mul_to_ocaml","caml_pasta_fq_mut_add","caml_pasta_fq_mut_add_to_ocaml","caml_pasta_fq_mut_mul","caml_pasta_fq_mut_mul_to_ocaml","caml_pasta_fq_mut_square","caml_pasta_fq_mut_square_to_ocaml","caml_pasta_fq_mut_sub","caml_pasta_fq_mut_sub_to_ocaml","caml_pasta_fq_negate","caml_pasta_fq_negate_to_ocaml","caml_pasta_fq_of_bigint","caml_pasta_fq_of_bigint_to_ocaml","caml_pasta_fq_of_bytes","caml_pasta_fq_of_bytes_to_ocaml","caml_pasta_fq_of_int","caml_pasta_fq_of_int_to_ocaml","caml_pasta_fq_of_string","caml_pasta_fq_of_string_to_ocaml","caml_pasta_fq_print","caml_pasta_fq_print_rust","caml_pasta_fq_print_rust_to_ocaml","caml_pasta_fq_print_to_ocaml","caml_pasta_fq_random","caml_pasta_fq_random_to_ocaml","caml_pasta_fq_rng","caml_pasta_fq_rng_to_ocaml","caml_pasta_fq_size","caml_pasta_fq_size_in_bits","caml_pasta_fq_size_in_bits_to_ocaml","caml_pasta_fq_size_to_ocaml","caml_pasta_fq_sqrt","caml_pasta_fq_sqrt_to_ocaml","caml_pasta_fq_square","caml_pasta_fq_square_to_ocaml","caml_pasta_fq_sub","caml_pasta_fq_sub_to_ocaml","caml_pasta_fq_to_bigint","caml_pasta_fq_to_bigint_to_ocaml","caml_pasta_fq_to_bytes","caml_pasta_fq_to_bytes_to_ocaml","caml_pasta_fq_to_string","caml_pasta_fq_to_string_to_ocaml","caml_pasta_fq_two_adic_root_of_unity","caml_pasta_fq_two_adic_root_of_unity_to_ocaml","clone","clone_into","clone_to_uninit","deref","","deref_mut","drop","from","","","from_value","init","into","into_value","ocaml_binding","ocaml_desc","to_owned","try_from","","try_into","type_id","unique_id","vzip","caml_bytes_string","caml_pointer","shared_reference","shared_rwlock","CamlBytesString","borrow","borrow_mut","deref","deref_mut","drop","from","from_value","init","into","into_value","ocaml_desc","try_from","try_into","type_id","unique_id","vzip","fp","fq","CamlFpVector","borrow","borrow_mut","caml_fp_vector_create","caml_fp_vector_create_to_ocaml","caml_fp_vector_emplace_back","caml_fp_vector_emplace_back_to_ocaml","caml_fp_vector_get","caml_fp_vector_get_to_ocaml","caml_fp_vector_length","caml_fp_vector_length_to_ocaml","caml_fp_vector_set","caml_fp_vector_set_to_ocaml","clone","clone_into","clone_to_uninit","create","deref","","deref_mut","","drop","fmt","from","from_value","init","into","into_value","ocaml_binding","ocaml_desc","to_owned","try_from","try_into","type_id","unique_id","vzip","CamlFqVector","borrow","borrow_mut","caml_fq_vector_create","caml_fq_vector_create_to_ocaml","caml_fq_vector_emplace_back","caml_fq_vector_emplace_back_to_ocaml","caml_fq_vector_get","caml_fq_vector_get_to_ocaml","caml_fq_vector_length","caml_fq_vector_length_to_ocaml","caml_fq_vector_set","caml_fq_vector_set_to_ocaml","clone","clone_into","clone_to_uninit","create","deref","","deref_mut","","drop","fmt","from","from_value","init","into","into_value","ocaml_binding","ocaml_desc","to_owned","try_from","try_into","type_id","unique_id","vzip","fp","fq","CamlPastaFpPlonkGateVector","CamlPastaFpPlonkGateVectorPtr","borrow","borrow_mut","caml_pasta_fp_plonk_circuit_serialize","caml_pasta_fp_plonk_circuit_serialize_to_ocaml","caml_pasta_fp_plonk_gate_vector_add","caml_pasta_fp_plonk_gate_vector_add_to_ocaml","caml_pasta_fp_plonk_gate_vector_create","caml_pasta_fp_plonk_gate_vector_create_to_ocaml","caml_pasta_fp_plonk_gate_vector_digest","caml_pasta_fp_plonk_gate_vector_digest_to_ocaml","caml_pasta_fp_plonk_gate_vector_get","caml_pasta_fp_plonk_gate_vector_get_to_ocaml","caml_pasta_fp_plonk_gate_vector_len","caml_pasta_fp_plonk_gate_vector_len_to_ocaml","caml_pasta_fp_plonk_gate_vector_wrap","caml_pasta_fp_plonk_gate_vector_wrap_to_ocaml","deref","deref_mut","drop","from","init","into","into_value","ocaml_binding","ocaml_desc","try_from","try_into","type_id","unique_id","vzip","CamlPastaFqPlonkGateVector","CamlPastaFqPlonkGateVectorPtr","borrow","borrow_mut","caml_pasta_fq_plonk_circuit_serialize","caml_pasta_fq_plonk_circuit_serialize_to_ocaml","caml_pasta_fq_plonk_gate_vector_add","caml_pasta_fq_plonk_gate_vector_add_to_ocaml","caml_pasta_fq_plonk_gate_vector_create","caml_pasta_fq_plonk_gate_vector_create_to_ocaml","caml_pasta_fq_plonk_gate_vector_digest","caml_pasta_fq_plonk_gate_vector_digest_to_ocaml","caml_pasta_fq_plonk_gate_vector_get","caml_pasta_fq_plonk_gate_vector_get_to_ocaml","caml_pasta_fq_plonk_gate_vector_len","caml_pasta_fq_plonk_gate_vector_len_to_ocaml","caml_pasta_fq_plonk_gate_vector_wrap","caml_pasta_fq_plonk_gate_vector_wrap_to_ocaml","deref","deref_mut","drop","from","init","into","into_value","ocaml_binding","ocaml_desc","try_from","try_into","type_id","unique_id","vzip","WithLagrangeBasis","with_lagrange_basis","fp_linearization_strings","fq_linearization_strings","linearization_strings","CamlOracles","borrow","borrow_mut","deref","deref_mut","digest_before_evaluations","drop","fp","fq","from","from_value","init","into","into_value","o","ocaml_binding","ocaml_desc","opening_prechallenges","p_eval","try_from","try_into","type_id","unique_id","vzip","fp_oracles_create","fp_oracles_create_no_public","fp_oracles_create_no_public_to_ocaml","fp_oracles_create_to_ocaml","fp_oracles_deep_copy","fp_oracles_deep_copy_to_ocaml","fp_oracles_dummy","fp_oracles_dummy_to_ocaml","fq_oracles_create","fq_oracles_create_no_public","fq_oracles_create_no_public_to_ocaml","fq_oracles_create_to_ocaml","fq_oracles_deep_copy","fq_oracles_deep_copy_to_ocaml","fq_oracles_dummy","fq_oracles_dummy_to_ocaml","CamlPastaFpPlonkIndex","CamlPastaFpPlonkIndexPtr","borrow","borrow_mut","caml_pasta_fp_plonk_index_create","caml_pasta_fp_plonk_index_create_bytecode","caml_pasta_fp_plonk_index_create_to_ocaml","caml_pasta_fp_plonk_index_domain_d1_size","caml_pasta_fp_plonk_index_domain_d1_size_to_ocaml","caml_pasta_fp_plonk_index_domain_d4_size","caml_pasta_fp_plonk_index_domain_d4_size_to_ocaml","caml_pasta_fp_plonk_index_domain_d8_size","caml_pasta_fp_plonk_index_domain_d8_size_to_ocaml","caml_pasta_fp_plonk_index_max_degree","caml_pasta_fp_plonk_index_max_degree_to_ocaml","caml_pasta_fp_plonk_index_public_inputs","caml_pasta_fp_plonk_index_public_inputs_to_ocaml","caml_pasta_fp_plonk_index_read","caml_pasta_fp_plonk_index_read_to_ocaml","caml_pasta_fp_plonk_index_write","caml_pasta_fp_plonk_index_write_to_ocaml","deref","deref_mut","drop","from","init","into","into_value","ocaml_binding","ocaml_desc","try_from","try_into","type_id","unique_id","vzip","caml_pasta_fp_plonk_proof_batch_verify","caml_pasta_fp_plonk_proof_batch_verify_to_ocaml","caml_pasta_fp_plonk_proof_create","caml_pasta_fp_plonk_proof_create_and_verify","caml_pasta_fp_plonk_proof_create_and_verify_to_ocaml","caml_pasta_fp_plonk_proof_create_to_ocaml","caml_pasta_fp_plonk_proof_deep_copy","caml_pasta_fp_plonk_proof_deep_copy_to_ocaml","caml_pasta_fp_plonk_proof_dummy","caml_pasta_fp_plonk_proof_dummy_to_ocaml","caml_pasta_fp_plonk_proof_example_with_ffadd","caml_pasta_fp_plonk_proof_example_with_ffadd_to_ocaml","caml_pasta_fp_plonk_proof_example_with_foreign_field_mul","caml_pasta_fp_plonk_proof_example_with_foreign_field_mul_to_ocaml","caml_pasta_fp_plonk_proof_example_with_lookup","caml_pasta_fp_plonk_proof_example_with_lookup_to_ocaml","caml_pasta_fp_plonk_proof_example_with_range_check","caml_pasta_fp_plonk_proof_example_with_range_check0","caml_pasta_fp_plonk_proof_example_with_range_check0_to_ocaml","caml_pasta_fp_plonk_proof_example_with_range_check_to_ocaml","caml_pasta_fp_plonk_proof_example_with_rot","caml_pasta_fp_plonk_proof_example_with_rot_to_ocaml","caml_pasta_fp_plonk_proof_example_with_xor","caml_pasta_fp_plonk_proof_example_with_xor_to_ocaml","caml_pasta_fp_plonk_proof_verify","caml_pasta_fp_plonk_proof_verify_to_ocaml","CamlPastaFpPlonkVerifierIndex","caml_pasta_fp_plonk_verifier_index_create","caml_pasta_fp_plonk_verifier_index_create_to_ocaml","caml_pasta_fp_plonk_verifier_index_deep_copy","caml_pasta_fp_plonk_verifier_index_deep_copy_to_ocaml","caml_pasta_fp_plonk_verifier_index_dummy","caml_pasta_fp_plonk_verifier_index_dummy_to_ocaml","caml_pasta_fp_plonk_verifier_index_read","caml_pasta_fp_plonk_verifier_index_read_to_ocaml","caml_pasta_fp_plonk_verifier_index_shifts","caml_pasta_fp_plonk_verifier_index_shifts_to_ocaml","caml_pasta_fp_plonk_verifier_index_write","caml_pasta_fp_plonk_verifier_index_write_to_ocaml","domain","evals","from","lookup_index","max_poly_size","prev_challenges","public","read_raw","shifts","srs","zk_rows","CamlPastaFpPoseidonParams","CamlPastaFpPoseidonParamsPtr","borrow","borrow_mut","caml_pasta_fp_poseidon_block_cipher","caml_pasta_fp_poseidon_params_create","deref","deref_mut","drop","from","init","into","into_value","try_from","try_into","type_id","vzip","CamlPastaFqPlonkIndex","CamlPastaFqPlonkIndexPtr","borrow","borrow_mut","caml_pasta_fq_plonk_index_create","caml_pasta_fq_plonk_index_create_bytecode","caml_pasta_fq_plonk_index_create_to_ocaml","caml_pasta_fq_plonk_index_domain_d1_size","caml_pasta_fq_plonk_index_domain_d1_size_to_ocaml","caml_pasta_fq_plonk_index_domain_d4_size","caml_pasta_fq_plonk_index_domain_d4_size_to_ocaml","caml_pasta_fq_plonk_index_domain_d8_size","caml_pasta_fq_plonk_index_domain_d8_size_to_ocaml","caml_pasta_fq_plonk_index_max_degree","caml_pasta_fq_plonk_index_max_degree_to_ocaml","caml_pasta_fq_plonk_index_public_inputs","caml_pasta_fq_plonk_index_public_inputs_to_ocaml","caml_pasta_fq_plonk_index_read","caml_pasta_fq_plonk_index_read_to_ocaml","caml_pasta_fq_plonk_index_write","caml_pasta_fq_plonk_index_write_to_ocaml","deref","deref_mut","drop","from","init","into","into_value","ocaml_binding","ocaml_desc","try_from","try_into","type_id","unique_id","vzip","caml_pasta_fq_plonk_proof_batch_verify","caml_pasta_fq_plonk_proof_batch_verify_to_ocaml","caml_pasta_fq_plonk_proof_create","caml_pasta_fq_plonk_proof_create_to_ocaml","caml_pasta_fq_plonk_proof_deep_copy","caml_pasta_fq_plonk_proof_deep_copy_to_ocaml","caml_pasta_fq_plonk_proof_dummy","caml_pasta_fq_plonk_proof_dummy_to_ocaml","caml_pasta_fq_plonk_proof_verify","caml_pasta_fq_plonk_proof_verify_to_ocaml","CamlPastaFqPlonkVerifierIndex","caml_pasta_fq_plonk_verifier_index_create","caml_pasta_fq_plonk_verifier_index_create_to_ocaml","caml_pasta_fq_plonk_verifier_index_deep_copy","caml_pasta_fq_plonk_verifier_index_deep_copy_to_ocaml","caml_pasta_fq_plonk_verifier_index_dummy","caml_pasta_fq_plonk_verifier_index_dummy_to_ocaml","caml_pasta_fq_plonk_verifier_index_read","caml_pasta_fq_plonk_verifier_index_read_to_ocaml","caml_pasta_fq_plonk_verifier_index_shifts","caml_pasta_fq_plonk_verifier_index_shifts_to_ocaml","caml_pasta_fq_plonk_verifier_index_write","caml_pasta_fq_plonk_verifier_index_write_to_ocaml","domain","evals","from","lookup_index","max_poly_size","prev_challenges","public","read_raw","shifts","srs","zk_rows","CamlPastaFqPoseidonParams","CamlPastaFqPoseidonParamsPtr","borrow","borrow_mut","caml_pasta_fq_poseidon_block_cipher","caml_pasta_fq_poseidon_params_create","deref","deref_mut","drop","from","init","into","into_value","try_from","try_into","type_id","vzip","CamlLookupInfo","CamlLookupSelectors","CamlLookupVerifierIndex","CamlLookupsUsed","CamlPlonkDomain","CamlPlonkVerificationEvals","CamlPlonkVerifierIndex","Joint","Single","borrow","","","","","","","borrow_mut","","","","","","","coefficients_comm","complete_add_comm","deref","","","","","","","deref_mut","","","","","","","domain","drop","","","","","","","emul_comm","endomul_scalar_comm","evals","features","ffmul","foreign_field_add_comm","foreign_field_mul_comm","from","","","","","","","","","","from_value","","","","","","","generic_comm","group_gen","init","","","","","","","into","","","","","","","into_value","","","","","","","joint_lookup_used","log_size_of_group","lookup","lookup_index","lookup_info","lookup_selectors","lookup_table","max_joint_size","max_per_row","max_poly_size","mul_comm","ocaml_binding","","","","","","","ocaml_desc","","","","","","","prev_challenges","psm_comm","public","range_check","range_check0_comm","range_check1_comm","rot_comm","runtime_tables_selector","shifts","sigma_comm","srs","table_ids","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","unique_id","","","","","","","vzip","","","","","","","xor","xor_comm","zk_rows","pallas","vesta","caml_pallas_add","caml_pallas_add_to_ocaml","caml_pallas_affine_deep_copy","caml_pallas_affine_deep_copy_to_ocaml","caml_pallas_double","caml_pallas_double_to_ocaml","caml_pallas_endo_base","caml_pallas_endo_base_to_ocaml","caml_pallas_endo_scalar","caml_pallas_endo_scalar_to_ocaml","caml_pallas_negate","caml_pallas_negate_to_ocaml","caml_pallas_of_affine","caml_pallas_of_affine_coordinates","caml_pallas_of_affine_coordinates_to_ocaml","caml_pallas_of_affine_to_ocaml","caml_pallas_one","caml_pallas_one_to_ocaml","caml_pallas_random","caml_pallas_random_to_ocaml","caml_pallas_rng","caml_pallas_rng_to_ocaml","caml_pallas_scale","caml_pallas_scale_to_ocaml","caml_pallas_sub","caml_pallas_sub_to_ocaml","caml_pallas_to_affine","caml_pallas_to_affine_to_ocaml","caml_vesta_add","caml_vesta_add_to_ocaml","caml_vesta_affine_deep_copy","caml_vesta_affine_deep_copy_to_ocaml","caml_vesta_double","caml_vesta_double_to_ocaml","caml_vesta_endo_base","caml_vesta_endo_base_to_ocaml","caml_vesta_endo_scalar","caml_vesta_endo_scalar_to_ocaml","caml_vesta_negate","caml_vesta_negate_to_ocaml","caml_vesta_of_affine","caml_vesta_of_affine_coordinates","caml_vesta_of_affine_coordinates_to_ocaml","caml_vesta_of_affine_to_ocaml","caml_vesta_one","caml_vesta_one_to_ocaml","caml_vesta_random","caml_vesta_random_to_ocaml","caml_vesta_rng","caml_vesta_rng_to_ocaml","caml_vesta_scale","caml_vesta_scale_to_ocaml","caml_vesta_sub","caml_vesta_sub_to_ocaml","caml_vesta_to_affine","caml_vesta_to_affine_to_ocaml","fp","fq","CamlFpSrs","borrow","borrow_mut","caml_fp_srs_add_lagrange_basis","caml_fp_srs_add_lagrange_basis_to_ocaml","caml_fp_srs_b_poly_commitment","caml_fp_srs_b_poly_commitment_to_ocaml","caml_fp_srs_batch_accumulator_check","caml_fp_srs_batch_accumulator_check_to_ocaml","caml_fp_srs_batch_accumulator_generate","caml_fp_srs_batch_accumulator_generate_to_ocaml","caml_fp_srs_commit_evaluations","caml_fp_srs_commit_evaluations_to_ocaml","caml_fp_srs_create","caml_fp_srs_create_to_ocaml","caml_fp_srs_h","caml_fp_srs_h_to_ocaml","caml_fp_srs_lagrange_commitment","caml_fp_srs_lagrange_commitment_to_ocaml","caml_fp_srs_lagrange_commitments_whole_domain","caml_fp_srs_lagrange_commitments_whole_domain_to_ocaml","caml_fp_srs_read","caml_fp_srs_read_to_ocaml","caml_fp_srs_write","caml_fp_srs_write_to_ocaml","deref","","deref_mut","drop","fmt","from","from_value","init","into","into_value","new","ocaml_binding","ocaml_desc","try_from","try_into","type_id","unique_id","vzip","CamlFqSrs","borrow","borrow_mut","caml_fq_srs_add_lagrange_basis","caml_fq_srs_add_lagrange_basis_to_ocaml","caml_fq_srs_b_poly_commitment","caml_fq_srs_b_poly_commitment_to_ocaml","caml_fq_srs_batch_accumulator_check","caml_fq_srs_batch_accumulator_check_to_ocaml","caml_fq_srs_batch_accumulator_generate","caml_fq_srs_batch_accumulator_generate_to_ocaml","caml_fq_srs_commit_evaluations","caml_fq_srs_commit_evaluations_to_ocaml","caml_fq_srs_create","caml_fq_srs_create_to_ocaml","caml_fq_srs_h","caml_fq_srs_h_to_ocaml","caml_fq_srs_lagrange_commitment","caml_fq_srs_lagrange_commitment_to_ocaml","caml_fq_srs_lagrange_commitments_whole_domain","caml_fq_srs_lagrange_commitments_whole_domain_to_ocaml","caml_fq_srs_read","caml_fq_srs_read_to_ocaml","caml_fq_srs_write","caml_fq_srs_write_to_ocaml","deref","","deref_mut","drop","fmt","from","from_value","init","into","into_value","new","ocaml_binding","ocaml_desc","try_from","try_into","type_id","unique_id","vzip","batch_dlog_accumulator_check","batch_dlog_accumulator_generate"],"q":[[0,"kimchi_stubs"],[415,"kimchi_stubs::arkworks"],[428,"kimchi_stubs::arkworks::bigint_256"],[481,"kimchi_stubs::arkworks::group_affine"],[516,"kimchi_stubs::arkworks::group_projective"],[578,"kimchi_stubs::arkworks::pasta_fp"],[669,"kimchi_stubs::arkworks::pasta_fq"],[759,"kimchi_stubs::caml"],[763,"kimchi_stubs::caml::caml_bytes_string"],[780,"kimchi_stubs::field_vector"],[782,"kimchi_stubs::field_vector::fp"],[818,"kimchi_stubs::field_vector::fq"],[854,"kimchi_stubs::gate_vector"],[856,"kimchi_stubs::gate_vector::fp"],[888,"kimchi_stubs::gate_vector::fq"],[920,"kimchi_stubs::lagrange_basis"],[922,"kimchi_stubs::linearization"],[925,"kimchi_stubs::oracles"],[949,"kimchi_stubs::oracles::fp"],[957,"kimchi_stubs::oracles::fq"],[965,"kimchi_stubs::pasta_fp_plonk_index"],[1000,"kimchi_stubs::pasta_fp_plonk_proof"],[1026,"kimchi_stubs::pasta_fp_plonk_verifier_index"],[1050,"kimchi_stubs::pasta_fp_poseidon"],[1067,"kimchi_stubs::pasta_fq_plonk_index"],[1102,"kimchi_stubs::pasta_fq_plonk_proof"],[1112,"kimchi_stubs::pasta_fq_plonk_verifier_index"],[1136,"kimchi_stubs::pasta_fq_poseidon"],[1153,"kimchi_stubs::plonk_verifier_index"],[1322,"kimchi_stubs::projective"],[1324,"kimchi_stubs::projective::pallas"],[1352,"kimchi_stubs::projective::vesta"],[1380,"kimchi_stubs::srs"],[1382,"kimchi_stubs::srs::fp"],[1425,"kimchi_stubs::srs::fq"],[1468,"kimchi_stubs::urs_utils"],[1470,"kimchi::prover::caml"],[1471,"poly_commitment::commitment::caml"],[1472,"kimchi::circuits::scalars::caml"],[1473,"mina_poseidon::sponge::caml"],[1474,"core::clone"],[1475,"kimchi::circuits::gate"],[1476,"kimchi::proof::caml"],[1477,"core::cmp"],[1478,"kimchi::circuits::gate::caml"],[1479,"alloc::vec"],[1480,"kimchi::circuits::wires::caml"],[1481,"kimchi::proof"],[1482,"poly_commitment::ipa::caml"],[1483,"core::result"],[1484,"serde::de"],[1485,"core::fmt"],[1486,"core::option"],[1487,"mina_poseidon::sponge"],[1488,"core::convert"],[1489,"poly_commitment::commitment"],[1490,"ark_ec"],[1491,"poly_commitment::ipa"],[1492,"ark_ff::fields::prime"],[1493,"kimchi::circuits::scalars"],[1494,"ark_ff::fields"],[1495,"kimchi::circuits::wires"],[1496,"ocaml::value"],[1497,"core::hash"],[1498,"ocaml_interop::runtime"],[1499,"kimchi::circuits::lookup::lookups"],[1500,"ocaml_gen"],[1501,"alloc::string"],[1502,"serde::ser"],[1503,"wasm_bindgen"],[1504,"core::any"],[1505,"alloc::boxed"],[1506,"ark_ff::biginteger"],[1507,"num_bigint::biguint"],[1508,"mina_curves::pasta::curves::vesta"],[1509,"mina_curves::pasta::curves::pallas"],[1510,"mina_curves::pasta::fields::fp"],[1511,"mina_curves::pasta::fields::fq"],[1512,"ark_poly::domain::radix2"],[1513,"kimchi::verifier_index"],[1514,"ocaml"],[1515,"ocaml::error"],[1516,"kimchi::circuits::lookup::index"]],"i":"Ab000```````````0A``1111`11011111`11bf0`0hdBl56B`4BdAdEdBh9Af876;<594321:0`87;<3:087;<3:087;<3:0;<35413<6876;<594321:0876;<594321:0;<876;<594321:033;<;;<<1`87;<3338877766;<55599443221::00;<876;<594321:019`3;<876;<594321:0876;<594321:0;<876;<594321:0;<9``033<3363;<876;<594321:0876;<594321:0`;<`````````31`2112333;<34:333;<6;7:`087;<3:0876;<594321:0;<876;<594321:05876;<594321:099876;<594321:07`99;<;<876;<594321:030533366099``````````````Gl0````````````````````````00000000000000000000000000```HhHlHd21000000000022110000000000000``Hn0I`010101010101100101011100010101010110010101100101010101010`If0````````````````````````````````````````````````````````````````000000000000000000000000`Ij0````````````````````````````````````````````````````````````````00000000000000000000000`````In000000000000000```J`0``````````00000000000000000000000`Jb0``````````00000000000000000000000````Md0``````````````00000000000000``Mf0``````````````00000000000000`Jd````Jh00000``000000000000000``````````````````Mh0`````````````````00000000000000```````````````````````````````````````Jl000000`000``Mj0``00000000000``Ml0`````````````````00000000000000```````````````````````Kj000000`000``Mn0``00000000000```````M`0JnK`2LdL`LnKn546321044546321054632100546321044023445463322110546321045546321054632105463210153011122045463210546321004034441040154632105463210546321054632105463210340`````````````````````````````````````````````````````````````Kf0``````````````````````000000000000000000`Kl0``````````````````````000000000000000000``","f":"``````````````````````````````````{bd}{f}{fh}`1{j{{j{c}}}{}}000000000000{{{j{l}}}{{j{lc}}}{}}000000000000`{{{j{{h{c}}}}}{{h{c}}}n}{{{j{{d{c}}}}}{{d{c}}}n}{{{j{A`}}}A`}{{{j{Ab}}}Ab}{{{j{{Ad{c}}}}}{{Ad{c}}}n}{{{j{{b{c}}}}}{{b{c}}}n}{{{j{{Af{c}}}}}{{Af{c}}}n}{{j{j{lc}}}Ah{}}000000{{jAj}Ah}000000{{{j{A`}}{j{A`}}}Al}{{{j{Ab}}{j{Ab}}}Al}{AdAn}{B`Bb}{BdBf}{BhAf}{AdBj}{{}Ab}{Bl}{Bn{{j{c}}}{}}000000000000{Bn{{j{lc}}}{}}000000000000{c{{C`{A`}}}Cb}{c{{C`{Ab}}}Cb}{BnAh}00000000000077{{{j{A`}}{j{A`}}}Cd}{{{j{Ab}}{j{Ab}}}Cd}{{j{j{c}}}Cd{}}000{BhAd}`{{{j{{h{c}}}}{j{lCf}}}{{C`{AhCh}}}Cj}{{{j{{d{c}}}}{j{lCf}}}{{C`{AhCh}}}Cj}{{{j{A`}}{j{lCf}}}{{C`{AhCh}}}}{{{j{Ab}}{j{lCf}}}{{C`{AhCh}}}}{AdCl}00{{{Cn{c}}}{{h{e}}}{}{{D`{c}}}}{cc{}}{{{j{{Db{c}}}}}{{d{e}}}Dd{{D`{c}}{D`{{j{c}}}}}}{{{Db{c}}}{{d{e}}}Dd{{D`{c}}}}2{{{Df{c}}}{{Bl{eg}}}Dd{{D`{c}}}D`}333{{{Dh{c}}}{{B`{e}}}Dj{{D`{c}}}}4{{{j{{Dh{c}}}}}{{B`{e}}}Dj{{D`{c}}}}5{{{Dl{c}}}{{f{e}}}Dn{{D`{c}}}}6{E`Bd}7{{{An{{Eb{c{Df{c}}}}Bb}}}{{Ed{eg}}}Dd{{D`{c}}}D`}88{{{Ef{c}}}{{b{e}}}Dd{}}99{{{Eh{c}}}{{Af{e}}}Dd{}}{EjA`}{EjAb}{El{{h{c}}}En}{El{{d{c}}}En}{El{{Bl{ce}}}EnEn}{ElA`}{ElAb}{El{{B`{c}}}En}{El{{f{c}}}En}{ElBd}{El{{Ad{c}}}En}{El{{Ed{ce}}}EnEn}{El{{Bh{ce}}}EnEn}{El{{b{c}}}En}{El{{Af{c}}}En}{Bh}{f}`{AdBj}{{{j{A`}}{j{lc}}}AhF`}{{{j{Ab}}{j{lc}}}AhF`}{{}Bn}000000000000{{}c{}}000000000000{A`Ej}{AbEj}{{{h{c}}{j{Fb}}}ElFd}{{{d{c}}{j{Fb}}}ElFd}{{{Bl{ce}}{j{Fb}}}ElFdFd}{{A`{j{Fb}}}El}{{Ab{j{Fb}}}El}{{{B`{c}}{j{Fb}}}ElFd}{{{f{c}}{j{Fb}}}ElFd}{{Bd{j{Fb}}}El}{{{Ad{c}}{j{Fb}}}ElFd}{{{Ed{ce}}{j{Fb}}}ElFdFd}{{{Bh{ce}}{j{Fb}}}ElFdFd}{{{b{c}}{j{Fb}}}ElFd}{{{Af{c}}{j{Fb}}}ElFd}{{{j{Ej}}}Cd}0{fCl}``{AfCl}{AdCl}0{{}{{Bb{Ff}}}}{AdBb}2{BlBb}{AdBj}{{}}0{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}000000000000{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}000000000000`{{{j{A`}}{j{A`}}}{{Cl{Al}}}}{{{j{Ab}}{j{Ab}}}{{Cl{Al}}}}`````````5{BhBb}`{EdBh}{BhBl}2{EdCl}===88={BdBf}{bCl}??{AdAn}{{{j{A`}}c}C`G`}{{{j{Ab}}c}C`G`}{Bl}{{{j{A`}}}Bn}{dCl}{bBb}`{Afd}{jc{}}000000{c{{C`{e}}}{}{}}000000000000{Gb{{C`{A`}}}}{Gb{{C`{Ab}}}}{{}{{C`{c}}}{}}000000000000{B`Ab}{jGd}000000000000{f}{fh}{{}Gf}000000000000{dBb}`32{{}{{Gh{{Fn{A`}}}}}}{{}{{Gh{{Fn{Ab}}}}}}{{{Gh{{Fn{A`}}}}}}{{{Gh{{Fn{Ab}}}}}}{{}c{}}000000000000{AdAn}{AfAn}{B`An}{AdCl}0{AdBj}{Bl}0{Afd}?>``````````````{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{GjGj}{{{j{Fh}}{Cl{{j{Fj}}}}}Fl}{{GjGj}Gj}12101212121{{GjGjGj}Gj}232123232{{{j{Gl}}}Gl}{{j{j{lc}}}Ah{}}{{jAj}Ah}{Bn{{j{c}}}{}}{{{j{Gl}}}{{j{c}}}{}}{Bn{{j{lc}}}{}}{BnAh}{{{j{Gl}}{j{lCf}}}Gn}0{H`Gl}{cc{}}{ElGl}{{}Bn}{{}c{}}{{{j{Fb}}}El}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}{jc{}}{jFl}{Hb{{C`{Glc}}}{}}{{{j{Hb}}}{{C`{Glc}}}{}}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}Gf}{{}c{}}`````````{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Hd{c}}}}}{{Hd{c}}}n}{{j{j{lc}}}Ah{}}{{jAj}Ah}{Bn{{j{c}}}{}}{Bn{{j{lc}}}{}}{BnAh}{{{j{{Hd{c}}}}{j{lCf}}}GnCj}{{{j{Hf}}}Hh}{HfHh}{{{j{Hj}}}Hl}{HjHl}{cc{}}{El{{Hd{c}}}En}{{}Bn}{{}c{}}{{{Hd{c}}{j{Fb}}}ElFd}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}{jc{}}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}Gf}{{}c{}}``{{{j{Hn}}{j{Hn}}}c{}}{{HnHn}Hn}{{{j{I`}}{j{I`}}}c{}}{{I`I`}I`}{j{{j{c}}}{}}0{{{j{l}}}{{j{lc}}}{}}0{{{j{Hn}}}Hn}{{{j{I`}}}I`}{{j{j{lc}}}Ah{}}0{{jAj}Ah}0{{{j{Hn}}}{{j{c}}}{}}{Bn{{j{c}}}{}}0{{{j{I`}}}{{j{c}}}{}}{Bn{{j{lc}}}{}}0{BnAh}0{{{j{Ib}}}Hn}{cc{}}{IbHn}{IdI`}{{{j{Id}}}I`}3{ElHn}{ElI`}{{}Bn}0{{}c{}}0{{{j{Fb}}}El}0{{{j{Hn}}}c{}}{Hnc{}}{I`c{}}{{{j{I`}}}c{}}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}0{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}0{{HnHn}c{}}{{{j{Hn}}{j{Hn}}}c{}}{{{j{I`}}{j{I`}}}c{}}{{I`I`}c{}}{jc{}}0{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{jGd}0{{}Gf}0{{}c{}}0`{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{GjGj}Gj}{{{j{Fh}}{Cl{{j{Fj}}}}}Fl}1010{GjGj}121012101012121210121010101010100110101001101012101010101{{{j{If}}}If}{{j{j{lc}}}Ah{}}{{jAj}Ah}{{{j{If}}}{{j{c}}}{}}{Bn{{j{c}}}{}}{Bn{{j{lc}}}{}}{BnAh}{{{j{If}}{j{lCf}}}Gn}{cc{}}{{{j{Ih}}}If}{IhIf}{ElIf}{{}Bn}{{}c{}}{{{j{Fb}}}El}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}{jc{}}{Gl{{C`{Ifc}}}{}}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}Gf}{{}c{}}`{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{GjGj}Gj}{{{j{Fh}}{Cl{{j{Fj}}}}}Fl}1010{GjGj}121012101012121210121010101010100110101001101012101010101{{{j{Ij}}}Ij}{{j{j{lc}}}Ah{}}{{jAj}Ah}{Bn{{j{c}}}{}}{{{j{Ij}}}{{j{c}}}{}}{Bn{{j{lc}}}{}}{BnAh}{{{j{Il}}}Ij}{IlIj}{cc{}}{ElIj}{{}Bn}{{}c{}}{{{j{Fb}}}El}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}{jc{}}{Gl{{C`{Ijc}}}{}}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}Gf}{{}c{}}`````{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{Bn{{j{c}}}{}}{Bn{{j{lc}}}{}}{BnAh}{cc{}}{ElIn}{{}Bn}{{}c{}}{{In{j{Fb}}}El}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}?>=<;```:9{GjGj}{{{j{Fh}}{Cl{{j{Fj}}}}}Fl}{{GjGj}Gj}10121{{GjGjGj}Gj}2{{{j{J`}}}J`}{{j{j{lc}}}Ah{}}{{jAj}Ah}{{{Bb{Ih}}}J`}{{{j{J`}}}{{j{c}}}{}}{Bn{{j{c}}}{}}{{{j{lJ`}}}{{j{lc}}}{}}{Bn{{j{lc}}}{}}{BnAh}{{{j{J`}}{j{lCf}}}Gn}{cc{}}{ElJ`}{{}Bn}{{}c{}}{{{j{Fb}}}El}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}{jc{}}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}Gf}{{}c{}}`{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{GjGj}{{{j{Fh}}{Cl{{j{Fj}}}}}Fl}{{GjGj}Gj}10121{{GjGjGj}Gj}2{{{j{Jb}}}Jb}{{j{j{lc}}}Ah{}}{{jAj}Ah}{{{Bb{Il}}}Jb}{Bn{{j{c}}}{}}{{{j{Jb}}}{{j{c}}}{}}{{{j{lJb}}}{{j{lc}}}{}}{Bn{{j{lc}}}{}}{BnAh}{{{j{Jb}}{j{lCf}}}Gn}{cc{}}{ElJb}{{}Bn}{{}c{}}{{{j{Fb}}}El}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}{jc{}}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}Gf}{{}c{}}````{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{GjGj}Gj}{{{j{Fh}}{Cl{{j{Fj}}}}}Fl}10{GjGj}1212101{{GjGjGj}Gj}2{Bn{{j{c}}}{}}{Bn{{j{lc}}}{}}{BnAh}{cc{}}{{}Bn}{{}c{}}{{{j{Fb}}}El}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}Gf}{{}c{}}``{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{GjGj}Gj}{{{j{Fh}}{Cl{{j{Fj}}}}}Fl}10{GjGj}1212101{{GjGjGj}Gj}2{Bn{{j{c}}}{}}{Bn{{j{lc}}}{}}{BnAh}{cc{}}{{}Bn}{{}c{}}{{{j{Fb}}}El}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}Gf}{{}c{}}`{{{j{Jd}}Jf}Ah}{GjGj}0{Cd{{An{Fl{Bb{{An{FlFl}}}}}}}}`{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{Bn{{j{c}}}{}}{Bn{{j{lc}}}{}}{Jh}{BnAh}``{cc{}}{El{{Jh{c}}}En}{{}Bn}{{}c{}}{{{Jh{c}}{j{Fb}}}ElFd}{Jhf}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}{JhBb}{JhAn}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}Gf}{{}c{}}{{GjGjGj}Gj}0{{{j{Fh}}{Cl{{j{Fj}}}}}Fl}0{GjGj}10122110101``{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{GjGjGjGjGjGjGj}Gj}{{ElJj}Gj}545454545456565{Bn{{j{c}}}{}}{Bn{{j{lc}}}{}}{BnAh}{cc{}}{{}Bn}{{}c{}}{{{j{Fb}}}El}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}Gf}{{}c{}}{{GjGj}Gj}{{{j{Fh}}{Cl{{j{Fj}}}}}Fl}{{GjGjGjGjGj}Gj}011{GjGj}2023232323322323232`020202{{GjGjGj}Gj}31303{JlJn}{JlK`}{{{Kb{Hf{Df{Hf}}}}}Jl}{JlCl}{JlBf}00{{{Cl{Kd}}KfFl}{{C`{{Kb{Hf{Df{Hf}}}}Kh}}}}{JlBb}{JlKf}3``{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}>;{Bn{{j{c}}}{}}{Bn{{j{lc}}}{}}{BnAh}{cc{}}{{}Bn}{{}c{}}{{{j{Fb}}}El}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}c{}}``<;{{GjGjGjGjGjGjGj}Gj}{{ElJj}Gj}{{{j{Fh}}{Cl{{j{Fj}}}}}Fl}{GjGj}101010101{{GjGjGj}Gj}202?>=<;:9{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}:98{{}Gf}8{{GjGj}Gj}6{{GjGjGjGjGj}Gj}7676717`676767576757{KjJn}{KjK`}{{{Kb{Hj{Df{Hj}}}}}Kj}{KjCl}{KjBf}00{{{Cl{Kd}}KlFl}{{C`{{Kb{Hj{Df{Hj}}}}Kh}}}}{KjBb}{KjKl}3``{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}};{GjGj}{Bn{{j{c}}}{}}{Bn{{j{lc}}}{}}{BnAh}{cc{}}{{}Bn}{{}c{}}{{{j{Fb}}}El}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}c{}}`````````=======<<<<<<<{K`Bb}{K`}<<<<<<<;;;;;;;{KnJn};;;;;;;11{KnK`}{L`Lb}{LdCl}{K`Cl}0>>>{{{Lf{{Db{c}}}}}{{Ld{e}}}{DdLh}{{D`{{Db{c}}}}}}?{LjL`}{cc{}}{{{Ll{c}}}{{Ln{e}}}{DdLh}{{D`{{Db{c}}}}}}11{El{{Jn{c}}}En}{El{{K`{c}}}En}{ElM`}{El{{Ld{c}}}En}{ElL`}{El{{Ln{c}}}En}{El{{Kn{ceg}}}EnEnEn}{K`}{Jn}{{}Bn}000000{{}c{}}000000{{{Jn{c}}{j{Fb}}}ElFd}{{{K`{c}}{j{Fb}}}ElFd}{{M`{j{Fb}}}El}{{{Ld{c}}{j{Fb}}}ElFd}{{L`{j{Fb}}}El}{{{Ln{c}}{j{Fb}}}ElFd}{{{Kn{ceg}}{j{Fb}}}ElFdFdFd}{LnCd}{JnKd}{LdCl}{KnCl}{LnL`}{LnLd}{LnBb}{L`Kd}0{KnKd}{K`}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}000000{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}0000003239{K`Cl}00{LnCl}{KnBb}{K`Bb}{Kn}3{c{{C`{e}}}{}{}}000000{{}{{C`{c}}}{}}000000{jGd}000000{{}Gf}000000{{}c{}}000000{LdCl}:>``{{GjGj}Gj}{{{j{Fh}}{Cl{{j{Fj}}}}}Fl}{GjGj}10101010102110101012121012101010101010211010101212101```{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}4343{{GjGjGj}Gj}40404343404545404{{{j{Kf}}}{{j{c}}}{}}{Bn{{j{c}}}{}}{Bn{{j{lc}}}{}}{BnAh}{{{j{Kf}}{j{lCf}}}Gn}{cc{}}{ElKf}{{}Bn}{{}c{}}{{{j{Fb}}}El}{{{Mb{Hf}}}Kf}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}Gf}{{}c{}}`{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{GjGj}Gj}{{{j{Fh}}{Cl{{j{Fj}}}}}Fl}10{{GjGjGj}Gj}10101{GjGj}20212323212{{{j{Kl}}}{{j{c}}}{}}{Bn{{j{c}}}{}}{Bn{{j{lc}}}{}}{BnAh}{{{j{Kl}}{j{lCf}}}Gn}{cc{}}{ElKl}{{}Bn}{{}c{}}{{{j{Fb}}}El}{{{Mb{Hj}}}Kl}{{{j{lFh}}{Cl{{j{Fj}}}}Cd}Fl}{{{j{Fh}}{j{{Fn{{j{Fj}}}}}}}Fl}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{jGd}{{}Gf}{{}c{}}{{{j{{Mb{c}}}}{j{{Fn{c}}}}{j{Fn}}}CdLh}{{{j{{Mb{c}}}}Bn{j{Bb}}}{{Bb{c}}}Lh}","D":"Oh","p":[[5,"CamlLookupCommitments",0,1470],[5,"CamlPolyComm",0,1471],[5,"CamlRandomOracles",0,1472],[5,"CamlScalarChallenge",0,1473],[1,"reference",null,null,1],[0,"mut"],[10,"Clone",1474],[6,"CurrOrNext",0,1475],[6,"GateType",0,1475],[5,"CamlProofEvaluations",0,1476],[5,"CamlProverCommitments",0,1470],[1,"unit"],[1,"u8"],[6,"Ordering",1477],[1,"tuple",null,null,1],[5,"CamlCircuitGate",0,1478],[5,"Vec",1479],[5,"CamlWire",0,1480],[1,"isize"],[5,"CamlProverProof",0,1470],[5,"PointEvaluations",1481],[5,"CamlOpeningProof",0,1482],[1,"usize"],[6,"Result",1483,null,1],[10,"Deserializer",1484],[1,"bool"],[5,"Formatter",1485],[5,"Error",1485],[10,"Debug",1485],[6,"Option",1486,null,1],[5,"ScalarChallenge",1487],[10,"From",1488,null,1],[5,"PolyComm",1489],[10,"AffineRepr",1490],[5,"OpeningProof",1491],[5,"CircuitGate",1475],[10,"PrimeField",1492],[5,"RandomOracles",1493],[10,"Field",1494],[5,"Wire",1495],[5,"ProverProof",1481],[5,"CamlProofWithPublic",0,1470],[5,"LookupCommitments",1481],[5,"ProverCommitments",1481],[1,"u32"],[6,"Value",1496],[10,"FromValue",1496],[10,"Hasher",1497],[5,"OCamlRuntime",1498],[10,"IntoValue",1496],[6,"LookupPattern",1499],[5,"Env",1500],[1,"str"],[5,"String",1501],[1,"slice"],[10,"Serializer",1502],[5,"JsValue",1503],[5,"TypeId",1504],[1,"u128"],[5,"Box",1505,null,1],[5,"Raw",1496],[5,"CamlBigInteger256",428],[8,"Result",1485],[8,"BigInteger256",1506],[5,"BigUint",1507],[6,"CamlGroupAffine",481],[8,"Vesta",1508],[8,"CamlGVesta",481],[8,"Pallas",1509],[8,"CamlGPallas",481],[5,"CamlGroupProjectivePallas",516],[5,"CamlGroupProjectiveVesta",516],[8,"ProjectivePallas",1509],[8,"ProjectiveVesta",1508],[5,"CamlFp",578],[8,"Fp",1510],[5,"CamlFq",669],[8,"Fq",1511],[5,"CamlBytesString",763],[5,"CamlFpVector",782],[5,"CamlFqVector",818],[10,"WithLagrangeBasis",920],[5,"Radix2EvaluationDomain",1512],[5,"CamlOracles",925],[1,"i32"],[8,"CamlPastaFpPlonkVerifierIndex",1026],[5,"CamlPlonkDomain",1153],[5,"CamlPlonkVerificationEvals",1153],[5,"VerifierIndex",1513],[8,"Int",1514],[5,"CamlFpSrs",1382],[6,"Error",1515],[8,"CamlPastaFqPlonkVerifierIndex",1112],[5,"CamlFqSrs",1425],[5,"CamlPlonkVerifierIndex",1153],[5,"CamlLookupInfo",1153],[5,"LookupFeatures",1499],[5,"CamlLookupSelectors",1153],[5,"LookupSelectors",1516],[10,"CommitmentCurve",1489],[5,"LookupInfo",1499],[5,"LookupVerifierIndex",1513],[5,"CamlLookupVerifierIndex",1153],[6,"CamlLookupsUsed",1153],[5,"SRS",1491],[5,"CamlPastaFpPlonkGateVector",856],[5,"CamlPastaFqPlonkGateVector",888],[5,"CamlPastaFpPlonkIndex",965],[5,"CamlPastaFpPoseidonParams",1050],[5,"CamlPastaFqPlonkIndex",1067],[5,"CamlPastaFqPoseidonParams",1136]],"r":[[0,1475],[1,1475],[2,1475],[3,1475],[4,1478],[5,1470],[6,1482],[7,1471],[8,1476],[9,1470],[10,1470],[11,1470],[12,1472],[13,1473],[14,1480],[15,1475],[16,1475],[17,1475],[18,1475],[19,1475],[20,1475],[21,1475],[22,1475],[23,1475],[24,1475],[25,1475],[26,1475],[27,1475],[28,1475],[29,1475],[30,1475],[31,920],[32,1475],[33,1475],[34,1470],[35,1472],[36,1472],[38,1472],[39,1473],[40,1471],[41,1482],[42,1475],[43,1475],[44,1478],[45,1472],[46,1480],[47,1476],[48,1470],[49,1470],[50,1470],[51,1470],[52,1473],[53,1471],[54,1482],[55,1475],[56,1475],[57,1478],[58,1472],[59,1480],[60,1476],[61,1470],[62,1470],[63,1470],[64,1470],[66,1473],[67,1471],[68,1475],[69,1475],[70,1476],[71,1470],[72,1470],[73,1473],[74,1471],[75,1475],[76,1475],[77,1476],[78,1470],[79,1470],[80,1473],[81,1471],[82,1475],[83,1475],[84,1476],[85,1470],[86,1470],[87,1475],[88,1475],[89,1476],[90,1478],[91,1480],[92,1470],[93,1476],[94,1475],[95,1482],[96,1473],[97,1471],[98,1482],[99,1475],[100,1475],[101,1478],[102,1472],[103,1480],[104,1476],[105,1470],[106,1470],[107,1470],[108,1470],[109,1473],[110,1471],[111,1482],[112,1475],[113,1475],[114,1478],[115,1472],[116,1480],[117,1476],[118,1470],[119,1470],[120,1470],[121,1470],[122,1475],[123,1475],[124,1473],[125,1471],[126,1482],[127,1475],[128,1475],[129,1478],[130,1472],[131,1480],[132,1476],[133,1470],[134,1470],[135,1470],[136,1470],[137,1476],[138,1476],[139,1475],[140,1475],[141,1475],[142,1475],[143,1475],[144,1475],[145,1470],[147,1473],[148,1471],[149,1475],[150,1475],[151,1476],[152,1476],[153,1476],[154,1473],[155,1473],[156,1471],[157,1471],[158,1471],[159,1482],[160,1482],[161,1475],[162,1475],[163,1478],[164,1478],[165,1478],[166,1472],[167,1472],[168,1480],[169,1480],[170,1476],[171,1470],[172,1470],[173,1470],[174,1470],[175,1470],[176,1470],[177,1470],[178,1475],[179,1475],[180,1473],[181,1471],[182,1482],[183,1475],[184,1475],[185,1478],[186,1472],[187,1480],[188,1476],[189,1470],[190,1470],[191,1470],[192,1470],[193,1470],[194,1472],[196,1476],[197,1475],[198,1475],[199,1473],[200,1471],[201,1482],[202,1475],[203,1475],[204,1478],[205,1472],[206,1480],[207,1476],[208,1470],[209,1470],[210,1470],[211,1470],[212,1473],[213,1471],[214,1482],[215,1475],[216,1475],[217,1478],[218,1472],[219,1480],[220,1476],[221,1470],[222,1470],[223,1470],[224,1470],[225,1475],[226,1475],[227,1473],[228,1471],[229,1482],[230,1475],[231,1475],[232,1478],[233,1472],[234,1480],[235,1476],[236,1470],[237,1470],[238,1470],[239,1470],[240,1475],[241,1475],[242,1472],[245,1470],[246,1476],[247,1476],[248,1475],[249,1476],[250,1476],[251,1482],[252,1476],[253,1475],[254,1475],[255,1473],[256,1471],[257,1482],[258,1475],[259,1475],[260,1478],[261,1472],[262,1480],[263,1476],[264,1470],[265,1470],[266,1470],[267,1470],[268,1473],[269,1471],[270,1482],[271,1475],[272,1475],[273,1478],[274,1472],[275,1480],[276,1476],[277,1470],[278,1470],[279,1470],[280,1470],[282,1475],[283,1475],[293,1476],[294,1470],[296,1470],[297,1470],[298,1470],[299,1470],[300,1476],[301,1476],[302,1476],[303,1475],[304,1475],[305,1476],[306,1480],[307,1470],[308,1476],[309,1476],[310,1476],[311,1475],[312,1475],[313,1482],[314,1475],[315,1471],[316,1470],[318,1470],[319,1473],[320,1471],[321,1475],[322,1475],[323,1476],[324,1470],[325,1470],[326,1473],[327,1471],[328,1482],[329,1475],[330,1475],[331,1478],[332,1472],[333,1480],[334,1476],[335,1470],[336,1470],[337,1470],[338,1470],[339,1475],[340,1475],[341,1473],[342,1471],[343,1482],[344,1475],[345,1475],[346,1478],[347,1472],[348,1480],[349,1476],[350,1470],[351,1470],[352,1470],[353,1470],[354,1478],[355,1473],[356,1471],[357,1482],[358,1475],[359,1475],[360,1478],[361,1472],[362,1480],[363,1476],[364,1470],[365,1470],[366,1470],[367,1470],[368,1472],[369,1472],[370,1473],[371,1471],[372,1482],[373,1475],[374,1475],[375,1478],[376,1472],[377,1480],[378,1476],[379,1470],[380,1470],[381,1470],[382,1470],[383,1471],[385,1472],[386,1472],[387,1475],[388,1475],[389,1475],[390,1475],[391,1473],[392,1471],[393,1482],[394,1475],[395,1475],[396,1478],[397,1472],[398,1480],[399,1476],[400,1470],[401,1470],[402,1470],[403,1470],[404,1476],[405,1470],[406,1478],[407,1476],[408,1476],[409,1476],[410,1482],[411,1482],[412,1470],[413,1472],[414,1472],[415,428],[416,578],[417,669],[418,481],[419,481],[420,481],[421,516],[422,516]],"b":[[156,"impl-From%3C%26PolyComm%3CG%3E%3E-for-CamlPolyComm%3CCamlG%3E"],[157,"impl-From%3CPolyComm%3CG%3E%3E-for-CamlPolyComm%3CCamlG%3E"],[163,"impl-From%3CCircuitGate%3CF%3E%3E-for-CamlCircuitGate%3CCamlF%3E"],[165,"impl-From%3C%26CircuitGate%3CF%3E%3E-for-CamlCircuitGate%3CCamlF%3E"],[462,"impl-Debug-for-CamlBigInteger256"],[463,"impl-Display-for-CamlBigInteger256"],[474,"impl-TryFrom%3CBigUint%3E-for-CamlBigInteger256"],[475,"impl-TryFrom%3C%26BigUint%3E-for-CamlBigInteger256"],[499,"impl-From%3C%26Affine%3CVestaParameters%3E%3E-for-CamlGroupAffine%3CCamlFq%3E"],[500,"impl-From%3CAffine%3CVestaParameters%3E%3E-for-CamlGroupAffine%3CCamlFq%3E"],[501,"impl-From%3C%26Affine%3CPallasParameters%3E%3E-for-CamlGroupAffine%3CCamlFp%3E"],[502,"impl-From%3CAffine%3CPallasParameters%3E%3E-for-CamlGroupAffine%3CCamlFp%3E"],[518,"impl-Add-for-%26CamlGroupProjectivePallas"],[519,"impl-Add-for-CamlGroupProjectivePallas"],[520,"impl-Add-for-%26CamlGroupProjectiveVesta"],[521,"impl-Add-for-CamlGroupProjectiveVesta"],[540,"impl-From%3C%26Projective%3CPallasParameters%3E%3E-for-CamlGroupProjectivePallas"],[542,"impl-From%3CProjective%3CPallasParameters%3E%3E-for-CamlGroupProjectivePallas"],[543,"impl-From%3CProjective%3CVestaParameters%3E%3E-for-CamlGroupProjectiveVesta"],[544,"impl-From%3C%26Projective%3CVestaParameters%3E%3E-for-CamlGroupProjectiveVesta"],[554,"impl-Neg-for-%26CamlGroupProjectivePallas"],[555,"impl-Neg-for-CamlGroupProjectivePallas"],[556,"impl-Neg-for-CamlGroupProjectiveVesta"],[557,"impl-Neg-for-%26CamlGroupProjectiveVesta"],[562,"impl-Sub-for-CamlGroupProjectivePallas"],[563,"impl-Sub-for-%26CamlGroupProjectivePallas"],[564,"impl-Sub-for-%26CamlGroupProjectiveVesta"],[565,"impl-Sub-for-CamlGroupProjectiveVesta"],[654,"impl-From%3C%26Fp%3CMontBackend%3CFqConfig,+4%3E,+4%3E%3E-for-CamlFp"],[655,"impl-From%3CFp%3CMontBackend%3CFqConfig,+4%3E,+4%3E%3E-for-CamlFp"],[743,"impl-From%3C%26Fp%3CMontBackend%3CFrConfig,+4%3E,+4%3E%3E-for-CamlFq"],[744,"impl-From%3CFp%3CMontBackend%3CFrConfig,+4%3E,+4%3E%3E-for-CamlFq"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEIFTwACAAIAEQAAABUAAQAZAAEAHQABACAAAQAjAAIAJwAaAEMATwCUAAcAnQABAKAAAACkAAAApgAAAKgAAACqAAAArAAAAK8AAACyABEAxQAPAOIAEgD2AAIA+gABAP0AHAAbAQEAHwEAACEBAwAmAQEAKQERADwBAQA/AUEAggFPANMBAQDWASEA+QEBAPwBIQAfAgIAIwIDACkCZACPAgMAlAJVAOsCAQDuAgsA/AIFAAMDAQAGAx8AJwMBACoDHwBLAwEATgMfAG8DAABxAxwAjwMAAJEDCwCeAwgAqAMBAKsDGgDHAxYA3wMAAOEDQgAlBAAAJwQEAC0EFgBFBAAARwQyAHsEAAB9BDoAuwQAAL0EAAC/BAAAwgQPANkEDQDpBJAAewUJAIYFAQCJBRsApgUJALEFAQC0BQoA","P":[[39,"T"],[66,"CamlF"],[67,"CamlG"],[68,""],[70,"CamlF"],[71,"CamlG"],[73,"T"],[80,""],[96,"T"],[122,"__D"],[124,""],[141,"K"],[145,""],[147,"CamlF"],[148,"CamlG"],[149,""],[154,"F,CamlF"],[155,"T"],[156,"G,CamlG"],[158,"T"],[159,"G,CamlG,CamlF"],[160,"T"],[163,"F,CamlF"],[164,"T"],[165,"F,CamlF"],[166,"T"],[167,"F,CamlF"],[168,"T"],[169,""],[170,"T"],[171,"G,CamlG,CamlF"],[172,"T"],[174,"G,CamlG"],[175,"T"],[177,"G,CamlG"],[178,""],[180,"CamlF"],[181,"CamlG"],[182,"G,F"],[183,""],[185,"F"],[186,"CamlF"],[187,""],[188,"CamlF"],[189,"CamlG,CamlF"],[191,"CamlG"],[193,""],[197,"__H"],[199,""],[212,"U"],[225,""],[227,"CamlF"],[228,"CamlG"],[229,"G,F"],[230,""],[232,"F"],[233,"CamlF"],[234,""],[235,"CamlF"],[236,"CamlG,CamlF"],[238,"CamlG"],[240,""],[311,"__S"],[313,""],[319,"T"],[326,"U,T"],[339,""],[341,"U"],[354,""],[391,"V"],[404,""],[429,"T"],[431,""],[456,"T"],[457,""],[458,"T"],[459,"Deref::Target"],[460,"T"],[461,""],[465,"T"],[466,""],[468,"U"],[469,""],[472,"T"],[473,""],[474,"TryFrom::Error"],[476,"U,T"],[477,"U"],[478,""],[480,"V"],[490,"T"],[492,"F"],[493,"T"],[494,""],[495,"T"],[497,""],[498,"F"],[499,""],[503,"T"],[504,"F"],[505,""],[506,"U"],[507,"F"],[508,""],[510,"T"],[511,"U,T"],[512,"U"],[513,""],[515,"V"],[518,"Add::Output"],[519,""],[520,"Add::Output"],[521,""],[522,"T"],[526,""],[528,"T"],[530,""],[532,"Deref::Target"],[533,"T"],[535,"Deref::Target"],[536,"T"],[538,""],[541,"T"],[542,""],[545,"T"],[546,""],[550,"U"],[552,""],[554,"Neg::Output"],[558,""],[562,"Sub::Output"],[566,"T"],[568,"U,T"],[570,"U"],[572,""],[576,"V"],[579,"T"],[581,""],[646,"T"],[647,""],[648,"Deref::Target"],[649,"T"],[651,""],[653,"T"],[654,""],[658,"U"],[659,""],[662,"T"],[663,"TryFrom::Error"],[664,"U,T"],[665,"U"],[666,""],[668,"V"],[670,"T"],[672,""],[737,"T"],[738,""],[739,"T"],[740,"Deref::Target"],[741,"T"],[742,""],[745,"T"],[746,""],[748,"U"],[749,""],[752,"T"],[753,"TryFrom::Error"],[754,"U,T"],[755,"U"],[756,""],[758,"V"],[764,"T"],[768,""],[769,"T"],[770,""],[772,"U"],[773,""],[775,"U,T"],[776,"U"],[777,""],[779,"V"],[783,"T"],[785,""],[796,"T"],[797,""],[799,"Deref::Target"],[800,"T"],[801,"Deref::Target"],[802,"T"],[803,""],[805,"T"],[806,""],[808,"U"],[809,""],[812,"T"],[813,"U,T"],[814,"U"],[815,""],[817,"V"],[819,"T"],[821,""],[832,"T"],[833,""],[835,"T"],[836,"Deref::Target"],[838,"T"],[839,""],[841,"T"],[842,""],[844,"U"],[845,""],[848,"T"],[849,"U,T"],[850,"U"],[851,""],[853,"V"],[858,"T"],[860,""],[874,"T"],[876,""],[877,"T"],[878,""],[879,"U"],[880,""],[883,"U,T"],[884,"U"],[885,""],[887,"V"],[890,"T"],[892,""],[906,"T"],[908,""],[909,"T"],[910,""],[911,"U"],[912,""],[915,"U,T"],[916,"U"],[917,""],[919,"V"],[921,""],[926,"T"],[930,""],[934,"T"],[935,"F"],[936,""],[937,"U"],[938,"F"],[939,""],[944,"U,T"],[945,"U"],[946,""],[948,"V"],[949,""],[967,"T"],[969,""],[986,"T"],[988,""],[989,"T"],[990,""],[991,"U"],[992,""],[995,"U,T"],[996,"U"],[997,""],[999,"V"],[1000,""],[1052,"T"],[1054,""],[1056,"T"],[1058,""],[1059,"T"],[1060,""],[1061,"U"],[1062,""],[1063,"U,T"],[1064,"U"],[1065,""],[1066,"V"],[1069,"T"],[1071,""],[1088,"T"],[1090,""],[1091,"T"],[1092,""],[1093,"U"],[1094,""],[1097,"U,T"],[1098,"U"],[1099,""],[1101,"V"],[1102,""],[1138,"T"],[1140,""],[1142,"T"],[1144,""],[1145,"T"],[1146,""],[1147,"U"],[1148,""],[1149,"U,T"],[1150,"U"],[1151,""],[1152,"V"],[1162,"T"],[1176,""],[1178,"T"],[1192,""],[1207,"T"],[1210,"G,CamlPolyComm"],[1211,"T"],[1212,""],[1213,"T"],[1214,"G,CamlPolyComm"],[1215,"T"],[1217,"Fr"],[1218,"PolyComm"],[1219,""],[1220,"T"],[1221,""],[1222,"PolyComm"],[1223,"Fr,SRS,PolyComm"],[1224,""],[1233,"U"],[1240,"Fr"],[1241,"PolyComm"],[1242,""],[1243,"T"],[1244,""],[1245,"PolyComm"],[1246,"Fr,SRS,PolyComm"],[1247,""],[1284,"U,T"],[1291,"U"],[1298,""],[1312,"V"],[1319,""],[1383,"T"],[1385,""],[1407,"Deref::Target"],[1408,"T"],[1410,""],[1412,"T"],[1413,""],[1415,"U"],[1416,""],[1420,"U,T"],[1421,"U"],[1422,""],[1424,"V"],[1426,"T"],[1428,""],[1450,"Deref::Target"],[1451,"T"],[1453,""],[1455,"T"],[1456,""],[1458,"U"],[1459,""],[1463,"U,T"],[1464,"U"],[1465,""],[1467,"V"],[1468,"G"]]}],["kimchi_visu",{"t":"EHHCFNNNNNNNNNNNNNNNNN","n":["Witness","latex_constraints","visu","witness","Witness","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","","init","inner","into","new","serialize","try_from","try_into","type_id","vzip"],"q":[[0,"kimchi_visu"],[4,"kimchi_visu::witness"],[22,"alloc::string"],[23,"alloc::vec"],[24,"std::collections::hash::map"],[25,"poly_commitment::ipa"],[26,"kimchi::prover_index"],[27,"core::option"],[28,"kimchi::curve"],[29,"core::fmt"],[30,"ark_ff::fields"],[31,"core::result"],[32,"serde::ser"],[33,"core::any"]],"i":"`````A`0000000000000000","f":"`{{}{{j{{d{b}}{h{{h{f}}}}}}}}{{{d{{n{c{l{c}}}}}}{Ab{A`}}}AdAf}``{d{{d{c}}}{}}{{{d{Ah}}}{{d{Ahc}}}{}}{Aj{{d{c}}}{}}{Aj{{d{Ahc}}}{}}{AjAd}{{{d{{A`{c}}}}{d{AhAl}}}An{B`Bb}}{cc{}}{{{Bd{{h{c}}}}}{{A`{c}}}B`}{{}Aj}{{{A`{c}}}{{Bd{{h{c}}}}}B`}{{}c{}}{Aj{{A`{c}}}B`}{{{d{{A`{c}}}}e}BfB`Bh}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{dBj}{{}c{}}","D":"n","p":[[1,"str"],[1,"reference",null,null,1],[5,"String",22],[5,"Vec",23],[5,"HashMap",24],[5,"OpeningProof",25],[5,"ProverIndex",26],[5,"Witness",4],[6,"Option",27,null,1],[1,"unit"],[10,"KimchiCurve",28],[0,"mut"],[1,"usize"],[5,"Formatter",29],[8,"Result",29],[10,"Field",30],[10,"Debug",29],[1,"array"],[6,"Result",31,null,1],[10,"Serializer",32],[5,"TypeId",33]],"r":[[0,4]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA8ABQABAAEABAAAAAYABQANAAEAEgAEAA==","P":[[2,"G"],[5,"T"],[9,""],[10,"F"],[11,"T"],[12,"F"],[13,""],[14,"F"],[15,"U"],[16,"F"],[17,"F,__S"],[18,"U,T"],[19,"U"],[20,""],[21,"V"]]}],["mina_book",{"t":"","n":[],"q":[],"i":"","f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA","P":[]}],["mina_curves",{"t":"CCTKEEEEEEEECCCCSSIFIFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOSSIFIIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOGPPKPNNNNNNCNCCNNNNNNMMMNNNNRTKKKTTTTTTTTTTTTTTTIFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["named","pasta","NAME","NamedCurve","Fp","Fq","Pallas","PallasParameters","ProjectivePallas","ProjectiveVesta","Vesta","VestaParameters","curves","fields","pallas","vesta","G_GENERATOR_X","G_GENERATOR_Y","LegacyPallas","LegacyPallasParameters","Pallas","PallasParameters","ProjectivePallas","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","","equivalent","","","","fmt","from","","init","","into","","mul_by_a","to_owned","","try_from","","try_into","","type_id","","vzip","","x","y","z","G_GENERATOR_X","G_GENERATOR_Y","LegacyVesta","LegacyVestaParameters","ProjectiveVesta","Vesta","VestaParameters","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","","equivalent","","","","fmt","from","","init","","into","","mul_by_a","to_owned","","try_from","","try_into","","type_id","","vzip","","x","y","z","LegendreSymbol","QuadraticNonResidue","QuadraticResidue","SquareRootField","Zero","borrow","borrow_mut","deref","deref_mut","drop","eq","fft","fmt","fp","fq","from","init","into","is_qnr","is_qr","is_zero","legendre","sqrt","sqrt_in_place","try_from","try_into","type_id","vzip","BigInt","CAPACITY","FftParameters","Fp256Parameters","FpParameters","GENERATOR","INV","LARGE_SUBGROUP_ROOT_OF_UNITY","MODULUS","MODULUS_BITS","MODULUS_MINUS_ONE_DIV_TWO","R","R2","REPR_SHAVE_BITS","SMALL_SUBGROUP_BASE","SMALL_SUBGROUP_BASE_ADICITY","T","TWO_ADICITY","TWO_ADIC_ROOT_OF_UNITY","T_MINUS_ONE_DIV_TWO","Fp","FpParameters","FqConfig","add_assign","borrow","","borrow_mut","","deref","","deref_mut","","double_in_place","drop","","from","","init","","into","","mul_assign","neg_in_place","square_in_place","sub_assign","sum_of_products","try_from","","try_into","","type_id","","vzip","","Fq","FqParameters","FrConfig","add_assign","borrow","","borrow_mut","","deref","","deref_mut","","double_in_place","drop","","from","","init","","into","","mul_assign","neg_in_place","square_in_place","sub_assign","sum_of_products","try_from","","try_into","","type_id","","vzip",""],"q":[[0,"mina_curves"],[2,"mina_curves::named"],[4,"mina_curves::pasta"],[14,"mina_curves::pasta::curves"],[16,"mina_curves::pasta::curves::pallas"],[68,"mina_curves::pasta::curves::vesta"],[120,"mina_curves::pasta::fields"],[148,"mina_curves::pasta::fields::fft"],[168,"mina_curves::pasta::fields::fp"],[202,"mina_curves::pasta::fields::fq"],[236,"core::fmt"],[237,"core::result"],[238,"core::any"],[239,"ark_ff::fields::models::fp"],[240,"core::option"],[241,"ark_ff::fields::models::fp::montgomery_backend"]],"i":"``Cf````````````````````hj1010101010101010101100110101011010101010Al00```````BbBd1010101010101010101100110101011010101010Bf00`Bh0`0000000`0``000000Bj001111ChCj```001000000110110```BnCl10101011010101011111101010101```CdCn10101011010101011111101010101","f":"````````````````{{}b}0`````{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{{d{h}}}h}{{{d{j}}}j}{{d{d{fc}}}l{}}0{{dn}l}0{{}h}{{}j}{A`{{d{c}}}{}}0{A`{{d{fc}}}{}}0{A`l}0{{{d{h}}{d{h}}}Ab}{{{d{j}}{d{j}}}Ab}{{d{d{c}}}Ab{}}000{{{d{h}}{d{fAd}}}Af}{cc{}}0{{}A`}0{{}c{}}0{d}{dc{}}0{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{dAj}0{{}c{}}0{AlAn}00{{}B`}0`````{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{{d{Bb}}}Bb}{{{d{Bd}}}Bd}{{d{d{fc}}}l{}}0{{dn}l}0{{}Bb}{{}Bd}{A`{{d{c}}}{}}0{A`{{d{fc}}}{}}0{A`l}0{{{d{Bb}}{d{Bb}}}Ab}{{{d{Bd}}{d{Bd}}}Ab}{{d{d{c}}}Ab{}}000{{{d{Bb}}{d{fAd}}}Af}{cc{}}0{{}A`}0{{}c{}}0{d}{dc{}}0{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{dAj}0{{}c{}}0{BfAn}00`````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{A`{{d{c}}}{}}{A`{{d{fc}}}{}}{A`l}{{{d{Bh}}{d{Bh}}}Ab}`{{{d{Bh}}{d{fAd}}}Af}``{cc{}}{{}A`}{{}c{}}{{{d{Bh}}}Ab}00{{{d{Bj}}}Bh}{{{d{Bj}}}{{Bl{Bj}}}}{{{d{fBj}}}{{Bl{{d{fBj}}}}}}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{dAj}{{}c{}}```````````````````````{{{d{f{An{{C`{Bn}}}}}}{d{{An{{C`{Bn}}}}}}}l}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{A`{{d{c}}}{}}0{A`{{d{fc}}}{}}0{{{d{f{An{{C`{Bn}}}}}}}l}{A`l}0{cc{}}0{{}A`}0{{}c{}}09449{{{d{{Cb{{An{{C`{Bn}}}}}}}}{d{{Cb{{An{{C`{Bn}}}}}}}}}{{An{{C`{Bn}}}}}}>>==<<;;```{{{d{f{An{{C`{Cd}}}}}}{d{{An{{C`{Cd}}}}}}}l}::998877{{{d{f{An{{C`{Cd}}}}}}}l}665544331001{{{d{{Cb{{An{{C`{Cd}}}}}}}}{d{{Cb{{An{{C`{Cd}}}}}}}}}{{An{{C`{Cd}}}}}}{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{dAj}0{{}c{}}0","D":"G`","p":[[8,"Fp",168],[1,"reference",null,null,1],[0,"mut"],[5,"PallasParameters",16],[5,"LegacyPallasParameters",16],[1,"unit"],[1,"u8"],[1,"usize"],[1,"bool"],[5,"Formatter",236],[8,"Result",236],[6,"Result",237,null,1],[5,"TypeId",238],[8,"ProjectivePallas",16],[5,"Fp",239],[8,"Fq",202],[5,"VestaParameters",68],[5,"LegacyVestaParameters",68],[8,"ProjectiveVesta",68],[6,"LegendreSymbol",120],[10,"SquareRootField",120],[6,"Option",240,null,1],[5,"FqConfig",168],[5,"MontBackend",241],[1,"array"],[5,"FrConfig",202],[10,"NamedCurve",2],[10,"FftParameters",148],[10,"FpParameters",148],[5,"FpParameters",168],[5,"FqParameters",202]],"r":[[4,168],[5,202],[6,16],[7,16],[8,16],[9,68],[10,68],[11,68]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAALQAFwAAAAIABQALABMAAAAVABsAMwABADcACgBHAAAASQAbAGcAAQBrAAoAeQACAH0ACgCJAAAAiwACAJEABACYAAAAqQAOALoAAQC+AAAAwAAZANwAAQDgAAAA4gAKAA==","P":[[23,"T"],[27,""],[29,"T"],[31,""],[35,"T"],[39,""],[43,"K"],[47,""],[48,"T"],[50,""],[52,"U"],[54,""],[55,"T"],[57,"U,T"],[59,"U"],[61,""],[63,"V"],[65,""],[75,"T"],[79,""],[81,"T"],[83,""],[87,"T"],[91,""],[95,"K"],[99,""],[100,"T"],[102,""],[104,"U"],[106,""],[107,"T"],[109,"U,T"],[111,"U"],[113,""],[115,"V"],[117,""],[125,"T"],[129,""],[135,"T"],[136,""],[137,"U"],[138,""],[144,"U,T"],[145,"U"],[146,""],[147,"V"],[171,""],[172,"T"],[180,""],[183,"T"],[185,""],[187,"U"],[189,""],[194,"U,T"],[196,"U"],[198,""],[200,"V"],[205,""],[206,"T"],[214,""],[217,"T"],[219,""],[221,"U"],[223,""],[228,"U,T"],[230,"U"],[232,""],[234,"V"]]}],["mina_hasher",{"t":"RKIKKEEEHHMMNMNMCMCMMFIINNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["D","DomainParameter","Fp","Hashable","Hasher","PoseidonHasherKimchi","PoseidonHasherLegacy","ROInput","create_kimchi","create_legacy","digest","domain_string","hash","init","init_and_hash","into_bytes","poseidon","reset","roinput","to_roinput","update","Poseidon","PoseidonHasherKimchi","PoseidonHasherLegacy","borrow","borrow_mut","deref","deref_mut","digest","drop","from","init","","into","reset","try_from","try_into","type_id","update","vzip","ROInput","append_bool","append_bytes","append_field","append_hashable","append_roinput","append_scalar","append_u32","append_u64","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","new","to_bytes","to_fields","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"mina_hasher"],[21,"mina_hasher::poseidon"],[40,"mina_hasher::roinput"],[73,"mina_curves::pasta::fields::fp"],[74,"alloc::string"],[75,"core::option"],[76,"alloc::vec"],[77,"mina_poseidon::constants"],[78,"core::result"],[79,"core::any"],[80,"mina_curves::pasta::fields::fq"],[81,"core::fmt"]],"i":"d`````````j1000Ad`1`21```B`000000000000000`Al0000000000000000000000000000000","f":"````````{{}{{b{c}}}d}{{}{{f{c}}}d}{{{l{hj}}}n}{c{{Ab{A`}}}{}}{{{l{hj}}{l{c}}}nd}{{{l{hj}}}{{l{hj}}}}1{Ad{{Ah{Af}}}}`1`{{{l{{d{}{{Aj{c}}}}}}}AlAd}{{{l{hj}}{l{c}}}{{l{hj}}}d}```{l{{l{c}}}{}}{{{l{h}}}{{l{hc}}}{}}{An{{l{c}}}{}}{An{{l{hc}}}{}}{{{l{h{B`{ce}}}}}nBbd}{AnBd}{cc{}}{{}An}{{{l{h{B`{ce}}}}}{{l{hj}}}Bbd}{{}c{}}1{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{lBh}{{{l{h{B`{ce}}}}{l{e}}}{{l{hj}}}Bbd}{{}c{}}`{{AlBj}Al}{{Al{l{{Bl{Af}}}}}Al}{{Aln}Al}{{Al{l{c}}}Ald}{{AlAl}Al}{{AlBn}Al}{{AlC`}Al}{{AlCb}Al}{l{{l{c}}}{}}{{{l{h}}}{{l{hc}}}{}}{{{l{Al}}}Al}{{l{l{hc}}}Bd{}}{{lAf}Bd}{{}Al}{An{{l{c}}}{}}{An{{l{hc}}}{}}{AnBd}{{{l{Al}}{l{Al}}}Bj}{{l{l{c}}}Bj{}}0{{{l{Al}}{l{hCd}}}Cf}{cc{}}{{}An}{{}c{}}9{{{l{Al}}}{{Ah{Af}}}}{{{l{Al}}}{{Ah{n}}}}{lc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{lBh}{{}c{}}","D":"Dj","p":[[8,"PoseidonHasherKimchi",21],[10,"Hashable",0],[8,"PoseidonHasherLegacy",21],[0,"mut"],[10,"Hasher",0],[1,"reference",null,null,1],[8,"Fp",0,73],[5,"String",74],[6,"Option",75,null,1],[10,"DomainParameter",0],[1,"u8"],[5,"Vec",76],[17,"D"],[5,"ROInput",40],[1,"usize"],[5,"Poseidon",21],[10,"SpongeConstants",77],[1,"unit"],[6,"Result",78,null,1],[5,"TypeId",79],[1,"bool"],[1,"slice"],[8,"Fq",80],[1,"u32"],[1,"u64"],[5,"Formatter",81],[8,"Result",81]],"r":[[2,73],[5,21],[6,21],[7,40]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACQACAADAAAABgACABkABQAgAAEAIwAFADIADABAAAAARQAEAA==","P":[[8,"H"],[10,""],[11,"Hashable::D"],[12,"H"],[13,""],[14,"H"],[15,""],[19,"Hashable::D"],[20,"H"],[24,"T"],[28,"SC,H"],[29,""],[30,"T"],[31,""],[32,"SC,H"],[33,"U"],[34,"SC,H"],[35,"U,T"],[36,"U"],[37,""],[38,"SC,H"],[39,"V"],[41,""],[49,"T"],[51,""],[52,"T"],[53,""],[55,"T"],[57,""],[59,"K"],[61,""],[62,"T"],[63,""],[64,"U"],[65,""],[68,"T"],[69,"U,T"],[70,"U"],[71,""],[72,"V"]]}],["mina_poseidon",{"t":"ECCCCCCTTTTTTFFTTTKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHCCCCHHHHHHHHHPFFKGPMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNOMNNMNOHNOMNONNNNNNNNNNNNNNNSFFKFMNMNMNNNNNNNCMNMNNNNNNNNNNNNNMNMNNNNHNNNNNNNNNNNOOMNOONNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNN","n":["FqSponge","constants","dummy_values","pasta","permutation","poseidon","sponge","PERM_FULL_MDS","PERM_HALF_ROUNDS_FULL","PERM_INITIAL_ARK","PERM_ROUNDS_FULL","PERM_ROUNDS_PARTIAL","PERM_SBOX","PlonkSpongeConstantsKimchi","PlonkSpongeConstantsLegacy","SPONGE_CAPACITY","SPONGE_RATE","SPONGE_WIDTH","SpongeConstants","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","from","","init","","into","","to_owned","","try_from","","try_into","","type_id","","vzip","","kimchi_dummy","fp_kimchi","fp_legacy","fq_kimchi","fq_legacy","params","static_params","","params","static_params","","full_round","half_rounds","poseidon_block_cipher","Absorbed","ArithmeticSponge","ArithmeticSpongeParams","Sponge","SpongeState","Squeezed","absorb","","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","constants","default","deref","","","deref_mut","","","deserialize","drop","","","fmt","","from","","","full_round","init","","","into","","","mds","new","","poseidon_block_cipher","reset","","round_constants","sbox","serialize","sponge_state","squeeze","","state","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","CHALLENGE_LENGTH_IN_LIMBS","DefaultFqSponge","DefaultFrSponge","FqSponge","ScalarChallenge","absorb_fq","","absorb_fr","","absorb_g","","borrow","","","borrow_mut","","","caml","challenge","","challenge_fq","","clone","","clone_into","","clone_to_uninit","","deref","","","deref_mut","","","digest","","digest_fq","","drop","","","endo_coefficient","fmt","from","","","","init","","","into","","","last_squeezed","","new","","sponge","","squeeze","","squeeze_field","squeeze_limbs","to_field","to_field_with_length","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","CamlScalarChallenge","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","from","","from_value","init","into","into_value","ocaml_binding","ocaml_desc","to_owned","try_from","try_into","type_id","unique_id","vzip"],"q":[[0,"mina_poseidon"],[7,"mina_poseidon::constants"],[51,"mina_poseidon::dummy_values"],[52,"mina_poseidon::pasta"],[56,"mina_poseidon::pasta::fp_kimchi"],[58,"mina_poseidon::pasta::fp_legacy"],[59,"mina_poseidon::pasta::fq_kimchi"],[61,"mina_poseidon::pasta::fq_legacy"],[62,"mina_poseidon::permutation"],[65,"mina_poseidon::poseidon"],[140,"mina_poseidon::sponge"],[219,"mina_poseidon::sponge::caml"],[243,"core::result"],[244,"core::any"],[245,"core::fmt"],[246,"ark_ff::fields"],[247,"core::str::traits"],[248,"mina_curves::pasta::fields::fp"],[249,"mina_curves::pasta::fields::fq"],[250,"alloc::vec"],[251,"core::clone"],[252,"ark_serialize"],[253,"core::marker"],[254,"core::default"],[255,"serde::de"],[256,"serde::ser"],[257,"ark_ec::models::short_weierstrass"],[258,"ark_ec::models::short_weierstrass::affine"],[259,"ark_ff::fields::prime"],[260,"core::convert"],[261,"ocaml::value"],[262,"ocaml_interop::runtime"],[263,"ocaml_gen"],[264,"core::option"],[265,"alloc::string"]],"i":"```````Bj00000``000`fh101010101010101010101010101010``````````````Bl````0BfBh2Ad13013013013011030130103013030113013010211210`01211301301301301301`````D`Db1010E`Dh2102`32320202021021023232102`0100210210212321212220002102102102102`Dl0000000000000000000000","f":"```````````````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{f}}}f}{{{b{h}}}h}{{b{b{dc}}}j{}}0{{bl}j}0{n{{b{c}}}{}}0{n{{b{dc}}}{}}0{nj}0{cc{}}0{{}n}0{{}c{}}0{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bAb}0{{}c{}}0{{}{{Ad{e}}}Af{Ah{Al{}{{Aj{c}}}}}}````{{}{{Ad{An}}}}{{}{{b{{Ad{An}}}}}}0{{}{{Ad{B`}}}}{{}{{b{{Ad{B`}}}}}}0{{{b{{Ad{c}}}}{b{d{Bb{c}}}}n}jAh}{{{b{{Ad{c}}}}{b{d{Bd{c}}}}}jAh}{{{b{{Ad{c}}}}{b{d{Bb{c}}}}}jAh}``````{{{b{dBf}}{b{{Bd{c}}}}}jAh}{{{b{d{Bh{ce}}}}{b{{Bd{c}}}}}jAhBj}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Bl}}}Bl}{{{b{{Ad{c}}}}}{{Ad{c}}}{BnAhC`Cb}}{{{b{{Bh{ce}}}}}{{Bh{ce}}}{BnAh}{BnBj}}{{b{b{dc}}}j{}}00{{bl}j}00{BhCd}{{}{{Ad{c}}}{CfAhC`Cb}}{n{{b{c}}}{}}00{n{{b{dc}}}{}}00{c{{A`{{Ad{e}}}}}Ch{AhC`Cb}}{nj}00{{{b{Bl}}{b{dCj}}}Cl}{{{b{{Ad{c}}}}{b{dCj}}}Cl{AfAhC`Cb}}{cc{}}00{{{b{d{Bh{ce}}}}n}jAhBj}{{}n}00{{}c{}}00{AdBb}{{{b{{Ad{c}}}}}BfAh}{{{b{{Ad{c}}}}}{{Bh{ce}}}AhBj}{{{b{d{Bh{ce}}}}}jAhBj}{{{b{dBf}}}j}14{ccAh}{{{b{{Ad{c}}}}e}A`{AhC`Cb}Cn}{BhBl}{{{b{dBf}}}c{}}{{{b{d{Bh{ce}}}}}cAhBj}{BhBb}{bc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bAb}00{{}c{}}00{{}n}````{{{b{dD`}}{b{{Bd{c}}}}}jAh}{{{b{d{Db{ce}}}}{b{Bd}}}jDdBj}{{{b{dD`}}{b{{Bd{c}}}}}j{}}1{{{b{dD`}}{b{{Bd{c}}}}}j{}}{{{b{d{Db{ce}}}}{b{{Bd{{Df{c}}}}}}}jDdBj}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00`{{{b{dD`}}}c{}}{{{b{d{Db{ce}}}}}{}DdBj}{{{b{dD`}}}cAh}1{{{b{{Dh{c}}}}}{{Dh{c}}}Bn}{{{b{{Db{ce}}}}}{{Db{ce}}}{BnDd}{BnBj}}{{b{b{dc}}}j{}}0{{bl}j}0{n{{b{c}}}{}}00{n{{b{dc}}}{}}00{D`c{}}{{{Db{ce}}}{}DdBj}{D`cAh}1{nj}00{{}cDj}{{{b{{Dh{c}}}}{b{dCj}}}ClAf}{cc{}}{{{Dl{e}}}{{Dh{c}}}{}{{Dn{c}}}}11{{}n}00{{}c{}}00{E`Bb}{DbBb}{{{b{{Ad{c}}}}}D`Ah}{{{b{Ad}}}{{Db{ce}}}DdBj}{E`Bh}{DbBh}{{{b{d{E`{ce}}}}n}cDjBj}{{{b{d{Db{ce}}}}n}{}DdBj}{{{b{d{Db{ce}}}}}{}DdBj}{{{b{d{Db{ce}}}}n}{{Bb{Eb}}}DdBj}{{{b{{Dh{c}}}}{b{c}}}cDj}{{{b{{Dh{c}}}}n{b{c}}}cDj}{bc{}}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bAb}00{{}c{}}00`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{Dl{c}}}}}{{Dl{c}}}Bn}{{b{b{dc}}}j{}}{{bl}j}{n{{b{c}}}{}}{n{{b{dc}}}{}}{nj}{{{b{{Dl{c}}}}{b{dCj}}}ClAf}{cc{}}{{{Dh{c}}}{{Dl{e}}}{}{{Ed{c}}}}{Ef{{Dl{c}}}Eh}{{}n}{{}c{}}{{{Dl{c}}{b{Ej}}}EfEl}{{{b{dEn}}{Fb{{b{F`}}}}Fd}Ff}{{{b{En}}{b{{Bd{{b{F`}}}}}}}Ff}{bc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bAb}{{}Fh}{{}c{}}","D":"Ed","p":[[1,"reference",null,null,1],[0,"mut"],[5,"PlonkSpongeConstantsLegacy",7],[5,"PlonkSpongeConstantsKimchi",7],[1,"unit"],[1,"u8"],[1,"usize"],[6,"Result",243,null,1],[5,"TypeId",244],[5,"ArithmeticSpongeParams",65],[10,"Debug",245],[10,"Field",246],[17,"Err"],[10,"FromStr",247],[8,"Fp",248],[8,"Fq",249],[5,"Vec",250],[1,"slice"],[10,"Sponge",65],[5,"ArithmeticSponge",65],[10,"SpongeConstants",7],[6,"SpongeState",65],[10,"Clone",251],[10,"CanonicalSerialize",252],[10,"CanonicalDeserialize",252],[5,"PhantomData",253],[10,"Default",254],[10,"Deserializer",255],[5,"Formatter",245],[8,"Result",245],[10,"Serializer",256],[10,"FqSponge",140],[5,"DefaultFqSponge",140],[10,"SWCurveConfig",257],[5,"Affine",258],[5,"ScalarChallenge",140],[10,"PrimeField",259],[5,"CamlScalarChallenge",219],[10,"Into",260,null,1],[5,"DefaultFrSponge",140],[1,"u64"],[10,"From",260,null,1],[6,"Value",261],[10,"FromValue",261],[5,"OCamlRuntime",262],[10,"IntoValue",261],[5,"Env",263],[1,"str"],[6,"Option",264,null,1],[1,"bool"],[5,"String",265],[1,"u128"]],"r":[[0,140]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMkAGwABAAMABwAcACYAAQAqAAkANQAEADwAAABAAAQARgABAEkAHQBqAAMAcQAAAHMAAQB2AAQAfAATAJMAAACVAAAAlwAHAKAAAACiAAwAsAAAALIABQC5AAAAvAACAMIAAQDFACAA5wACAOsACAA=","P":[[19,"T"],[23,""],[25,"T"],[27,""],[29,"T"],[33,""],[35,"T"],[37,""],[39,"U"],[41,"T"],[43,"U,T"],[45,"U"],[47,""],[49,"V"],[51,"Err,Fp"],[56,""],[62,"F"],[71,"Input"],[72,"F,SC"],[73,"T"],[79,""],[80,"F"],[81,"F,SC"],[82,"T"],[85,""],[89,"F"],[90,"T"],[96,"__D,F"],[97,""],[101,"F"],[102,"T"],[105,"F,SC"],[106,""],[109,"U"],[112,""],[113,"Input"],[114,"F,SC"],[116,""],[117,"F,SC"],[118,""],[119,"F"],[120,"F,__S"],[121,""],[122,"Digest"],[123,"F,SC"],[124,""],[125,"T"],[128,"U,T"],[131,"U"],[134,""],[137,"V"],[140,""],[145,"Fq"],[146,"P,SC"],[147,"Fr"],[148,"P,SC"],[149,"G"],[150,"P,SC"],[151,"T"],[158,"Fr"],[159,"P,SC"],[160,"Fq"],[161,"P,SC"],[162,"F"],[163,"P,SC"],[164,"T"],[166,""],[168,"T"],[174,"Fr"],[175,"P,SC"],[176,"Fq"],[177,"P,SC"],[178,""],[181,"F"],[183,"T"],[184,"F,CamlF"],[185,"T"],[187,""],[190,"U"],[193,""],[195,"Fq"],[196,"P,SC"],[197,""],[199,"Fr,SC"],[200,"P,SC"],[203,"F"],[205,"T"],[207,"U,T"],[210,"U"],[213,""],[216,"V"],[220,"T"],[222,"CamlF"],[223,"T"],[224,""],[225,"T"],[227,""],[228,"CamlF"],[229,"T"],[230,"F,CamlF"],[231,"CamlF"],[232,""],[233,"U"],[234,"CamlF"],[235,""],[237,"T"],[238,"U,T"],[239,"U"],[240,""],[242,"V"]]}],["mina_signer",{"t":"IEIEPGEIEEEKPNNNNNHHNNNNNNNNCCCCMCNNNNMNPFGPPPIPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNPPPPPFPPSPPFGIPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNOFNNNNNNNNNNNNNNPSPIFGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNOONNNNNN","n":["BaseField","CompressedPubKey","CurvePoint","Keypair","MAINNET","NetworkId","PubKey","ScalarField","Schnorr","SecKey","Signature","Signer","TESTNET","borrow","borrow_mut","clone","clone_into","clone_to_uninit","create_kimchi","create_legacy","deref","deref_mut","drop","fmt","from","init","into","into_bytes","keypair","pubkey","schnorr","seckey","sign","signature","to_owned","try_from","try_into","type_id","verify","vzip","Err","Keypair","KeypairError","NonCurvePoint","Ok","PublicKey","Result","SecretKey","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","","equivalent","","","","fmt","","","","from","","","","from_bytes","from_hex","from_parts_unsafe","from_secret_key","get_address","init","","into","","public","rand","secret","source","to_bytes","to_hex","to_owned","","to_string","","try_from","","try_into","","type_id","","vzip","","AddressBase58","AddressChecksum","AddressLength","AddressRawByteLength","AddressVersion","CompressedPubKey","Err","Hex","MINA_ADDRESS_LEN","NonCurvePoint","Ok","PubKey","PubKeyError","Result","SecKey","XCoordinate","XCoordinateBytes","YCoordinateBytes","YCoordinateParity","YCoordinateParityBytes","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","deref","","","deref_mut","","","drop","","","empty","eq","","","equivalent","","","","","","fmt","","","","","from","","","from_address","","from_bytes","","from_hex","","from_point_unsafe","from_secret_key","","init","","","into","","","into_address","","into_compressed","into_point","is_odd","point","to_bytes","","to_hex","","to_owned","","","to_string","","try_from","","","try_into","","","type_id","","","vzip","","","x","Schnorr","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","sign","try_from","try_into","type_id","verify","vzip","Err","MINA_SEC_KEY_LEN","Ok","Result","SecKey","SecKeyError","SecretKeyBase58","SecretKeyBytes","SecretKeyChecksum","SecretKeyHex","SecretKeyLength","SecretKeyVersion","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","","equivalent","","","","fmt","","","from","","from_base58","from_bytes","from_hex","init","","into","","into_scalar","new","rand","scalar","to_base58","to_bytes","to_hex","to_owned","","to_string","try_from","","try_into","","type_id","","vzip","","Signature","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","","from","init","into","new","rx","s","to_owned","to_string","try_from","try_into","type_id","vzip"],"q":[[0,"mina_signer"],[40,"mina_signer::keypair"],[105,"mina_signer::pubkey"],[210,"mina_signer::schnorr"],[225,"mina_signer::seckey"],[289,"mina_signer::signature"],[315,"mina_hasher"],[316,"core::fmt"],[317,"alloc::vec"],[318,"core::result"],[319,"core::any"],[320,"alloc::string"],[321,"rand_core"],[322,"core::error"],[323,"core::option"]],"i":"````f```````000000``00000000````l`111101Bl``Bd10`00Ah1010101010101010110011001110000001010000100101010101010Bh0000`Db1`10```1111111B`D`3103103103103103103100310331100331103101010101103103101011011010310313103103103100`Df0000000000000Dh`0```Bf000000Cd10101010101010101100110100001010000000010110101010`Aj000000000000000000000000","f":"`````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}{{}{{`{{l{c}}}}}n}0{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`h}{{{b{f}}{b{dAb}}}Ad}{cc{}}{{}A`}{{}c{}}{f{{Af{j}}}}````{{{b{dl}}{b{Ah}}{b{c}}}Ajn}`{bc{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}{{{b{dl}}{b{Aj}}{b{B`}}{b{c}}}Bbn}{{}c{}}````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Bd}}}Bd}{{{b{Ah}}}Ah}{{b{b{dc}}}h{}}0{{bj}h}0{A`{{b{c}}}{}}0{A`{{b{dc}}}{}}0{A`h}0{{{b{Bd}}{b{Bd}}}Bb}{{{b{Ah}}{b{Ah}}}Bb}{{b{b{c}}}Bb{}}000{{{b{Bd}}{b{dAb}}}Ad}0{{{b{Ah}}{b{dAb}}}Ad}0{BfBd}{BhBd}{cc{}}0{{{b{{Bj{j}}}}}{{Bl{Ah}}}}{{{b{Bn}}}{{Bl{Ah}}}}{{C`Cb}Ah}{Cd{{Bl{Ah}}}}{AhCf}{{}A`}0{{}c{}}0{AhB`}{{{b{dc}}}{{Bl{Ah}}}{ChCj}}{AhCd}{{{b{Bd}}}{{Cn{{b{Cl}}}}}}{{{b{Ah}}}{{Af{j}}}}{{{b{Ah}}}Cf}{bc{}}0{bCf}0{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{bAn}0{{}c{}}0````````=```````````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Bh}}}Bh}{{{b{B`}}}B`}{{{b{D`}}}D`}{{b{b{dc}}}h{}}00{{bj}h}00{A`{{b{c}}}{}}00{A`{{b{dc}}}{}}00{A`h}00{{}D`}{{{b{Bh}}{b{Bh}}}Bb}{{{b{B`}}{b{B`}}}Bb}{{{b{D`}}{b{D`}}}Bb}{{b{b{c}}}Bb{}}00000{{{b{Bh}}{b{dAb}}}Ad}0{{{b{B`}}{b{dAb}}}Ad}0{{{b{D`}}{b{dAb}}}Ad}{cc{}}00{{{b{Bn}}}{{Db{B`}}}}{{{b{Bn}}}{{Db{D`}}}}{{{b{{Bj{j}}}}}{{Db{B`}}}}{{{b{{Bj{j}}}}}{{Db{D`}}}}32{CbB`}{Cd{{Db{B`}}}}{CdD`}{{}A`}00{{}c{}}00{{{b{B`}}}Cf}{{{b{D`}}}Cf}{{{b{B`}}}D`}{B`Cb}{D`Bb}{{{b{B`}}}{{b{Cb}}}}{{{b{B`}}}{{Af{j}}}}{{{b{D`}}}{{Af{j}}}}76{bc{}}00{bCf}0{c{{Al{e}}}{}{}}00{{}{{Al{c}}}{}}00{bAn}00{{}c{}}00{D`Dd}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`h}{cc{}}{{}A`}{{}c{}}{{{b{d{Df{c}}}}{b{Ah}}{b{c}}}Ajn}=<;{{{b{d{Df{c}}}}{b{Aj}}{b{B`}}{b{c}}}Bbn};`3``````````9988{{{b{Bf}}}Bf}{{{b{Cd}}}Cd}{{b{b{dc}}}h{}}0{{bj}h}0;;::99{{{b{Bf}}{b{Bf}}}Bb}{{{b{Cd}}{b{Cd}}}Bb}{{b{b{c}}}Bb{}}000{{{b{Bf}}{b{dAb}}}Ad}0{{{b{Cd}}{b{dAb}}}Ad}=={{{b{Bn}}}{{Dh{Cd}}}}{{{b{{Bj{j}}}}}{{Dh{Cd}}}}1>>=={CdC`}{C`Cd}{{{b{dc}}}Cd{ChCj}}{{{b{Cd}}}{{b{C`}}}}{{{b{Cd}}}Cf}{{{b{Cd}}}{{Af{j}}}}1{bc{}}0{bCf}{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{bAn}0{{}c{}}0`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Aj}}}Aj}{{b{b{dc}}}h{}}{{bj}h}{A`{{b{c}}}{}}{A`{{b{dc}}}{}}{A`h}{{{b{Aj}}{b{Aj}}}Bb}{{b{b{c}}}Bb{}}0{{{b{Aj}}{b{dAb}}}Ad}0{cc{}}{{}A`}{{}c{}}{{DdC`}Aj}{AjDd}{AjC`}{bc{}}{bCf}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}{{}c{}}","D":"Od","p":[[1,"reference",null,null,1],[0,"mut"],[6,"NetworkId",0],[1,"unit"],[1,"u8"],[10,"Signer",0],[10,"Hashable",315],[1,"usize"],[5,"Formatter",316],[8,"Result",316],[5,"Vec",317],[5,"Keypair",40],[5,"Signature",289],[6,"Result",318,null,1],[5,"TypeId",319],[5,"PubKey",105],[1,"bool"],[6,"KeypairError",40],[6,"SecKeyError",225],[6,"PubKeyError",105],[1,"slice"],[8,"Result",40],[1,"str"],[8,"ScalarField",0],[8,"CurvePoint",0],[5,"SecKey",225],[5,"String",320],[10,"RngCore",321],[10,"CryptoRng",321],[10,"Error",322],[6,"Option",323,null,1],[5,"CompressedPubKey",105],[8,"Result",105],[8,"BaseField",0],[5,"Schnorr",210],[8,"Result",225]],"r":[[1,105],[3,40],[6,105],[8,210],[9,225],[10,289]],"b":[[70,"impl-Display-for-KeypairError"],[71,"impl-Debug-for-KeypairError"],[72,"impl-Display-for-Keypair"],[73,"impl-Debug-for-Keypair"],[74,"impl-From%3CSecKeyError%3E-for-KeypairError"],[75,"impl-From%3CPubKeyError%3E-for-KeypairError"],[159,"impl-Debug-for-PubKeyError"],[160,"impl-Display-for-PubKeyError"],[161,"impl-Debug-for-PubKey"],[162,"impl-Display-for-PubKey"],[259,"impl-Display-for-SecKeyError"],[260,"impl-Debug-for-SecKeyError"],[301,"impl-Debug-for-Signature"],[302,"impl-Display-for-Signature"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMEAGgACAAIABwAAAAkAAgAOAAQAFQADABoAAAAcAAAAIwADACgAAAAxABsAVAABAFsAAABeAAsAfgAXAJcADQCxAAIAwQAQANQABADaAAAA3AAFAO4AGAAMAQEAFwEKACMBDAAxAQAANgEFAA==","P":[[13,"T"],[15,""],[16,"T"],[17,""],[18,"H"],[20,"T"],[22,""],[24,"T"],[25,""],[26,"U"],[27,""],[32,"H"],[34,"T"],[35,"U,T"],[36,"U"],[37,""],[38,"H"],[39,"V"],[48,"T"],[52,""],[54,"T"],[56,""],[58,"T"],[62,""],[66,"K"],[70,""],[76,"T"],[78,""],[85,"U"],[87,""],[93,"T"],[95,""],[97,"U,T"],[99,"U"],[101,""],[103,"V"],[113,""],[125,"T"],[131,""],[134,"T"],[137,""],[140,"T"],[146,""],[153,"K"],[159,""],[164,"T"],[167,""],[179,"U"],[182,""],[192,"T"],[195,""],[197,"U,T"],[200,"U"],[203,""],[206,"V"],[209,""],[211,"T"],[215,""],[216,"T"],[217,""],[218,"U"],[219,"H"],[220,"U,T"],[221,"U"],[222,""],[223,"H"],[224,"V"],[226,""],[237,"T"],[241,""],[243,"T"],[245,""],[247,"T"],[251,""],[255,"K"],[259,""],[262,"T"],[264,""],[269,"U"],[271,""],[278,"T"],[280,""],[281,"U,T"],[283,"U"],[285,""],[287,"V"],[290,"T"],[292,""],[293,"T"],[294,""],[295,"T"],[297,""],[299,"K"],[301,""],[303,"T"],[304,""],[305,"U"],[306,""],[309,"T"],[310,""],[311,"U,T"],[312,"U"],[313,""],[314,"V"]]}],["mvpoly",{"t":"KMHMMMMMNNMMMMMMCMCCMCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNHHNNNNNNHNNNNNHNHNNNNNNN","n":["MVPoly","add_monomial","compute_combined_cross_terms","compute_cross_terms","compute_cross_terms_scaled","degree","double","eval","from_constant","from_expr","from_variable","homogeneous_eval","is_constant","is_homogeneous","is_multilinear","modify_monomial","monomials","mul_by_scalar","pbt","prime","random","utils","Sparse","add","","","","add_monomial","borrow","borrow_mut","clone","clone_into","clone_to_uninit","compute_cross_terms","compute_cross_terms_scaled","degree","deref","deref_mut","double","drop","eq","equivalent","","eval","fmt","from","","","from_variable","homogeneous_eval","init","into","is_constant","is_homogeneous","is_multilinear","is_zero","modify_monomial","monomials","mul","mul_by_scalar","neg","","one","random","sub","","","","to_owned","try_from","try_into","type_id","vzip","zero","test_add_monomial","test_add_zero","test_can_be_printed_with_debug","test_degree_constant","test_degree_random_degree","test_double_is_add_twice","test_eval_pbt_add","test_eval_pbt_mul_by_scalar","test_eval_pbt_neg","test_eval_pbt_sub","test_evaluation_constant_polynomial","test_evaluation_zero_polynomial","test_homogeneous_eval","test_is_constant","test_is_multilinear","test_is_zero","test_mul_by_one","test_mul_by_scalar","test_mul_by_scalar_with_one","test_mul_by_scalar_with_zero","test_mul_by_zero","test_mvpoly_add_degree_pbt","test_mvpoly_mul_by_scalar_degree_pbt","test_mvpoly_mul_degree_pbt","test_mvpoly_mul_eval_pbt","test_mvpoly_mul_pbt","test_mvpoly_neg_degree_pbt","test_mvpoly_sub_degree_pbt","test_neg","test_neg_ref","test_sub_zero","Dense","add","","","","add_monomial","borrow","borrow_mut","clone","clone_into","clone_to_uninit","compute_cross_terms","compute_cross_terms_scaled","compute_normalized_indices","default","degree","deref","deref_mut","dimension","double","drop","eq","equivalent","","eval","fmt","from","","from_coeffs","from_variable","homogeneous_eval","increase_degree","index","index_mut","init","into","is_constant","is_homogeneous","is_multilinear","is_zero","iter","maximum_degree","modify_monomial","mul","mul_by_scalar","neg","","new","number_of_variables","one","random","sub","","","","to_owned","try_from","try_into","type_id","vzip","zero","PrimeNumberGenerator","borrow","borrow_mut","compute_all_two_factors_decomposition","compute_indices_nested_loop","default","deref","deref_mut","drop","from","get_first_nth_primes","get_mapping_with_primes","get_next_prime","get_nth_prime","init","into","into_iter","is_prime","","naive_prime_factors","new","next","par_bridge","try_from","try_into","type_id","vzip"],"q":[[0,"mvpoly"],[22,"mvpoly::monomials"],[74,"mvpoly::pbt"],[105,"mvpoly::prime"],[166,"mvpoly::utils"],[193,"ark_ff::fields::prime"],[194,"alloc::vec"],[195,"std::collections::hash::map"],[196,"kimchi::circuits::expr"],[197,"core::clone"],[198,"core::option"],[199,"core::convert"],[200,"rand_core"],[201,"core::fmt"],[202,"core::result"],[203,"core::any"],[204,"core::iter::traits::iterator"],[205,"rayon::iter::par_bridge"]],"i":"`d`0000000000000`0``0``Bh00000000000000000000000000000000000000000000000000````````````````````````````````C`00000000000000000000000000000000000000000000000000000000000`Cl0``000000`00000`0`0000000","f":"`{{{f{bd}}{j{h}}c}ln}{{{A`{e}}{j{c}}{j{c}}cccc}{{Ab{hc}}}n{{d{c}}}}{{{f{d}}{f{{j{c}}}}{f{{j{c}}}}cc}{{Ab{hc}}}n}{{{f{d}}{f{{j{c}}}}{f{{j{c}}}}cccc}{{Ab{hc}}}n}{{{f{d}}}h}{{{f{d}}}d}{{{f{d}}{f{{j{c}}}}}cn}{{{Af{{Ad{ce}}}}}dnAh}{{{Al{{Aj{ce}}g}}{An{h}}}dnAh{{B`{h}}}}{{{Bb{c}}{An{h}}}d{{B`{h}}}}{{{f{d}}{f{{j{c}}}}c}cn}{{{f{d}}}Bd}00;`{{{f{d}}c}dn}``{{{f{bc}}{An{h}}}dBf}``{{{f{{Bh{c}}}}{f{{Bh{c}}}}}en{}}{{{f{{Bh{c}}}}{Bh{c}}}en{}}{{{Bh{c}}{f{{Bh{c}}}}}en{}}{{{Bh{c}}{Bh{c}}}{{Bh{c}}}n}{{{f{b{Bh{c}}}}{j{h}}c}ln}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{{Bh{c}}}}}{{Bh{c}}}{Ahn}}{{f{f{bc}}}l{}}{{fBj}l}{{{f{{Bh{c}}}}{f{{j{c}}}}{f{{j{c}}}}cc}{{Ab{hc}}}n}{{{f{{Bh{c}}}}{f{{j{c}}}}{f{{j{c}}}}cccc}{{Ab{hc}}}n}{{{f{{Bh{c}}}}}hn}{h{{f{c}}}{}}{h{{f{bc}}}{}}{{{f{{Bh{c}}}}}{{Bh{c}}}n}{hl}{{{f{{Bh{c}}}}{f{{Bh{c}}}}}Bdn}{{f{f{c}}}Bd{}}0{{{f{{Bh{c}}}}{f{{j{c}}}}}cn}{{{f{{Bh{c}}}}{f{bBl}}}Bnn}{cc{}}{c{{Bh{c}}}n}{{{C`{c}}}{{Bh{c}}}n}{{{Bb{c}}{An{h}}}{{Bh{e}}}{{B`{h}}}n}{{{f{{Bh{c}}}}{f{{j{c}}}}c}cn}{{}h}{{}c{}}{{{f{{Bh{c}}}}}Bdn}000{{{f{b{Bh{c}}}}{j{h}}c}ln}{BhAb}{{{Bh{c}}{Bh{c}}}{{Bh{c}}}n}{{{f{{Bh{c}}}}c}{{Bh{c}}}n}{{{Bh{c}}}en{}}{{{f{{Bh{c}}}}}en{}}{{}{{Bh{c}}}n}{{{f{bc}}{An{h}}}{{Bh{e}}}Bfn}{{{f{{Bh{c}}}}{f{{Bh{c}}}}}en{}}{{{f{{Bh{c}}}}{Bh{c}}}en{}}{{{Bh{c}}{f{{Bh{c}}}}}en{}}{{{Bh{c}}{Bh{c}}}en{}}{fc{}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{fCd}{{}c{}}:{{}l}000000000000000000000000000000`{{{f{{C`{c}}}}{C`{c}}}{{C`{c}}}n}{{{f{{C`{c}}}}{f{{C`{c}}}}}{{C`{c}}}n}{{{C`{c}}{C`{c}}}{{C`{c}}}n}{{{C`{c}}{f{{C`{c}}}}}{{C`{c}}}n}{{{f{b{C`{c}}}}{j{h}}c}ln}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{{C`{c}}}}}{{C`{c}}}{Ahn}}{{f{f{bc}}}l{}}{{fBj}l}{{{f{{C`{c}}}}{f{{j{c}}}}{f{{j{c}}}}cc}{{Ab{hc}}}n}{{{f{{C`{c}}}}{f{{j{c}}}}{f{{j{c}}}}cccc}{{Ab{hc}}}n}{{}{{A`{h}}}}{{}{{C`{c}}}n}{{{f{{C`{c}}}}}hn}{h{{f{c}}}{}}{h{{f{bc}}}{}}{{}h}{{{f{{C`{c}}}}}{{C`{c}}}n}{hl}{{{f{{C`{c}}}}{f{{C`{c}}}}}Bdn}{{f{f{c}}}Bd{}}0{{{f{{C`{c}}}}{f{{j{c}}}}}cn}{{{f{{C`{c}}}}{f{bBl}}}Bnn}{cc{}}{c{{C`{c}}}n}{{{A`{c}}}{{C`{c}}}n}{{{Bb{c}}{An{h}}}{{C`{e}}}{{B`{h}}}n}{{{f{{C`{c}}}}{f{{j{c}}}}c}cn}:{{{f{{C`{c}}}}h}{{f{e}}}n{}}{{{f{b{C`{c}}}}h}{{f{be}}}n{}}={{}c{}}{{{f{{C`{c}}}}}Bdn}000{{{f{{C`{c}}}}}{{`{{Ch{}{{Cf{{f{c}}}}}}}}}n}{{{f{{C`{c}}}}}hn}{{{f{b{C`{c}}}}{j{h}}c}ln}{{{C`{c}}{C`{c}}}{{C`{c}}}n}{{{f{{C`{c}}}}c}{{C`{c}}}n}{{{C`{c}}}en{}}{{{f{{C`{c}}}}}en{}}{{}{{C`{c}}}n}60{{{f{bc}}{An{h}}}{{C`{e}}}Bfn}5{{{C`{c}}{f{{C`{c}}}}}{{C`{c}}}n}{{{f{{C`{c}}}}{C`{c}}}{{C`{c}}}n}{{{f{{C`{c}}}}{f{{C`{c}}}}}{{C`{c}}}n}{fc{}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{fCd}{{}c{}}9`{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{h{f{b{Ab{h{A`{{Cj{hh}}}}}}}}{f{bCl}}}{{A`{{Cj{hh}}}}}}{{{A`{h}}{An{h}}}{{A`{{A`{h}}}}}}{{}Cl}{h{{f{c}}}{}}{h{{f{bc}}}{}}{hl}{cc{}}{{{f{bCl}}h}{{A`{h}}}}{{}{{A`{h}}}}{{{f{bCl}}}h}{{{f{bCl}}h}h}{{}h}{{}c{}}{{}c{}}{hBd}{{{f{bCl}}h}Bd}{{h{f{bCl}}}{{A`{{Cj{hh}}}}}}>{{{f{bCl}}}{{An{c}}}{}}{{}{{Cn{c}}}{}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{fCd}{{}c{}}","D":"Eb","p":[[0,"mut"],[10,"MVPoly",0],[1,"reference",null,null,1],[1,"usize"],[1,"array"],[1,"unit"],[10,"PrimeField",193],[5,"Vec",194],[5,"HashMap",195],[6,"ConstantExprInner",196],[6,"Operations",196],[10,"Clone",197],[8,"ConstantExpr",196],[8,"Expr",196],[6,"Option",198,null,1],[10,"Into",199,null,1],[5,"Variable",196],[1,"bool"],[10,"RngCore",200],[5,"Sparse",22],[1,"u8"],[5,"Formatter",201],[8,"Result",201],[5,"Dense",105],[6,"Result",202,null,1],[5,"TypeId",203],[17,"Item"],[10,"Iterator",204],[1,"tuple",null,null,1],[5,"PrimeNumberGenerator",166],[5,"IterBridge",205]],"r":[],"b":[[23,"impl-Add%3C%26Sparse%3CF,+N,+D%3E%3E-for-%26Sparse%3CF,+N,+D%3E"],[24,"impl-Add%3CSparse%3CF,+N,+D%3E%3E-for-%26Sparse%3CF,+N,+D%3E"],[25,"impl-Add%3C%26Sparse%3CF,+N,+D%3E%3E-for-Sparse%3CF,+N,+D%3E"],[26,"impl-Add-for-Sparse%3CF,+N,+D%3E"],[46,"impl-From%3CF%3E-for-Sparse%3CF,+N,+D%3E"],[47,"impl-From%3CDense%3CF,+N,+D%3E%3E-for-Sparse%3CF,+N,+D%3E"],[60,"impl-Neg-for-Sparse%3CF,+N,+D%3E"],[61,"impl-Neg-for-%26Sparse%3CF,+N,+D%3E"],[64,"impl-Sub%3C%26Sparse%3CF,+N,+D%3E%3E-for-%26Sparse%3CF,+N,+D%3E"],[65,"impl-Sub%3CSparse%3CF,+N,+D%3E%3E-for-%26Sparse%3CF,+N,+D%3E"],[66,"impl-Sub%3C%26Sparse%3CF,+N,+D%3E%3E-for-Sparse%3CF,+N,+D%3E"],[67,"impl-Sub-for-Sparse%3CF,+N,+D%3E"],[106,"impl-Add%3CDense%3CF,+N,+D%3E%3E-for-%26Dense%3CF,+N,+D%3E"],[107,"impl-Add%3C%26Dense%3CF,+N,+D%3E%3E-for-%26Dense%3CF,+N,+D%3E"],[108,"impl-Add-for-Dense%3CF,+N,+D%3E"],[109,"impl-Add%3C%26Dense%3CF,+N,+D%3E%3E-for-Dense%3CF,+N,+D%3E"],[150,"impl-Neg-for-Dense%3CF,+N,+D%3E"],[151,"impl-Neg-for-%26Dense%3CF,+N,+D%3E"],[156,"impl-Sub-for-Dense%3CF,+N,+D%3E"],[157,"impl-Sub%3C%26Dense%3CF,+N,+D%3E%3E-for-Dense%3CF,+N,+D%3E"],[158,"impl-Sub%3CDense%3CF,+N,+D%3E%3E-for-%26Dense%3CF,+N,+D%3E"],[159,"impl-Sub%3C%26Dense%3CF,+N,+D%3E%3E-for-%26Dense%3CF,+N,+D%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJgAFgAHAAAACQAAAA0AAAARAAEAGAALACUABgAtAAAALwAEADUACgBBACgAawALAHgAAAB6AAcAgwAAAIUABwCOAA0AnQAMAKwAAwCxAAAAtQAAALcAAAC7AAYA","P":[[1,"F"],[2,"F,T"],[3,"F"],[5,""],[7,"F"],[8,"F,ChallengeTerm"],[9,"F,ChallengeTerm,Column"],[10,"Column"],[11,"F"],[12,""],[15,"F"],[20,"RNG"],[23,"F,Add::Output"],[26,"F"],[28,"T"],[30,"F"],[31,"T"],[32,""],[33,"F"],[36,"T"],[38,"F"],[39,""],[40,"F"],[41,"K"],[43,"F"],[45,"T"],[46,"F"],[48,"Column,F"],[49,"F"],[50,""],[51,"U"],[52,"F"],[57,""],[58,"F"],[60,"F,Neg::Output"],[62,"F"],[63,"RNG,F"],[64,"F,Sub::Output"],[68,"T"],[69,"U,T"],[70,"U"],[71,""],[72,"V"],[73,"F"],[74,""],[106,"F"],[111,"T"],[113,"F"],[114,"T"],[115,""],[116,"F"],[118,""],[119,"F"],[121,"T"],[123,""],[124,"F"],[125,""],[126,"F"],[127,"K"],[129,"F"],[131,"T"],[132,"F"],[134,"Column,F"],[135,"F"],[137,"F,Index::Output"],[139,""],[140,"U"],[141,"F"],[150,"F,Neg::Output"],[152,"F"],[155,"RNG,F"],[156,"F"],[160,"T"],[161,"U,T"],[162,"U"],[163,""],[164,"V"],[165,"F"],[167,"T"],[169,""],[172,"T"],[174,""],[175,"T"],[176,""],[181,"U"],[182,"I"],[183,""],[187,"Iterator::Item"],[188,"T"],[189,"U,T"],[190,"U"],[191,""],[192,"V"]]}],["o1_utils",{"t":"EEEEEEEEEECCCCQQCCCCCCCCCCCFNNNNNNNNNNNNNNNHHHKMMKMMMFNNONNNNNNNNNNNONNNNNFNNNNNNNNNNNNNOONNNNNKMMMMKMMMMKPPPPKGPPKIKMNNNNNNNNNNNNNNNMMMMMHNHNNHHNNNMMMMNNNNMMNNFKNNNNNNNNNNNNNNNNNNNNONNNNNNMNMNMNNNNKTNPFGGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNCNNHHNNNNNNNNHHH","n":["BigUintFieldHelpers","BigUintHelpers","BitwiseOps","ChunkedEvaluations","ExtendedDensePolynomial","ExtendedEvaluations","FieldHelpers","ForeignElement","RandomField","Two","adjacent_pairs","array","biguint_helpers","bitwise_operations","box_array","box_array2","chunked_evaluations","chunked_polynomial","dense_polynomial","evaluations","field_helpers","foreign_field","hasher","lazy_cache","math","serialization","tests","AdjacentPairs","borrow","borrow_mut","deref","deref_mut","drop","from","","init","into","into_iter","next","try_from","try_into","type_id","vzip","vec_to_boxed_array","vec_to_boxed_array2","vec_to_boxed_array3","BigUintHelpers","bitlen","from_hex","BitwiseOps","bitwise_and","bitwise_not","bitwise_xor","ChunkedEvaluations","borrow","borrow_mut","chunks","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","from","init","into","serialize","size","to_owned","try_from","try_into","type_id","vzip","ChunkedPolynomial","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","evaluate_chunks","from","init","into","linearize","polys","size","to_owned","try_from","try_into","type_id","vzip","ExtendedDensePolynomial","eval_polynomial","scale","shiftr","to_chunked_polynomial","ExtendedEvaluations","pow","scale","shift","square","BigUintFieldHelpers","DecodeHex","DeserializeBits","DeserializeBytes","Err","FieldHelpers","FieldHelpersError","FromBigToField","Ok","RandomField","Result","Two","bits_to_field","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","","from","from_biguint","from_bits","from_bytes","from_hex","gen","gen_field_with_bits","i32_to_field","init","inner_prod","into","modulus_biguint","pows","product","size_in_bytes","to_bigint_positive","to_biguint","to_bits","to_bytes","to_field","to_hex","to_owned","to_string","try_from","try_into","two","two_pow","type_id","vzip","ForeignElement","ForeignFieldHelpers","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","from","from_be","from_biguint","from_field","index","index_mut","init","into","limbs","neg","new","to_biguint","to_owned","try_from","try_into","two_to_2limb","","two_to_3limb","","two_to_limb","","type_id","vzip","zero","CryptoDigest","PREFIX","digest","Inner","LazyCache","LazyCacheError","LazyCacheErrorOr","LockPoisoned","MissingFunctionOrInitializedTwice","Outer","UninitializedCache","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","","deref_mut","","","deserialize","drop","","","eq","","fmt","","","from","","","get","init","","","into","","","new","preinit","serialize","to_owned","try_from","","","try_get_or_err","try_into","","","type_id","","","vzip","","","ceil_log2","div_ceil","SerdeAs","SerdeAsUnchecked","borrow","","borrow_mut","","deref","","deref_mut","","deserialize_as","","drop","","from","","init","","into","","ser","serialize_as","","test_generic_serialization_regression_canonical","test_generic_serialization_regression_serde","try_from","","try_into","","type_id","","vzip","","deserialize","serialize","make_test_rng"],"q":[[0,"o1_utils"],[27,"o1_utils::adjacent_pairs"],[43,"o1_utils::array"],[46,"o1_utils::biguint_helpers"],[49,"o1_utils::bitwise_operations"],[53,"o1_utils::chunked_evaluations"],[74,"o1_utils::chunked_polynomial"],[95,"o1_utils::dense_polynomial"],[100,"o1_utils::evaluations"],[105,"o1_utils::field_helpers"],[160,"o1_utils::foreign_field"],[198,"o1_utils::hasher"],[201,"o1_utils::lazy_cache"],[261,"o1_utils::math"],[263,"o1_utils::serialization"],[296,"o1_utils::serialization::ser"],[298,"o1_utils::tests"],[299,"core::iter::traits::iterator"],[300,"core::iter::traits::collect"],[301,"core::option"],[302,"core::marker"],[303,"core::result"],[304,"core::any"],[305,"alloc::vec"],[306,"alloc::boxed"],[307,"core::clone"],[308,"ark_ff::fields::prime"],[309,"serde::de"],[310,"serde::ser"],[311,"ark_ff::fields"],[312,"ark_poly::polynomial::univariate::dense"],[313,"ark_ff::fields::fft_friendly"],[314,"core::fmt"],[315,"num_bigint::biguint"],[316,"num_bigint::bigint"],[317,"alloc::string"],[318,"core::cmp"],[319,"core::ops::function"],[320,"ark_serialize"],[321,"rand::rngs::std"]],"i":"````````````````````````````j00000000000000````Bf0`Gn00`Bj0000000000000000000`Cd0000000000000000000`Cl000`Cn000`Df00Dd``10```Db222222222222220000E`0`3`31``11111Ef24444H`055``El00000000000000000000000000Hb10101111`F`0Fl```Fb010Fd120121110012012001212012012001201200010120012012012````HdHf1010101010101010`10``10101010```","f":"````````````````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{f{{b{c}}}{}}{f{{b{dc}}}{}}{fh}{cc{}}{g{{j{ce}}}{}{{n{}{{l{c}}}}}{{Ab{}{{l{c}}{A`{e}}}}}}{{}f}{{}c{}}{{}c{}}{{{b{d{j{ce}}}}}{{Af{{Ad{cc}}}}}Ah{{n{}{{l{c}}}}}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}{{}c{}}{{{An{c}}}{{Bb{{B`{c}}}}}{}}{{{An{{An{c}}}}}{{Bb{{B`{{B`{c}}}}}}}Bd}{{{An{{An{{An{c}}}}}}}{{Bb{{B`{{B`{{B`{c}}}}}}}}}Bd}`{{{b{Bf}}}f}{{{b{Bh}}}Bf}`{{{b{c}}{b{c}}f}c{}}{{{b{c}}{Af{f}}}c{}}{{{b{c}}{b{c}}}c{}}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{BjAn}{{{b{{Bj{c}}}}}{{Bj{c}}}{BlBd}}{{b{b{dc}}}h{}}{{bBn}h}{f{{b{c}}}{}}{f{{b{dc}}}{}}{c{{Aj{{Bj{e}}}}}C`Bl}{fh}{cc{}}{{}f}{{}c{}}{{{b{{Bj{c}}}}e}AjBlCb}{Bjf}{bc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}{{}c{}}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{Cd{c}}}}}{{Cd{c}}}{BdCf}}{{b{b{dc}}}h{}}{{bBn}h}{f{{b{c}}}{}}{f{{b{dc}}}{}}{fh}{{{b{{Cd{c}}}}c}{{An{c}}}Cf}{cc{}}{{}f}{{}c{}}{{{b{{Cd{c}}}}c}{{Ch{c}}}Cf}{CdAn}{Cdf}{bc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}{{}c{}}`{{{b{{Cj{c}}}}c}cCf}{{{b{Cl}}c}ClCf}{{{b{Cl}}f}Cl}{{{b{Cl}}ff}{{Cd{c}}}Cf}`{{{b{Cn}}f}Cn}{{{b{Cn}}c}CnD`}1{{{b{Cn}}}Cn}````````````{{{b{Db}}ff}{{Dd{c}}}{}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Df}}}Df}{{b{b{dc}}}h{}}{{bBn}h}{f{{b{c}}}{}}{f{{b{dc}}}{}}{fh}{{{b{Df}}{b{Df}}}Dh}{{b{b{c}}}Dh{}}0{{{b{Df}}{b{dDj}}}Dl}0{cc{}}{{{b{Dn}}}{{Dd{c}}}Bl}{{{b{{Cj{Dh}}}}}{{Dd{c}}}{}}{{{b{{Cj{Bn}}}}}{{Dd{c}}}{}}{{{b{Bh}}}{{Dd{c}}}{}}{{{b{dE`}}{Af{c}}{Af{f}}}c{}}{{{b{dE`}}f}c{}}{Ebc{}}{{}f}{{{b{{Cj{c}}}}{b{{Cj{c}}}}}cCf}{{}c{}}{{}Dn}{{fc}{{An{c}}}Cf}{ecCf{{n{}{{l{c}}}}}}5{{{b{Db}}}Ed}{{{b{Db}}}Dn}{{{b{Db}}}{{An{Dh}}}}{{{b{Db}}}{{An{Bn}}}}{Ef{{Dd{c}}}Bl}{{{b{Db}}}Eh}{bc{}}{bEh}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{{}c{}}{Ejc{}}{bAl}{{}c{}}``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{El{c}}}}}{{El{c}}}{BdCf}}{{b{b{dc}}}h{}}{{bBn}h}{f{{b{c}}}{}}{f{{b{dc}}}{}}{fh}{{{b{{El{c}}}}{b{{El{c}}}}}Dh{EnCf}}{{b{b{c}}}Dh{}}0{{{b{{El{c}}}}{b{dDj}}}DlCf}{cc{}}{{{b{{Cj{Bn}}}}}{{El{c}}}Cf}{Dn{{El{c}}}Cf}{c{{El{c}}}Bl}{{{b{{El{c}}}}f}{{b{e}}}Cf{}}{{{b{d{El{c}}}}f}{{b{de}}}Cf{}}{{}f}{{}c{}}{ElB`}{{{b{{El{c}}}}{b{Dn}}}{{El{c}}}Cf}{{{B`{c}}}{{El{c}}}Cf}{{{b{{El{c}}}}}DnCf}{bc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{{}c{}}{{}cCf}1010{bAl}{{}c{}}{{}{{El{c}}}Cf}``{{{b{F`}}}{{B`{Bn}}}}````````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Fb}}}Fb}{{b{b{dc}}}h{}}{{bBn}h}{{{b{{Fd{c}}}}}{{b{e}}}{}{}}{f{{b{c}}}{}}00{f{{b{dc}}}{}}00{c{{Aj{{Fd{e}}}}}C`{FfFhFj}}{fh}00{{{b{Fb}}{b{Fb}}}Dh}{{{b{{Fl{c}}}}{b{{Fl{c}}}}}DhEn}{{{b{{Fd{c}}}}{b{dDj}}}DlFn}{{{b{Fb}}{b{dDj}}}Dl}{{{b{{Fl{c}}}}{b{dDj}}}DlFn}{cc{}}00{{{b{{Fd{c}}}}}{{b{c}}}{}}{{}f}00{{}c{}}00{e{{Fd{c}}}{}{{Gb{}{{G`{c}}}}FhFj}}{c{{Fd{c}}}{}}{{{b{{Fd{c}}}}e}Aj{GdFhFj}Cb}{bc{}}{c{{Aj{e}}}{}{}}00{{{b{{Fd{{Aj{ce}}}}}}}{{Aj{{b{c}}{Fl{e}}}}}{}Bd}{{}{{Aj{c}}}{}}00{bAl}00{{}c{}}00{ff}{{ff}f}``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{f{{b{c}}}{}}0{f{{b{dc}}}{}}0{c{{Aj{e}}}C`Gf}0{fh}0{cc{}}0{{}f}0{{}c{}}0`{{{b{c}}e}AjGhCb}0{{c{An{Bn}}}h{GhGfEnFn}}{{c{An{Bn}}}h{GdGjEnFn}}{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bAl}0{{}c{}}0;{{ce}AjGhCb}{{{Af{{B`{Bn}}}}}Gl}","D":"Oh","p":[[1,"reference",null,null,1],[0,"mut"],[1,"usize"],[1,"unit"],[5,"AdjacentPairs",27],[17,"Item"],[10,"Iterator",299],[17,"IntoIter"],[10,"IntoIterator",300],[1,"tuple",null,null,1],[6,"Option",301,null,1],[10,"Copy",302],[6,"Result",303,null,1],[5,"TypeId",304],[5,"Vec",305],[1,"array"],[5,"Box",306,null,1],[10,"Clone",307],[10,"BigUintHelpers",46],[1,"str"],[5,"ChunkedEvaluations",53],[10,"PrimeField",308],[1,"u8"],[10,"Deserializer",309],[10,"Serializer",310],[5,"ChunkedPolynomial",74],[10,"Field",311],[5,"DensePolynomial",312],[1,"slice"],[10,"ExtendedDensePolynomial",95],[10,"ExtendedEvaluations",100],[10,"FftField",313],[10,"FieldHelpers",105],[8,"Result",105],[6,"FieldHelpersError",105],[1,"bool"],[5,"Formatter",314],[8,"Result",314],[5,"BigUint",315],[10,"RandomField",105],[1,"i32"],[5,"BigInt",316],[10,"BigUintFieldHelpers",105],[5,"String",317],[1,"u64"],[5,"ForeignElement",160],[10,"PartialEq",318],[10,"CryptoDigest",198],[6,"LazyCacheError",201],[5,"LazyCache",201],[10,"DeserializeOwned",309],[10,"Send",302],[10,"Sync",302],[6,"LazyCacheErrorOr",201],[10,"Debug",314],[17,"Output"],[10,"FnOnce",319],[10,"Serialize",310],[10,"CanonicalDeserialize",320],[10,"CanonicalSerialize",320],[10,"Deserialize",309],[5,"StdRng",321],[10,"BitwiseOps",49],[10,"Two",105],[10,"ForeignFieldHelpers",160],[5,"SerdeAs",263],[5,"SerdeAsUnchecked",263]],"r":[[0,105],[1,46],[2,49],[3,53],[4,95],[5,100],[6,105],[7,160],[8,105],[9,105]],"b":[[129,"impl-Display-for-FieldHelpersError"],[130,"impl-Debug-for-FieldHelpersError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAK8AIQABAAkAHQAEACMAAQAmAAUANwABADoABgBCAAAARAAAAEYABABMAAcAVgAAAFsABABrAAIAcQAAAHcADACMAAAAmQADAJ8AAQCjAAsAswACALsAAgC/AAAAwQAAAMMAAgDKAAAAzAAeAO4AAwD1AAAA9wAOAAoBCwAYAQEAHQEBACEBBwA=","P":[[28,"T"],[32,""],[33,"T"],[34,"A,I,T"],[35,""],[36,"U"],[37,"I"],[38,"A,I"],[39,"U,T"],[40,"U"],[41,""],[42,"V"],[43,"T"],[47,""],[50,"Rhs"],[54,"T"],[56,""],[57,"F"],[58,"T"],[59,""],[60,"T"],[62,"__D,F"],[63,""],[64,"T"],[65,""],[66,"U"],[67,"F,__S"],[68,""],[69,"T"],[70,"U,T"],[71,"U"],[72,""],[73,"V"],[75,"T"],[77,"F"],[78,"T"],[79,""],[80,"T"],[82,""],[83,"F"],[84,"T"],[85,""],[86,"U"],[87,"F"],[88,""],[90,"T"],[91,"U,T"],[92,"U"],[93,""],[94,"V"],[96,"F"],[98,""],[99,"F"],[101,""],[102,"F"],[103,""],[117,"F"],[118,"T"],[120,""],[121,"T"],[122,""],[123,"T"],[125,""],[127,"K"],[129,""],[131,"T"],[132,"F"],[139,""],[140,"F"],[141,"U"],[142,""],[143,"F"],[145,""],[150,"F"],[151,""],[152,"T"],[153,""],[154,"U,T"],[155,"U"],[156,"F"],[158,""],[159,"V"],[162,"T"],[164,"F"],[165,"T"],[166,""],[167,"T"],[169,""],[170,"F"],[171,"K"],[173,"F"],[174,"T"],[175,"F"],[178,"F,Index::Output"],[180,""],[181,"U"],[182,""],[183,"F"],[186,"T"],[187,"U,T"],[188,"U"],[189,"F"],[195,""],[196,"V"],[197,"F"],[200,""],[209,"T"],[215,""],[216,"T"],[217,""],[218,"T,Deref::Target"],[219,"T"],[225,"D,T"],[226,""],[230,"E"],[231,"T"],[232,""],[233,"E"],[234,"T"],[238,""],[241,"U"],[244,"T,F"],[245,"T"],[246,"T,S"],[247,"T"],[248,"U,T"],[251,"T,E"],[252,"U"],[255,""],[258,"V"],[261,""],[265,"T"],[273,"D,T"],[275,""],[277,"T"],[279,""],[281,"U"],[284,"T,S"],[286,"T"],[288,"U,T"],[290,"U"],[292,""],[294,"V"],[296,"D,T"],[297,"S"],[298,""]]}],["o1vm",{"t":"PPPPIPPPEEPPCCCCCCCCCCPPPSSFFFPSSSSSFFFFPFFGFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNONNNNNNNNNNNNOOOOOOOOOOOOOOOONNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGNNNNCNNNNNNNNNNNNNNNNNNNNNNGPFFPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOOONNNNNNNNNNNNNNNNNNNNNNNNONNNNGPPNNNNNNNNHHNNNNCCCPPPPEPPPGPGPPPPPPPEPEPPPPNNNNNNNNNNCCNNNNNNCNNNNNNNNNNCNNCNNHHNNNNNNNNNNCPGFPPPGPPPIPPSSSPPPPPPPPPPPPPPPPPPPGFPPGFPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNONNNNNNNNONNNNNNNFNNNNNONNNNNNNNNNNNONNNNNNONNKKKNNNNNNNNNNNNNNNNMNNNKKRMNNNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNOONNNNNNNOEEESESCCCCCGPISSSSSPPPNNNNNNONNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPSSSSSSSPGFGFKPGFPPPPPPPPPPPPPPPPPPPPPPPPPRPGFSSSSSSSPPPPPPPPPPPPPPPPPPPPPPPPPPPPPRPPNNNMMMMMMMNNNMNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMCNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNMNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMHHHHHNNNNNNNNNNNNNMNNNNNNNNNNNNNMMMNNNNNNNNMNNNNMNNNNNNNNMMNNMMNNNNNNMMMMMNNMMMNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMFNNNNNNNNNNNNNNNNNONNOOOONONNNNNSSSSSSSSSFNNNNNONNNNNNNOOONNNNNOOOONNNNNNFFSSSSSSSFNNNNNNNONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNONNNNOOOOOOOOOONNNNNNNNOOOOONNNNOOONNNNONNNOOOOOONNNNONNONNNNNNNNNNNNNNNNNNNNNNSSSSSSCCCCCPPPGPIPPPPPPPPPNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNPPPPPPPPPPPPPPPGFPGFKPPPPPPPPGFPPPPPPPRGFPPPGFPGFPPPPPPPPPPPPPPPGFPPGFGFPPRPPNNNMMMMMMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNMMMMMMMMNNNNNNNNNNNNNNNNNNMNNNNNNNNNMNNNNNNNNNNNNNNNNNNMMNNMMNNNNNMMMNNMMMNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMPPPPPPPPPPPPSPSSSPGFPPPPPPPPPPPPPPPPPPPPPPNNNNNNNONNNNNNNNNNNOONNNNNNNONNNNNNNNNNFSSSSSSSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNONNOOOONNNNNNNNNNNNNNNNOONNNNOOOOONNNNNNNNNNNNNNNNNNNPPPGPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSCCCCCCCCFPPPGPPNNNNONNNNONNNNONNNNNNNNHNNNNNNNNNNONNNNNNNNNNOPPFPPPPFPIFPPPGFGFFPPFPPPOOOOONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONOONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNOONNONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOFNNNNNNNNNONOONNNNHHFFFNNNNNNONNNNNNNNNOONNNNNNNONNNONOOOOOONNNNNNNNNNNNOOPGNNNNNNNNNNNNNHNNNNNNHFFKFFNNNNNNNNONHNNNNNNNNNNNNNNNNMNNMNNOONNNNNNNNOOONNNNNNNNNNNNNNNNNOGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHH","n":["Add","Atom","Cache","Double","E","IfFeature","Mul","Pow","RAMLookup","RAMLookupMode","Square","Sub","cannon","cli","elf_loader","interpreters","lookups","pickles","preimage_oracle","ramlookup","test_preimage_read","utils","Always","Every","Exactly","HINT_CLIENT_READ_FD","HINT_CLIENT_WRITE_FD","Hint","HostProgram","Meta","Never","PAGE_ADDRESS_MASK","PAGE_ADDRESS_SIZE","PAGE_SIZE","PREIMAGE_CLIENT_READ_FD","PREIMAGE_CLIENT_WRITE_FD","Page","ParsePreimageKeyError","Preimage","PreimageKey","Range","Start","State","StepFrequency","Symbol","VmConfiguration","arguments","borrow","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","create","","","data","default","deref","","","","","","","","","","","","deref_mut","","","","","","","","","","","","deserialize","","","","drop","","","","","","","","","","","","eq","","","","","equivalent","","exit","exited","find_address_symbol","fmt","","","","","","","","","","","from","","","","","","","","","","","","","from_str","","get","","halt_address","heap","hi","host","index","info_at","init","","","","","","","","","","","","input_state_file","into","","","","","","","","","","","","last_hint","lo","memory","metadata_file","name","","next_pc","output_state_file","pc","pprof_cpu","preimage","preimage_key","preimage_offset","proof_at","proof_fmt","registers","serialize","","size","snapshot_fmt","snapshot_state_at","start","step","","stop_at","symbols","time","to_owned","","","","","","to_string","try_from","","","","","","","","","","","","try_into","","","","","","","","","","","","type_id","","","","","","","","","","","","vzip","","","","","","","","","","","","Cannon","Commands","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","cannon","clone","clone_into","clone_to_uninit","command","command_for_update","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Cannon","GenStateJson","GenStateJsonArgs","MipsVmConfigurationArgs","Run","RunArgs","TestPreimageRead","augment_args","","","augment_args_for_update","","","augment_subcommands","augment_subcommands_for_update","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","command","","","command_for_update","","","deref","","","","deref_mut","","","","drop","","","","fmt","","","","from","","","","from_arg_matches","","","","from_arg_matches_mut","","","","group_id","","","has_subcommand","init","","","","input","into","","","","output","preimage_db_dir","srs_cache","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","update_from_arg_matches","","","","update_from_arg_matches_mut","","","","vm_cfg","vzip","","","","Architecture","Mips","RiscV32","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","make_state","parse_elf","try_from","try_into","type_id","vzip","keccak","mips","riscv32im","AbsorbRootZero","AbsorbShifts","AbsorbXor","AbsorbZeroPad","Absorbs","BooleanityPadding","ChiShiftsB","ChiShiftsSum","Constraint","","Error","IotaStateG","Lookup","PadAtEnd","PaddingSuffix","PiRhoRotatedE","PiRhoShiftsE","PiRhoWordE","Sponges","SqueezeShifts","Steps","ThetaQuotientC","ThetaRotatedC","ThetaShiftsC","ThetaWordC","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column","constraints","deref","","deref_mut","","drop","","environment","eq","","equivalent","","","","fmt","","from","","helpers","init","","interpreter","into","","pad_blocks","standardize","to_owned","","try_from","","try_into","","type_id","","vzip","","witness","Absorb","Absorbs","AbsorbsIter","BlockIndex","ChiShiftsB","ChiShiftsSum","ColumnAlias","First","HashIndex","Input","KeccakWitness","Last","Middle","N_ZKVM_KECCAK_COLS","N_ZKVM_KECCAK_REL_COLS","N_ZKVM_KECCAK_SEL_COLS","Only","Output","PadBytesFlags","PadLength","PadSuffix","PiRhoDenseE","PiRhoDenseRotE","PiRhoExpandRotE","PiRhoQuotientE","PiRhoRemainderE","PiRhoShiftsE","Round","RoundConstants","RoundNumber","Sponge","SpongeBytes","SpongeNewState","SpongeShifts","SpongeZeros","Sponges","SpongesIter","Squeeze","StepIndex","Steps","StepsIter","ThetaDenseC","ThetaDenseRotC","ThetaExpandRotC","ThetaQuotientC","ThetaRemainderC","ThetaShiftsC","TwoToPad","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","","clone_into","","","","","","","clone_to_uninit","","","","","","","cmp","","","","cols","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","eq","","","","equivalent","","","","","","","","fmt","","","","","","","from","","","","","","","hash","","","","index","","index_mut","","init","","","","","","","into","","","","","","","into_iter","","","","iter","","","","len","","","","next","","","next_back","","","nth","","","par_bridge","","","partial_cmp","","","","size_hint","","","to_column","","to_owned","","","","","","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","Env","add_lookup","borrow","borrow_mut","clone","clone_into","clone_to_uninit","constant","constant_field","constrain","constraints","default","deref","deref_mut","drop","fmt","from","init","into","lookups","to_owned","try_from","try_into","two_pow","type_id","variable","vzip","KeccakEnv","borrow","borrow_mut","clone","clone_into","clone_to_uninit","constraints_env","default","deref","deref_mut","drop","fmt","from","init","into","new","null_state","selector","step","","to_owned","try_from","try_into","type_id","update_step","vzip","witness_env","write_column","write_column_field","ArithHelpers","BoolHelpers","LogupHelpers","either_zero","is_boolean","is_nonzero","is_one","is_zero","lookup_byte","lookup_pad","lookup_rc16","lookup_reset","lookup_round_constants","lookup_sparse","not","one","or","read_syscall","two","two_pow","write_syscall","xor","zero","Interpreter","KeccakInterpreter","Variable","add_lookup","block_in_padding","block_index","bytes_block","constant","constant_field","constrain","constrain_absorb","constrain_booleanity","constrain_chi","constrain_flags","constrain_iota","constrain_padding","constrain_pirho","constrain_round","constrain_sponge","constrain_squeeze","constrain_theta","constraints","dense_c","dense_e","dense_rot_c","dense_rot_e","expand_rot_c","expand_rot_e","flags_block","from_quarters","from_shifts","hash_index","in_padding","input","input_of_step","is_absorb","is_pad","is_root","is_round","is_sponge","is_squeeze","lookup_steps","lookup_syscall_hash","lookup_syscall_preimage","lookups","lookups_round_chi","lookups_round_iota","lookups_round_pirho","lookups_round_theta","lookups_sponge","mode_absorb","mode_pad","mode_root","mode_rootpad","mode_round","mode_squeeze","new_state","old_state","output","output_of_step","pad_bytes_flags","pad_length","pad_suffix","quotient_c","quotient_e","remainder_c","remainder_e","round","round_constants","shifts_b","shifts_c","shifts_e","shifts_sum","sponge_byte","sponge_bytes","sponge_shifts","sponge_zeros","state_a","state_g","step_index","two_to_pad","variable","vec_dense_c","vec_dense_e","vec_dense_rot_c","vec_dense_rot_e","vec_expand_rot_c","vec_expand_rot_e","vec_quotient_c","vec_quotient_e","vec_remainder_c","vec_remainder_e","vec_shifts_b","vec_shifts_c","vec_shifts_e","vec_shifts_sum","vec_sponge_shifts","xor_state","Env","add_lookup","borrow","borrow_mut","clone","clone_into","clone_to_uninit","constant","constant_field","constrain","default","deref","deref_mut","drop","fmt","from","init","into","multiplicities","tables","to_owned","try_from","try_into","two_pow","type_id","variable","vzip","witness","ITypeInstruction","Instruction","JTypeInstruction","MAXIMUM_DEGREE_CONSTRAINTS","RTypeInstruction","TOTAL_NUMBER_OF_CONSTRAINTS","column","constraints","interpreter","registers","witness","ColumnAlias","InstructionCounter","MIPSWitness","N_MIPS_COLS","N_MIPS_REL_COLS","N_MIPS_SEL_COLS","SCRATCH_SIZE","SCRATCH_SIZE_INVERSE","ScratchState","ScratchStateInverse","Selector","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","cols","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","index","","index_mut","","init","into","partial_cmp","to_column","to_owned","try_from","try_into","type_id","vzip","Env","activate_selector","add_constraint","add_lookup","add_witness","alloc_scratch","alloc_scratch_inverse","and_witness","bitmask","borrow","borrow_mut","check_boolean","check_equal","check_is_zero","constant","copy","count_leading_ones","count_leading_zeros","default","deref","deref_mut","divmod","divmod_signed","drop","equal","fetch_memory","fetch_memory_access","fetch_register","fetch_register_access","from","get_all_constraints","get_constraints","get_lookups","get_selector","get_selector_constraints","increase_instruction_counter","init","instruction_counter","into","is_zero","mul_hi_lo","mul_hi_lo_signed","mul_signed_witness","nor_witness","or_witness","push_memory","push_memory_access","push_register_access_if","push_register_if","report_exit","request_hint_write","request_preimage_write","reset","set_halted","shift_left","shift_right","shift_right_arithmetic","sub_witness","test_less_than","test_less_than_signed","test_zero","try_from","try_into","type_id","variable","vzip","xor_witness","Add","AddImmediate","AddImmediateUnsigned","AddUnsigned","And","AndImmediate","BranchEq","BranchGeqZero","BranchGtZero","BranchLeqZero","BranchLtZero","BranchNeq","CountLeadingOnes","CountLeadingZeros","Div","DivUnsigned","FD_HINT_READ","FD_HINT_WRITE","FD_PREIMAGE_READ","FD_PREIMAGE_WRITE","FD_STDERR","FD_STDIN","FD_STDOUT","IType","ITypeInstruction","ITypeInstructionIter","Instruction","InstructionIter","InterpreterEnv","JType","JTypeInstruction","JTypeInstructionIter","Jump","JumpAndLink","JumpAndLinkRegister","JumpRegister","Load16","Load16Unsigned","Load32","Load8","Load8Unsigned","LoadUpperImmediate","LoadWordLeft","LoadWordRight","MoveFromHi","MoveFromLo","MoveNonZero","MoveToHi","MoveToLo","MoveZero","Multiply","MultiplyToRegister","MultiplyUnsigned","NoOp","Nor","Or","OrImmediate","Position","RType","RTypeInstruction","RTypeInstructionIter","SYSCALL_BRK","SYSCALL_CLONE","SYSCALL_EXIT_GROUP","SYSCALL_FCNTL","SYSCALL_MMAP","SYSCALL_READ","SYSCALL_WRITE","SetLessThan","SetLessThanImmediate","SetLessThanImmediateUnsigned","SetLessThanUnsigned","ShiftLeftLogical","ShiftLeftLogicalVariable","ShiftRightArithmetic","ShiftRightArithmeticVariable","ShiftRightLogical","ShiftRightLogicalVariable","Store16","Store32","Store32Conditional","Store8","StoreWordLeft","StoreWordRight","Sub","SubUnsigned","Sync","SyscallExitGroup","SyscallFcntl","SyscallMmap","SyscallOther","SyscallReadHint","SyscallReadOther","SyscallReadPreimage","SyscallWriteHint","SyscallWriteOther","SyscallWritePreimage","Variable","Xor","XorImmediate","access_memory","access_register","access_register_if","activate_selector","add_constraint","add_lookup","add_witness","alloc_scratch","alloc_scratch_inverse","and_witness","assert_boolean","assert_equal","assert_is_zero","bitmask","borrow","","","","","","","","borrow_mut","","","","","","","","check_boolean","check_equal","check_is_zero","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","cmp","","","","constant","copy","count_leading_ones","count_leading_zeros","debugging","default","","","deref","","","","","","","","deref_mut","","","","","","","","divmod","divmod_signed","drop","","","","","","","","eq","","","","equal","equivalent","","","","","","","","fetch_memory","fetch_memory_access","fetch_register","fetch_register_access","fmt","","","","","","","","from","","","","","","","","get_instruction_pointer","get_next_instruction_pointer","hash","","","","increase_heap_pointer","increase_instruction_counter","init","","","","","","","","instruction_counter","interpret_instruction","interpret_itype","interpret_jtype","interpret_noop","interpret_rtype","into","","","","","","","","into_iter","","","","","is_zero","iter","","","","","len","","","","","lookup_16bits","lookup_2bits","lookup_8bits","mul_hi_lo","mul_hi_lo_signed","mul_signed_witness","next","","","","next_back","","","","nor_witness","nth","","","","or_witness","par_bridge","","","","partial_cmp","","","","push_memory","push_memory_access","push_register","push_register_access","push_register_access_if","push_register_if","range_check16","range_check2","range_check64","range_check8","read_memory","read_register","report_exit","request_hint_write","request_preimage_write","reset","set_halted","set_instruction_pointer","set_next_instruction_pointer","shift_left","shift_right","shift_right_arithmetic","sign_extend","size_hint","","","","sub_witness","test_less_than","test_less_than_signed","test_zero","to_column","to_owned","","","","","","","","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","variable","vzip","","","","","","","","write_memory","write_register","write_register_if","xor_witness","InstructionParts","borrow","borrow_mut","clone","clone_into","clone_to_uninit","decode","default","deref","deref_mut","deserialize","drop","encode","eq","equivalent","","fmt","from","funct","init","into","op_code","rd","rs","rt","serialize","shamt","to_owned","try_from","try_into","type_id","vzip","NUM_REGISTERS","REGISTER_CURRENT_IP","REGISTER_HEAP_POINTER","REGISTER_HI","REGISTER_LO","REGISTER_NEXT_IP","REGISTER_PREIMAGE_KEY_END","REGISTER_PREIMAGE_KEY_START","REGISTER_PREIMAGE_OFFSET","Registers","borrow","borrow_mut","clone","clone_into","clone_to_uninit","current_instruction_pointer","default","deref","deref_mut","deserialize","drop","fmt","from","general_purpose","heap_pointer","hi","index","index_mut","init","into","iter","lo","next_instruction_pointer","preimage_key","preimage_offset","serialize","to_owned","try_from","try_into","type_id","vzip","Env","LookupMultiplicities","MAX_ACC","MAX_NB_MEM_ACC","MAX_NB_REG_ACC","NUM_DECODING_LOOKUP_TERMS","NUM_GLOBAL_LOOKUP_TERMS","NUM_INSTRUCTION_LOOKUP_TERMS","NUM_LOOKUP_TERMS","SyscallEnv","activate_selector","add_constraint","add_lookup","add_witness","alloc_scratch","alloc_scratch_inverse","and_witness","at_most_4_lookup","bitmask","borrow","","","borrow_mut","","","byte_lookup","check_boolean","check_equal","check_is_zero","clone","clone_into","clone_to_uninit","constant","copy","count_leading_ones","count_leading_zeros","create","","decode_instruction","default","","deref","","","deref_mut","","","divmod","divmod_signed","drop","","","equal","fetch_memory","fetch_memory_access","fetch_register","fetch_register_access","from","","","get_memory_access_page_index","get_memory_direct","get_memory_page_index","halt","hash_counter","increase_instruction_counter","init","","","instruction_counter","","into","","","is_zero","keccak_env","last_hint","last_memory_accesses","last_memory_write_index_accesses","lookup_arity","lookup_multiplicities","lookup_state","lookup_state_idx","memory","memory_write_index","mul_hi_lo","mul_hi_lo_signed","mul_signed_witness","new","next_instruction_counter","nor_witness","normalized_instruction_counter","or_witness","pad_lookup","preimage","preimage_bytes_read","preimage_key","preimage_oracle","push_memory","push_memory_access","push_register_access_if","push_register_if","range_check_16_lookup","registers","registers_write_index","report_exit","request_hint_write","request_preimage_write","reset","reset_lookup","reset_lookup_state","reset_scratch_state","reset_scratch_state_inverse","round_constants_lookup","scratch_state","scratch_state_idx","scratch_state_idx_inverse","scratch_state_inverse","selector","set_halted","shift_left","shift_right","shift_right_arithmetic","sparse_lookup","step","sub_witness","syscall_env","test_less_than","test_less_than_signed","test_zero","to_owned","try_from","","","try_into","","","type_id","","","update_last_memory_access","update_last_memory_write_index_access","variable","vzip","","","write_column","write_field_column","xor_witness","INSTRUCTION_SET_SIZE","PAGE_ADDRESS_MASK","PAGE_ADDRESS_SIZE","PAGE_SIZE","SCRATCH_SIZE","SCRATCH_SIZE_INVERSE","column","constraints","interpreter","registers","witness","Add","Atom","Cache","Column","Double","E","IfFeature","InstructionCounter","Mul","Pow","ScratchState","ScratchStateInverse","Selector","Square","Sub","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","Env","activate_selector","add_constraint","add_lookup","add_witness","alloc_scratch","alloc_scratch_inverse","and_witness","assert_boolean","bitmask","borrow","borrow_mut","check_equal","check_is_zero","constant","constraints","copy","count_leading_ones","count_leading_zeros","default","deref","deref_mut","div","div_signed","drop","equal","fetch_memory","fetch_memory_access","fetch_register","fetch_register_access","from","get_constraints","get_lookups","get_selector","get_selector_constraints","increase_instruction_counter","init","instruction_counter","into","is_zero","lookups","mod_signed","mod_unsigned","mul_hi","mul_hi_signed","mul_hi_signed_unsigned","mul_lo","mul_lo_signed","mul_signed_witness","nor_witness","or_witness","push_memory","push_memory_access","push_register_access_if","push_register_if","report_exit","reset","scratch_state_idx","scratch_state_idx_inverse","selector","set_halted","shift_left","shift_right","shift_right_arithmetic","sub_witness","test_less_than","test_less_than_signed","test_zero","try_from","try_into","type_id","variable","vzip","xor_witness","Add","AddImmediate","AddUpperImmediate","And","AndImmediate","BranchEq","BranchGreaterThanEqual","BranchGreaterThanEqualUnsigned","BranchLessThan","BranchLessThanUnsigned","BranchNeq","Div","Divu","Fence","FenceI","IInstruction","IInstructionIter","IType","Instruction","InstructionIter","InterpreterEnv","JumpAndLink","JumpAndLinkRegister","LoadByte","LoadByteUnsigned","LoadHalf","LoadHalfUnsigned","LoadUpperImmediate","LoadWord","MInstruction","MInstructionIter","MType","Mul","Mulh","Mulhsu","Mulhu","Or","OrImmediate","Position","RInstruction","RInstructionIter","RType","Rem","Remu","SBInstruction","SBInstructionIter","SBType","SInstruction","SInstructionIter","SType","SetLessThan","SetLessThanImmediate","SetLessThanImmediateUnsigned","SetLessThanUnsigned","ShiftLeftLogical","ShiftLeftLogicalImmediate","ShiftRightArithmetic","ShiftRightArithmeticImmediate","ShiftRightLogical","ShiftRightLogicalImmediate","StoreByte","StoreHalf","StoreWord","Sub","SyscallInstruction","SyscallInstructionIter","SyscallSuccess","SyscallType","UInstruction","UInstructionIter","UJInstruction","UJInstructionIter","UJType","UType","Variable","Xor","XorImmediate","access_memory","access_register","access_register_if","activate_selector","add_constraint","add_lookup","add_witness","alloc_scratch","alloc_scratch_inverse","and_witness","assert_boolean","assert_equal","assert_is_zero","bitmask","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","check_equal","check_is_zero","clone","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","cmp","","","","","","","","","constant","copy","count_leading_ones","count_leading_zeros","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","div","div_signed","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","equal","equivalent","","","","","","","","","","","","","","","","","","fetch_memory","fetch_memory_access","fetch_register","fetch_register_access","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","get_instruction_pointer","get_next_instruction_pointer","hash","","","","","","","","","increase_heap_pointer","increase_instruction_counter","init","","","","","","","","","","","","","","","","","","instruction_counter","interpret_instruction","interpret_itype","interpret_mtype","interpret_rtype","interpret_sbtype","interpret_stype","interpret_syscall","interpret_ujtype","interpret_utype","into","","","","","","","","","","","","","","","","","","into_iter","","","","","","","","","","is_zero","iter","","","","","","","","","","len","","","","","","","","","","lookup_16bits","lookup_2bits","lookup_8bits","mod_signed","mod_unsigned","mul_hi","mul_hi_signed","mul_hi_signed_unsigned","mul_lo","mul_lo_signed","mul_signed_witness","next","","","","","","","","","next_back","","","","","","","","","nor_witness","nth","","","","","","","","","or_witness","par_bridge","","","","","","","","","partial_cmp","","","","","","","","","push_memory","push_memory_access","push_register","push_register_access","push_register_access_if","push_register_if","range_check16","range_check64","range_check8","read_memory","read_register","report_exit","reset","set_halted","set_instruction_pointer","set_next_instruction_pointer","shift_left","shift_right","shift_right_arithmetic","sign_extend","size_hint","","","","","","","","","sub_witness","test_less_than","test_less_than_signed","test_zero","to_owned","","","","","","","","","","","","","","","","","","to_string","","","","","","","","try_from","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","variable","vzip","","","","","","","","","","","","","","","","","","write_memory","write_register","write_register_if","xor_witness","A0","A1","A2","A3","A4","A5","A6","A7","Fp","Gp","HeapPointer","Ip","N_GP_REGISTERS","NextIp","REGISTER_CURRENT_IP","REGISTER_HEAP_POINTER","REGISTER_NEXT_IP","Ra","RegisterAlias","Registers","S0","S1","S10","S11","S2","S3","S4","S5","S6","S7","S8","S9","Sp","T0","T1","T2","T3","T4","T5","T6","Tp","Zero","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","current_instruction_pointer","default","deref","","deref_mut","","deserialize","drop","","fmt","from","","general_purpose","heap_pointer","index","","index_mut","init","","into","","next_instruction_pointer","serialize","to_owned","try_from","","try_into","","type_id","","vzip","","Env","MAX_ACC","MAX_NB_MEM_ACC","MAX_NB_REG_ACC","NUM_DECODING_LOOKUP_TERMS","NUM_GLOBAL_LOOKUP_TERMS","NUM_INSTRUCTION_LOOKUP_TERMS","NUM_LOOKUP_TERMS","activate_selector","add_constraint","add_lookup","add_witness","alloc_scratch","alloc_scratch_inverse","and_witness","assert_boolean","bitmask","borrow","borrow_mut","check_equal","check_is_zero","constant","copy","count_leading_ones","count_leading_zeros","create","decode_instruction","deref","deref_mut","div","div_signed","drop","equal","fetch_memory","fetch_memory_access","fetch_register","fetch_register_access","from","get_memory_access_page_index","get_memory_direct","get_memory_page_index","halt","increase_instruction_counter","init","instruction_counter","","into","is_zero","last_memory_accesses","last_memory_write_index_accesses","memory","memory_write_index","mod_signed","mod_unsigned","mul_hi","mul_hi_signed","mul_hi_signed_unsigned","mul_lo","mul_lo_signed","mul_signed_witness","next_instruction_counter","nor_witness","normalized_instruction_counter","or_witness","push_memory","push_memory_access","push_register_access_if","push_register_if","registers","registers_write_index","report_exit","reset","reset_scratch_state","reset_scratch_state_inverse","scratch_state","scratch_state_idx","scratch_state_inverse","scratch_state_inverse_idx","selector","set_halted","shift_left","shift_right","shift_right_arithmetic","step","sub_witness","test_less_than","test_less_than_signed","test_zero","try_from","try_into","type_id","update_last_memory_access","update_last_memory_write_index_access","variable","vzip","write_column","write_field_column","xor_witness","AtMost4Lookup","ByteLookup","KeccakStepLookup","LookupTableIDs","MemoryLookup","PadLookup","RangeCheck16Lookup","RegisterLookup","ResetLookup","RoundConstantsLookup","SparseLookup","SyscallLookup","all_variants","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","deref","deref_mut","drop","eq","equivalent","","fmt","from","from_u32","hash","init","into","is_fixed","ix_by_value","length","partial_cmp","runtime_create_column","to_owned","to_u32","try_from","try_into","type_id","vzip","DEGREE_QUOTIENT_POLYNOMIAL","TOTAL_NUMBER_OF_CONSTRAINTS","column_env","lookup_columns","lookup_env","lookup_prover","lookup_verifier","proof","prover","verifier","ColumnEnvironment","Error","InstructionCounter","LookupState","RelationColumnType","Scratch","ScratchInverse","borrow","","borrow_mut","","challenges","clone","clone_into","clone_to_uninit","column_domain","constants","deref","","deref_mut","","domain","drop","","eq","equivalent","","fmt","from","","get_all_columns","get_challenges","get_column","get_constants","get_domain","hash","init","","into","","l0_1","","to_owned","try_from","","try_into","","type_id","","vanishes_on_zero_knowledge_and_previous_rows","vzip","","witness","Acc","Add","AllColumns","Alpha","Atom","Beta","Cache","ColumnEnv","Double","ELookup","Eval","Gamma","IfFeature","Inverses","LookupChallengeTerm","LookupChallenges","LookupColumns","LookupEvalEnvironment","LookupProofInput","Mul","Pow","Proof","Square","Sub","Wires","acc","alpha","arity","beta","beta_challenge","borrow","","","","","","","","","borrow_mut","","","","","","","","","challenges","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cols","column_domain","columns","commitments","deref","","","","","","","","","deref_mut","","","","","","","","","deserialize","domain","drop","","","","","","","","","eq","","equivalent","","evaluate","evaluations","fmt","","from","","","","","","","","","gamma","gamma_challenge","get_challenges","get_column","","get_constants","get_domain","index","init","","","","","","","","","into","","","","","","","","","into_iter","","","inverses","ipa_proof","is_alpha","l0_1","","latex","my_map","ocaml","serialize","t_shares","text","to_owned","","","","","to_string","try_from","","","","","","","","","try_into","","","","","","","","","type_id","","","","","","","","","vanishes_on_zero_knowledge_and_previous_rows","vzip","","","","","","","","","wires","","zeta","zeta_omega","LookupEnvironment","add_multiplicities","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","multiplicities","new","tables_comm","tables_poly","try_from","try_into","type_id","vzip","lookup_prove","lookup_verify","Proof","ProofInputs","WitnessColumns","borrow","","","borrow_mut","","","commitments","deref","","","deref_mut","","","drop","","","error","evaluations","from","","","get_column","init","","","instruction_counter","into","","","lookup_state","new","opening_proof","quotient_commitment","quotient_evaluations","scratch","scratch_inverse","selector","try_from","","","try_into","","","type_id","","","vzip","","","zeta_evaluations","zeta_omega_evaluations","ConstraintDegreeTooHigh","ProverError","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","","from","init","into","prove","to_owned","to_string","try_from","try_into","type_id","vzip","verify","NullPreImageOracle","PreImageOracle","PreImageOracleT","RW","ReadWrite","borrow","","","","borrow_mut","","","","cmd","create","create_bidirectional_channel","deref","","","","deref_mut","","","","drop","","","","from","","","","get_preimage","","","hint","","","hint_client","hint_server","init","","","","into","","","","oracle_client","oracle_server","reader","start","try_from","","","","try_into","","","","type_id","","","","vzip","","","","writer","LookupMode","RAMLookup","Read","Write","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","fmt","","","from","","init","","into","","into_logup","new","numerator","read_if","read_one","to_owned","","to_string","try_from","","try_into","","type_id","","vzip","","write_if","write_one","main","memory_size"],"q":[[0,"o1vm"],[22,"o1vm::cannon"],[285,"o1vm::cli"],[314,"o1vm::cli::cannon"],[428,"o1vm::elf_loader"],[445,"o1vm::interpreters"],[448,"o1vm::interpreters::keccak"],[521,"o1vm::interpreters::keccak::column"],[748,"o1vm::interpreters::keccak::constraints"],[775,"o1vm::interpreters::keccak::environment"],[804,"o1vm::interpreters::keccak::helpers"],[827,"o1vm::interpreters::keccak::interpreter"],[925,"o1vm::interpreters::keccak::witness"],[953,"o1vm::interpreters::mips"],[964,"o1vm::interpreters::mips::column"],[1004,"o1vm::interpreters::mips::constraints"],[1071,"o1vm::interpreters::mips::interpreter"],[1450,"o1vm::interpreters::mips::interpreter::debugging"],[1482,"o1vm::interpreters::mips::registers"],[1523,"o1vm::interpreters::mips::witness"],[1672,"o1vm::interpreters::riscv32im"],[1683,"o1vm::interpreters::riscv32im::column"],[1718,"o1vm::interpreters::riscv32im::constraints"],[1792,"o1vm::interpreters::riscv32im::interpreter"],[2412,"o1vm::interpreters::riscv32im::registers"],[2493,"o1vm::interpreters::riscv32im::witness"],[2591,"o1vm::lookups"],[2633,"o1vm::pickles"],[2643,"o1vm::pickles::column_env"],[2696,"o1vm::pickles::lookup_columns"],[2897,"o1vm::pickles::lookup_env"],[2915,"o1vm::pickles::lookup_prover"],[2916,"o1vm::pickles::lookup_verifier"],[2917,"o1vm::pickles::proof"],[2971,"o1vm::pickles::prover"],[2993,"o1vm::pickles::verifier"],[2994,"o1vm::preimage_oracle"],[3063,"o1vm::ramlookup"],[3110,"o1vm::test_preimage_read"],[3111,"o1vm::utils"],[3112,"alloc::vec"],[3113,"core::result"],[3114,"serde::de"],[3115,"alloc::string"],[3116,"core::option"],[3117,"core::fmt"],[3118,"serde::ser"],[3119,"std::time"],[3120,"core::any"],[3121,"clap_builder::builder::command"],[3122,"clap_builder::parser::matches::arg_matches"],[3123,"clap_builder"],[3124,"clap_builder::util::id"],[3125,"elf::elf_bytes"],[3126,"elf::endian"],[3127,"std::path"],[3128,"ark_ff::fields"],[3129,"core::cmp"],[3130,"alloc::boxed"],[3131,"core::hash"],[3132,"core::clone"],[3133,"rayon::iter::par_bridge"],[3134,"kimchi_msm::columns"],[3135,"core::ops::arith"],[3136,"num_traits::identities"],[3137,"std::collections::hash::map"],[3138,"core::default"],[3139,"core::iter::traits::iterator"],[3140,"ark_ff::fields::prime"],[3141,"kimchi::circuits::berkeley_columns"],[3142,"kimchi::circuits::domains"],[3143,"ark_ff::fields::fft_friendly"],[3144,"kimchi::circuits::expr"],[3145,"ark_poly::domain::radix2"],[3146,"ark_poly::evaluations::univariate"],[3147,"kimchi::proof"],[3148,"poly_commitment::ipa"],[3149,"core::ops::function"],[3150,"kimchi::curve"],[3151,"mina_poseidon::sponge"],[3152,"rand_core"],[3153,"poly_commitment::commitment"],[3154,"std::process"],[3155,"kimchi_msm::logup"]],"i":"K`000`000``00``````````n00`````0`````````0`````fAlAnBbBhBjBn76A`AbAdAf987654;:3210;:3210;:3210;:321098273987654;:3210987654;:32107610987654;:321054;105566076654;:3210987654;:332104;98366373987654;:32103987654;:32106663:1636366633676133162302;:32106987654;:3210987654;:3210987654;:3210987654;:3210Dh`0000`0000000000000000000000`Eb``0`0ChDnE`21033210321032103210321032102102103210321032103210321032103210321030210301121032103210321032103210312103`Ej000000000``0000```F`000`000`En`1011111`1`11110101010101``010101`0100110101`01`01``0101010101`Fj``Ff00`Fn11`00```01111111111Fd2202222``32``222222220Fh4Fl3G`53261405326140532614053261405364Gd7564372516437251643725164756644775564372516437251647500006437251643725143214475432132132132132164753216464372516437251643725164372516437251`Hd0000000000000000000000000`Hl000000000000000000000000000```AFh0000Ib000001AFj2100120``If0Jd001110000000000000000000000000000000000000000000000000000000000000000000000010000000000000000`I`00000000000000000000000000````````````Jh``````000000000Jj1111111110000111111111`Jn0000000000000000000000000000`000000000000000000000000000000000000KhL`01100000001111```````Jl`````0``Kl033222222223333333331332Kd2`````````43344444443333334444444444444043000000000000002Kf5Kj3Kn6Lb6382517044463825170638251706382517068574444`8576382517063825170446382517068574668855774444638251706382517044685744638251704`````638251706321046685763210444444321032104321043210685744444444444444444444444321044446638251706382517063825170638251704638251704444`Ld000000000000000000000000000000``````````Lf000000000000000000000000000000``````````Mb000000Mh101Mj1201222000222220210120120221202222212022222212022120220222222222221222212222222212222221222122222222212222220120120120222120222```````````Nb00`0`0Ml110001100000000000000000000`Mn000000000000000000000000000000000000000000000000000000000000000000000000NhNlOh21Od00000A@d044``N````Ol5555545``1222265Nd``233``2``27667767676O`008``A@`4````44298222222222222224Nf:Nj:Nn4Ob:Of<Oj9On7A@b=A@f=8Nh8Nl8<7Od7Oh7Ol7>6A@d6Nd0N`Nf8Nj8NnO`Ob:Of:Oj:OnA@`A@b<A@f;:Nh:Nl:98Od8Oh8Ol876A@d6N`Nf7Nj7NnO`Ob9Of9Oj9OnA@`A@b;A@f;NhNl9OdOhOl7A@dNd00065>43291N`Nf8Nj8NnO`Ob:Of:Oj:OnA@`A@b<A@f;:Nh:Nl:98Od8Oh8Ol876A@d6Nd0N`Nf8Nj8NnO`Ob:Of:Oj:OnA@`A@b<A@f;NhNl9OdOhOl7A@dNdN`07766??554433::22111100Nf88Nj88NnO`0Ob::Of::Oj::OnA@`A@b<<A@f;:Nh:Nl:98Od8Oh8Ol876A@d6Nd0N`76?543:2110Nf8Nj8NnO`Ob:Of:Oj:OnA@`A@b<A@f<`````````;:Nh:Nl:98Od8Oh8Ol876A@d6N`NfNjNnObOfOjOn?>Nd88>=O`=<;A@`;:9876543A@bA@f44444444444;:9876510;:98765104;:98765104;:9876510<NhNl5OdOhOl7A@d::::::::::::::::::::NfNjNnObOfOjOn>=Nd000N`8>7=6O`6=5<4;3A@`A@b<A@f4NhNl5OdOhOlA@d:Nf6Nj6Nn<Ob7Of7Oj7On?>7=N`7=6<5O`5<4;3:2A@`A@b;A@f4;Nh;Nl;5:Od:Oh:Ol:76A@d6Nd;Nf7Nj7Nn=Ob8Of8Oj8OnA@`A@b:A@f::::A@j00000000000`0```0``00000000000000000000000A@h1000000101001001000000101000010101010````````A@l00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Hf00`00000000000000000000000000000000000000```````````H`00`00A@n1010111000101001111101`0000101010010101010010ABfAD``ABl101`1``012`````11`112AAnAB`ABb100ABn2ABd74ABhABj7435296107296107961079610712234352961074352961077243529610797770377435296107542262254352961074352961076106372276771796107743529610743529610743529610724352961074600`ACj0000000000000000`````ADjADlADh210021021021021210221022102100022221021021021000AE``0000000000000`000000``````AEbAEjAEfAEh321033`3210321032103210Mf410414443214321443443214321432143213``AEn00Hh10101010101010100101010000001001010101000``","f":"`````````````````````````{{}b}0````{{}d}0011``````````{fh}{j{{j{c}}}{}}00000000000{{{j{l}}}{{j{lc}}}{}}00000000000{{{j{n}}}n}{{{j{f}}}f}{{{j{A`}}}A`}{{{j{Ab}}}Ab}{{{j{Ad}}}Ad}{{{j{Af}}}Af}{{j{j{lc}}}Ah{}}00000{{jAj}Ah}00000{{{h{Aj}}}Al}{{{h{Aj}}}An}{B`Ab}{Bbh}{{}A`}{B`{{j{c}}}{}}00000000000{B`{{j{lc}}}{}}00000000000{c{{Bd{Bb}}}Bf}{c{{Bd{Bh}}}Bf}{c{{Bd{Ad}}}Bf}{c{{Bd{Af}}}Bf}{B`Ah}00000000000{{{j{Bj}}{j{Bj}}}Bl}{{{j{Bn}}{j{Bn}}}Bl}{{{j{n}}{j{n}}}Bl}{{{j{Ad}}{j{Ad}}}Bl}{{{j{Af}}{j{Af}}}Bl}{{j{j{c}}}Bl{}}0{BhAj}{BhBl}{{{j{Af}}d}{{Cb{C`}}}}{{{j{Bb}}{j{lCd}}}Cf}{{{j{Bh}}{j{lCd}}}Cf}0{{{j{Bj}}{j{lCd}}}Cf}{{{j{Bn}}{j{lCd}}}Cf}{{{j{n}}{j{lCd}}}Cf}{{{j{f}}{j{lCd}}}Cf}{{{j{A`}}{j{lCd}}}Cf}{{{j{Ab}}{j{lCd}}}Cf}{{{j{Ad}}{j{lCd}}}Cf}{{{j{Af}}{j{lCd}}}Cf}{cc{}}0000000{ChA`}1111{{{j{Cj}}}{{Bd{Bnc}}}{}}{{{j{Cj}}}{{Bd{nC`}}}}{Al{{h{Aj}}}}{An{{h{Aj}}}}{A`Cb}{Bhd}01{Bbd}{A`n}{{}B`}00000000000{A`C`}{{}c{}}00000000000{BhCb}6{Bhh}8{fC`}{AdC`}959{A`Bl}4{BhCl};970{{{j{Bb}}c}BdCn}{{{j{Bh}}c}BdCn}{AdB`}:<{Add}{BhD`}{AbB`}?{Afh}{AbDb}{jc{}}00000{jC`}{c{{Bd{e}}}{}{}}00000000000{{}{{Bd{c}}}{}}00000000000{jDd}00000000000{{}c{}}00000000000``{DfDf}0{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}`{{{j{Dh}}}Dh}{{j{j{lc}}}Ah{}}{{jAj}Ah}{{}Df}0{B`{{j{c}}}{}}{B`{{j{lc}}}{}}{B`Ah}{{{j{Dh}}{j{lCd}}}Cf}{cc{}}{{{j{Dj}}}{{Bd{DhDl}}}}{{{j{lDj}}}{{Bd{DhDl}}}}{{{j{Cj}}}Bl}{{}B`}{{}c{}}{jc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}{{{j{lDh}}{j{Dj}}}{{Bd{AhDl}}}}{{{j{lDh}}{j{lDj}}}{{Bd{AhDl}}}}{{}c{}}```````{DfDf}0000000{j{{j{c}}}{}}000{{{j{l}}}{{j{lc}}}{}}000{{{j{Ch}}}Ch}{{{j{Dn}}}Dn}{{{j{E`}}}E`}{{{j{Eb}}}Eb}{{j{j{lc}}}Ah{}}000{{jAj}Ah}000{{}Df}00000{B`{{j{c}}}{}}000{B`{{j{lc}}}{}}000{B`Ah}000{{{j{Ch}}{j{lCd}}}Cf}{{{j{Dn}}{j{lCd}}}Cf}{{{j{E`}}{j{lCd}}}Cf}{{{j{Eb}}{j{lCd}}}Cf}{cc{}}000{{{j{Dj}}}{{Bd{ChDl}}}}{{{j{Dj}}}{{Bd{DnDl}}}}{{{j{Dj}}}{{Bd{E`Dl}}}}{{{j{Dj}}}{{Bd{EbDl}}}}{{{j{lDj}}}{{Bd{ChDl}}}}{{{j{lDj}}}{{Bd{DnDl}}}}{{{j{lDj}}}{{Bd{E`Dl}}}}{{{j{lDj}}}{{Bd{EbDl}}}}{{}{{Cb{Ed}}}}00{{{j{Cj}}}Bl}{{}B`}000{E`C`}{{}c{}}0001{DnCb}0{jc{}}000{c{{Bd{e}}}{}{}}000{{}{{Bd{c}}}{}}000{jDd}000{{{j{lCh}}{j{Dj}}}{{Bd{AhDl}}}}{{{j{lDn}}{j{Dj}}}{{Bd{AhDl}}}}{{{j{lE`}}{j{Dj}}}{{Bd{AhDl}}}}{{{j{lEb}}{j{Dj}}}{{Bd{AhDl}}}}{{{j{lCh}}{j{lDj}}}{{Bd{AhDl}}}}{{{j{lDn}}{j{lDj}}}{{Bd{AhDl}}}}{{{j{lE`}}{j{lDj}}}{{Bd{AhDl}}}}{{{j{lEb}}{j{lDj}}}{{Bd{AhDl}}}}{DnCh}{{}c{}}000```{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}{B`Ah}{cc{}}{{}B`}{{}c{}}{{{Ef{c}}}{{Bd{BhC`}}}Eh}{{Ej{j{El}}}{{Bd{BhC`}}}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}=````````````````````````````<<;;{{{j{En}}}En}{{{j{F`}}}F`}{{j{j{lc}}}Ah{}}0{{jAj}Ah}0``>>==<<`{{{j{En}}{j{En}}}Bl}{{{j{F`}}{j{F`}}}Bl}{{j{j{c}}}Bl{}}000{{{j{En}}{j{lCd}}}Cf}{{{j{F`}}{j{lCd}}}Cf}{cc{}}0`{{}B`}0`{{}c{}}0{B`{{Cl{c}}}Fb}{FdFd}{jc{}}0{c{{Bd{e}}}{}{}}0{{}{{Bd{c}}}{}}0{jDd}0{{}c{}}0``````````````888````````````````````````````````{j{{j{c}}}{}}000000{{{j{l}}}{{j{lc}}}{}}000000{{{j{Ff}}}Ff}{{{j{Fd}}}Fd}{{{j{Fh}}}Fh}{{{j{Fj}}}Fj}{{{j{Fl}}}Fl}{{{j{Fn}}}Fn}{{{j{G`}}}G`}{{j{j{lc}}}Ah{}}000000{{jAj}Ah}000000{{{j{Ff}}{j{Ff}}}Gb}{{{j{Fd}}{j{Fd}}}Gb}{{{j{Fj}}{j{Fj}}}Gb}{{{j{Fn}}{j{Fn}}}Gb}{GdGf}{{}Fj}{{}Fn}{B`{{j{c}}}{}}000000{B`{{j{lc}}}{}}000000{B`Ah}000000{{{j{Ff}}{j{Ff}}}Bl}{{{j{Fd}}{j{Fd}}}Bl}{{{j{Fj}}{j{Fj}}}Bl}{{{j{Fn}}{j{Fn}}}Bl}{{j{j{c}}}Bl{}}0000000{{{j{Ff}}{j{lCd}}}Cf}{{{j{Fd}}{j{lCd}}}Cf}{{{j{Fh}}{j{lCd}}}Cf}{{{j{Fj}}{j{lCd}}}Cf}{{{j{Fl}}{j{lCd}}}Cf}{{{j{Fn}}{j{lCd}}}Cf}{{{j{G`}}{j{lCd}}}Cf}{cc{}}000000{{{j{Ff}}{j{lc}}}AhGh}{{{j{Fd}}{j{lc}}}AhGh}{{{j{Fj}}{j{lc}}}AhGh}{{{j{Fn}}{j{lc}}}AhGh}{{{j{{Gd{c}}}}Fd}{{j{e}}}Gj{}}{{{j{{Gd{c}}}}Ff}{{j{e}}}Gj{}}{{{j{l{Gd{c}}}}Ff}{{j{le}}}Gj{}}{{{j{l{Gd{c}}}}Fd}{{j{le}}}Gj{}}{{}B`}000000{{}c{}}000000{Fdc{}}{{}c{}}00{j}{{}Fh}{{}Fl}{{}G`}{jB`}{{{j{Fh}}}B`}{{{j{Fl}}}B`}{{{j{G`}}}B`}{{{j{lFh}}}{{Cb{c}}}{}}{{{j{lFl}}}{{Cb{c}}}{}}{{{j{lG`}}}{{Cb{c}}}{}}210{{{j{lFh}}B`}{{Cb{c}}}{}}{{{j{lFl}}B`}{{Cb{c}}}{}}{{{j{lG`}}B`}{{Cb{c}}}{}}{{}{{Gl{c}}}{}}00{{{j{Ff}}{j{Ff}}}{{Cb{Gb}}}}{{{j{Fd}}{j{Fd}}}{{Cb{Gb}}}}{{{j{Fj}}{j{Fj}}}{{Cb{Gb}}}}{{{j{Fn}}{j{Fn}}}{{Cb{Gb}}}}{{{j{Fh}}}{{Gn{B`{Cb{B`}}}}}}{{{j{Fl}}}{{Gn{B`{Cb{B`}}}}}}{{{j{G`}}}{{Gn{B`{Cb{B`}}}}}}{Ff{{Hb{H`}}}}{Fd{{Hb{B`}}}}{jc{}}000000{c{{Bd{e}}}{}{}}000000{{}{{Bd{c}}}{}}000000{jDd}000000{{}c{}}000000`{{{j{l{Hd{c}}}}e{Hh{eHf}}}AhFb{}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Hd{c}}}}}{{Hd{c}}}Gj}{{j{j{lc}}}Ah{}}{{jAj}Ah}{D`c{}}{ceFb{}}{{{j{l{Hd{c}}}}F`ee}AhFb{}}{Hdh}{{}{{Hd{c}}}Fb}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}{B`Ah}{{{j{{Hd{c}}}}{j{lCd}}}CfHj}{cc{}}{{}B`}{{}c{}}8{jc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}>{jDd}{{{j{{Hd{c}}}}Ff}eFb{}}{{}c{}}`{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Hl{c}}}}}{{Hl{c}}}Gj}{{j{j{lc}}}Ah{}}{{jAj}Ah}{HlHd}{{}{{Hl{c}}}Fb}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}{B`Ah}{{{j{{Hl{c}}}}{j{lCd}}}CfHj}{cc{}}{{}B`}{{}c{}}{{D`{j{{Hn{Aj}}}}}{{Hl{c}}}Fb}{{{j{l{Hl{c}}}}}AhFb}{{{j{{Hl{c}}}}}FdFb}1{HlCb}{jc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}6{{}c{}}{HlI`}{{{j{l{Hl{c}}}}FfD`}AhFb}{{{j{l{Hl{c}}}}Ffc}AhFb}```{{cc}c{}}{cc{}}10{{ccc}{{Gn{cc}}}{}}{{{j{lIb}}cc}Ah{}}{{{j{lIb}}c{h{c}}}Ah{}}1{{{j{lIb}}ccc}Ah{}}124{{}c{}}620{D`c{}}371```{{{j{l{If{}{{Id{c}}}}}}c{Hh{cHf}}}Ah{{Ij{c}{{Ih{c}}}}{Il{c}{{Ih{c}}}}{In{c}{{Ih{c}}}}GjHjJ`Jb}}{{{j{Jd}}B`}c{}}{{{j{Jd}}}c{}}{{{j{Jd}}B`}{{h{c}}}{}}4{ce{J`HjJb}{}}{{{j{l{If{}{{Id{c}}}}}}F`cc}Ah{{Ij{c}{{Ih{c}}}}{Il{c}{{Ih{c}}}}{In{c}{{Ih{c}}}}GjHjJ`Jb}}{{{j{lJd}}Fd}Ah}0{{{j{lJd}}Fd{h{{h{{h{c}}}}}}}{{h{{h{{h{c}}}}}}}{}}1{{{j{lJd}}Fd{h{{h{{h{c}}}}}}}Ah{}}21222{{{j{lJd}}Fd}{{h{{h{{h{c}}}}}}}{}}3{{{j{Jd}}B`B`}c{}}{{{j{Jd}}B`B`B`}c{}}10108{{{j{{Hn{c}}}}{Cb{B`}}B`}c{}}{{{j{{Hn{c}}}}{Cb{B`}}{Cb{B`}}{Cb{B`}}{Cb{B`}}}c{}};<{{{j{Jd}}}{{Cl{c}}}{}}{{{j{Jd}}}{{h{c}}}{}}{{{j{Jd}}Fd}c{}}00000:::::::::000000??212>??565>2{{{j{Jd}}B`B`B`B`}c{}}600{{{j{Jd}}B`}c{}}40470{{{j{Jd}}}c{}}0{{{j{{If{}{{Id{c}}}}}}Ff}c{{Ij{c}{{Ih{c}}}}{Il{c}{{Ih{c}}}}{In{c}{{Ih{c}}}}GjHjJ`Jb}}6666666666666662`{{{j{l{I`{c}}}}e{Hh{eHf}}}AhFb{}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{I`{c}}}}}{{I`{c}}}Gj}{{j{j{lc}}}Ah{}}{{jAj}Ah}{D`c{}}{ceFb{}}{{{j{l{I`{c}}}}F`ee}AhFb{}}{{}{{I`{c}}}Fb}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}{B`Ah}{{{j{{I`{c}}}}{j{lCd}}}CfHj}{cc{}}{{}B`}{{}c{}}{I`Jf}0{jc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{D`}{jDd}{{{j{{I`{c}}}}Ff}eFb{}}{{}c{}}{I`Gd}```{{}D`}`;````````;;;;;```{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{Jh}}}Jh}{{j{j{lc}}}Ah{}}{{jAj}Ah}{{{j{Jh}}{j{Jh}}}Gb}{JjGf}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}{B`Ah}{{{j{Jh}}{j{Jh}}}Bl}{{j{j{c}}}Bl{}}0{{{j{Jh}}{j{lCd}}}Cf}{cc{}}{{{j{Jh}}{j{lc}}}AhGh}{{{j{{Jj{c}}}}Jl}{{j{e}}}Gj{}}{{{j{{Jj{c}}}}Jh}{{j{e}}}Gj{}}{{{j{l{Jj{c}}}}Jh}{{j{le}}}Gj{}}{{{j{l{Jj{c}}}}Jl}{{j{le}}}Gj{}}{{}B`}{{}c{}}{{{j{Jh}}{j{Jh}}}{{Cb{Gb}}}}{Jh{{Hb{H`}}}}{jc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}{{}c{}}`{{{j{l{Jn{c}}}}Jl}AhFb}{{{j{l{Jn{c}}}}e}AhFb{}}{{{j{l{Jn{c}}}}{Hh{eHf}}}AhFb{}}{{{j{l{Jn{c}}}}{j{e}}{j{e}}gg}{{Gn{ee}}}Fb{}{}}{{{j{l{Jn{c}}}}}eFb{}}0{{{j{l{Jn{c}}}}{j{e}}{j{e}}g}eFb{}{}}{{{j{l{Jn{c}}}}{j{e}}ddg}eFb{}{}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{c}}}Ah{}}{{{j{c}}{j{c}}}Ah{}}1{dc{}}{{{j{l{Jn{c}}}}{j{e}}g}eFb{}{}}00{{}{{Jn{c}}}Fb}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}<<{B`Ah}{{{j{l{Jn{c}}}}{j{e}}{j{e}}}eFb{}}5555{cc{}}{{}{{h{{K`{c}}}}}Fb}{{{j{{Jn{c}}}}}{{h{{K`{c}}}}}Fb}{{{j{{Jn{c}}}}}{{h{{Hh{{K`{c}}Hf}}}}}Fb}{{{j{{Jn{c}}}}}{{K`{c}}}Fb}2{{{j{l{Jn{c}}}}}AhFb}{{}B`}{{{j{{Jn{c}}}}}eFb{}}{{}c{}}{{{j{l{Jn{c}}}}{j{e}}}eFb{}}{{{j{l{Jn{c}}}}{j{e}}{j{e}}gg}{{Gn{ee}}}Fb{}{}}0{{{j{l{Jn{c}}}}{j{e}}{j{e}}g}eFb{}{}}00{{{j{l{Jn{c}}}}{j{e}}e}AhFb{}}0{{{j{l{Jn{c}}}}{j{e}}e{j{e}}}AhFb{}}0{{{j{l{Jn{c}}}}{j{e}}}AhFb{}}{{{j{l{Jn{c}}}}{j{e}}{j{e}}}AhFb{}}4:{{{j{l{Jn{c}}}}e}AhFb{}}555655{{{j{l{Jn{c}}}}{j{e}}g}eFb{}{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}{{{j{{Jn{c}}}}e}gFb{}{}}{{}c{}};````````````````{{}d}000000``````````````````````````````````````0000000````````````````````````````````{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}{j{e}}{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}Jl}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}e}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{Hh{eHf}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}cc}{{Gn{ee}}}{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}}c{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}4{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}ee}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}5{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}ddc}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{j{{j{c}}}{}}0000000{{{j{l}}}{{j{lc}}}{}}0000000{{{j{c}}}Ah{}}{{{j{c}}{j{c}}}Ah{}}1{{{j{Jl}}}Jl}{{{j{Kf}}}Kf}{{{j{Kh}}}Kh}{{{j{Kj}}}Kj}{{{j{Kl}}}Kl}{{{j{Kn}}}Kn}{{{j{L`}}}L`}{{{j{Lb}}}Lb}{{j{j{lc}}}Ah{}}0000000{{jAj}Ah}0000000{{{j{Jl}}{j{Jl}}}Gb}{{{j{Kh}}{j{Kh}}}Gb}{{{j{Kl}}{j{Kl}}}Gb}{{{j{L`}}{j{L`}}}Gb}{dc{}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}00`{{}Kh}{{}Kl}{{}L`}{B`{{j{c}}}{}}0000000{B`{{j{lc}}}{}}0000000{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}cc}{{Gn{ee}}}{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{B`Ah}0000000{{{j{Jl}}{j{Jl}}}Bl}{{{j{Kh}}{j{Kh}}}Bl}{{{j{Kl}}{j{Kl}}}Bl}{{{j{L`}}{j{L`}}}Bl}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{j{j{c}}}Bl{}}0000000===={{{j{Jl}}{j{lCd}}}Cf}{{{j{Kf}}{j{lCd}}}Cf}{{{j{Kh}}{j{lCd}}}Cf}{{{j{Kj}}{j{lCd}}}Cf}{{{j{Kl}}{j{lCd}}}Cf}{{{j{Kn}}{j{lCd}}}Cf}{{{j{L`}}{j{lCd}}}Cf}{{{j{Lb}}{j{lCd}}}Cf}{cc{}}0000000{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{{{j{Jl}}{j{lc}}}AhGh}{{{j{Kh}}{j{lc}}}AhGh}{{{j{Kl}}{j{lc}}}AhGh}{{{j{L`}}{j{lc}}}AhGh}?{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{}B`}0000000{{{j{{Kd{}{{Kb{c}}{Id{e}}}}}}}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{lc}}Jl}AhKd}{{{j{lc}}L`}AhKd}{{{j{lc}}Kl}AhKd}{{{j{lc}}}AhKd}{{{j{lc}}Kh}AhKd}{{}c{}}0000000{Jlc{}}{{}c{}}000{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{j}{{}Kf}{{}Kj}{{}Kn}{{}Lb}{jB`}{{{j{Kf}}}B`}{{{j{Kj}}}B`}{{{j{Kn}}}B`}{{{j{Lb}}}B`}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}00{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}cc}{{Gn{ee}}}{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{lKf}}}{{Cb{c}}}{}}{{{j{lKj}}}{{Cb{c}}}{}}{{{j{lKn}}}{{Cb{c}}}{}}{{{j{lLb}}}{{Cb{c}}}{}}32104{{{j{lKf}}B`}{{Cb{c}}}{}}{{{j{lKj}}B`}{{Cb{c}}}{}}{{{j{lKn}}B`}{{Cb{c}}}{}}{{{j{lLb}}B`}{{Cb{c}}}{}}8{{}{{Gl{c}}}{}}000{{{j{Jl}}{j{Jl}}}{{Cb{Gb}}}}{{{j{Kh}}{j{Kh}}}{{Cb{Gb}}}}{{{j{Kl}}{j{Kl}}}{{Cb{Gb}}}}{{{j{L`}}{j{L`}}}{{Cb{Gb}}}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}e}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}000{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}e{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}d}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}01{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}01{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}e}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}00222{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}d}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{Kf}}}{{Gn{B`{Cb{B`}}}}}}{{{j{Kj}}}{{Gn{B`{Cb{B`}}}}}}{{{j{Kn}}}{{Gn{B`{Cb{B`}}}}}}{{{j{Lb}}}{{Gn{B`{Cb{B`}}}}}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}cc}{{Gn{ee}}}{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}88{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{Jl{{Hb{B`}}}}{jc{}}0000000{c{{Bd{e}}}{}{}}0000000{{}{{Bd{c}}}{}}0000000{jDd}0000000{{{j{{Kd{}{{Kb{c}}{Id{e}}}}}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{}c{}}0000000{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}e}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}e{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Kd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}`{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{Ld}}}Ld}{{j{j{lc}}}Ah{}}{{jAj}Ah}{dLd}{{}Ld}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}{c{{Bd{Ld}}}Bf}{B`Ah}{Ldd}{{{j{Ld}}{j{Ld}}}Bl}{{j{j{c}}}Bl{}}0{{{j{Ld}}{j{lCd}}}Cf}{cc{}}4{{}B`}{{}c{}}6666{{{j{Ld}}c}BdCn}7{jc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}{{}c{}}777777777`{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Lf{c}}}}}{{Lf{c}}}Gj}{{j{j{lc}}}Ah{}}{{jAj}Ah}{Lf}{{}{{Lf{c}}}Lh}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}{c{{Bd{{Lf{e}}}}}BfLj}{B`Ah}{{{j{{Lf{c}}}}{j{lCd}}}CfHj}{cc{}}{LfCl}88{{{j{{Lf{c}}}}B`}{{j{e}}}Gj{}}{{{j{l{Lf{c}}}}B`}{{j{le}}}Gj{}}{{}B`}{{}c{}}{{{j{{Lf{c}}}}}{{`{{Ln{}{{Ll{{j{c}}}}}}}}}{}}==5={{{j{{Lf{c}}}}e}BdM`Cn}{jc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}{{}c{}}``{{}D`}009999`{{{j{l{Mb{ce}}}}Jl}AhMdMf}{{{j{l{Mb{ce}}}}g}AhMdMf{}}{{{j{l{Mb{ce}}}}{Hh{gHf}}}AhMdMf{}}{{{j{l{Mb{ce}}}}{j{g}}{j{g}}ii}{{Gn{gg}}}MdMf{}{}}{{{j{l{Mb{ce}}}}}gMdMf{}}0{{{j{l{Mb{ce}}}}{j{g}}{j{g}}i}gMdMf{}{}}{Mhh}{{{j{l{Mb{ce}}}}{j{g}}ddi}gMdMf{}{}}{j{{j{c}}}{}}00{{{j{l}}}{{j{lc}}}{}}003{{{j{c}}}Ah{}}{{{j{c}}{j{c}}}Ah{}}1{{{j{Mj}}}Mj}{{j{j{lc}}}Ah{}}{{jAj}Ah}{dc{}}{{{j{l{Mb{ce}}}}{j{g}}i}gMdMf{}{}}00{{B`Bhc}{{Mb{ec}}}MfMd}{{{j{Bh}}}Mj}{{{j{l{Mb{ce}}}}}{{Gn{Jld}}}MdMf}{{}Mh}{{}Mj}{B`{{j{c}}}{}}00{B`{{j{lc}}}{}}00{{{j{l{Mb{ce}}}}{j{g}}{j{g}}ii}{{Gn{gg}}}MdMf{}{}}0{B`Ah}00{{{j{l{Mb{ce}}}}{j{g}}{j{g}}}gMdMf{}}::::{cc{}}00{{{j{l{Mb{ce}}}}d}B`MdMf}{{{j{l{Mb{ce}}}}d}AjMdMf}1{MbBl}{MbD`}{{{j{l{Mb{ce}}}}}AhMdMf}{{}B`}00{{{j{{Mb{ce}}}}}gMdMf{}}3{{}c{}}00{{{j{l{Mb{ce}}}}{j{g}}}gMdMf{}}{MbCb}{MjCb}{MbCl}0{Mbh}{MbMh}1{MbB`}22{{{j{l{Mb{ce}}}}{j{g}}{j{g}}ii}{{Gn{gg}}}MdMf{}{}}0{{{j{l{Mb{ce}}}}{j{g}}{j{g}}i}gMdMf{}{}}{{}Mh}{{{j{{Mb{ce}}}}}D`MdMf}202{Mhh}:{MbD`};{Mb}{{{j{l{Mb{ce}}}}{j{g}}g}AhMdMf{}}0{{{j{l{Mb{ce}}}}{j{g}}g{j{g}}}AhMdMf{}}04{MbLf}0{{{j{l{Mb{ce}}}}{j{g}}}AhMdMf{}}{{{j{l{Mb{ce}}}}{j{g}}{j{g}}}AhMdMf{}}:{{{j{l{Mb{ce}}}}}AhMdMf}80008{MbCl}>>0>{{{j{l{Mb{ce}}}}g}AhMdMf{}}===:{{{j{l{Mb{ce}}}}{j{A`}}{j{{Cb{Af}}}}{j{Ab}}}JlMdMf}?{MbMj}??{{{j{l{Mb{ce}}}}{j{g}}i}gMdMf{}{}}{jc{}}{c{{Bd{e}}}{}{}}00{{}{{Bd{c}}}{}}00{jDd}00{{{j{l{Mb{ce}}}}B`}AhMdMf}0{{{j{{Mb{ce}}}}g}iMdMf{}{}}{{}c{}}00{{{j{l{Mb{ce}}}}JhD`}AhMdMf}{{{j{l{Mb{ce}}}}Jhc}AhMdMf}{{{j{l{Mb{ce}}}}{j{g}}{j{g}}i}gMdMf{}{}}{{}B`}{{}d}0011````````````````````{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{Ml}}}Ml}{{j{j{lc}}}Ah{}}{{jAj}Ah}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}{B`Ah}{{{j{Ml}}{j{Ml}}}Bl}{{j{j{c}}}Bl{}}0{{{j{Ml}}{j{lCd}}}Cf}{cc{}}={{}c{}}{jc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}{{}c{}}`{{{j{l{Mn{c}}}}N`}AhFb}{{{j{l{Mn{c}}}}e}AhFb{}}{{{j{l{Mn{c}}}}{Hh{eHf}}}AhFb{}}{{{j{l{Mn{c}}}}{j{e}}{j{e}}gg}{{Gn{ee}}}Fb{}{}}{{{j{l{Mn{c}}}}}eFb{}}0{{{j{l{Mn{c}}}}{j{e}}{j{e}}g}eFb{}{}}{{{j{l{Mn{c}}}}{j{e}}}AhFb{}}{{{j{l{Mn{c}}}}{j{e}}ddg}eFb{}{}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{c}}{j{c}}}Ah{}}{{{j{c}}}Ah{}}{dc{}}{Mnh}{{{j{l{Mn{c}}}}{j{e}}g}eFb{}{}}00{{}{{Mn{c}}}Fb}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}<<{B`Ah}{{{j{l{Mn{c}}}}{j{e}}{j{e}}}eFb{}}5555{cc{}}{{{j{{Mn{c}}}}}{{h{{Nb{c}}}}}Fb}{{{j{{Mn{c}}}}}{{h{{Hh{{Nb{c}}Hf}}}}}Fb}{{{j{{Mn{c}}}}}{{Nb{c}}}Fb}2{{{j{l{Mn{c}}}}}AhFb}{{}B`}{{{j{{Mn{c}}}}}eFb{}}{{}c{}}{{{j{l{Mn{c}}}}{j{e}}}eFb{}}?{{{j{l{Mn{c}}}}{j{e}}{j{e}}g}eFb{}{}}000000000{{{j{l{Mn{c}}}}{j{e}}e}AhFb{}}0{{{j{l{Mn{c}}}}{j{e}}e{j{e}}}AhFb{}}0{{{j{l{Mn{c}}}}{j{e}}}AhFb{}}8{MnB`}0{MnCb}{{{j{l{Mn{c}}}}e}AhFb{}}666{{{j{l{Mn{c}}}}{j{e}}{j{e}}gg}{{Gn{ee}}}Fb{}{}}77{{{j{l{Mn{c}}}}{j{e}}g}eFb{}{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}{{{j{{Mn{c}}}}e}gFb{}{}}{{}c{}}=`````````````````````````````````````````````````````````````````````````````{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}{j{e}}{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}N`}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}e}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{Hh{eHf}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}cc}{{Gn{ee}}}{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}}c{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}ee}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}6{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}ddc}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{j{{j{c}}}{}}00000000000000000{{{j{l}}}{{j{lc}}}{}}00000000000000000{{{j{c}}{j{c}}}Ah{}}{{{j{c}}}Ah{}}{{{j{N`}}}N`}{{{j{Nf}}}Nf}{{{j{Nh}}}Nh}{{{j{Nj}}}Nj}{{{j{Nl}}}Nl}{{{j{Nn}}}Nn}{{{j{O`}}}O`}{{{j{Ob}}}Ob}{{{j{Od}}}Od}{{{j{Of}}}Of}{{{j{Oh}}}Oh}{{{j{Oj}}}Oj}{{{j{Ol}}}Ol}{{{j{On}}}On}{{{j{A@`}}}A@`}{{{j{A@b}}}A@b}{{{j{A@d}}}A@d}{{{j{A@f}}}A@f}{{j{j{lc}}}Ah{}}00000000000000000{{jAj}Ah}00000000000000000{{{j{N`}}{j{N`}}}Gb}{{{j{Nh}}{j{Nh}}}Gb}{{{j{Nl}}{j{Nl}}}Gb}{{{j{O`}}{j{O`}}}Gb}{{{j{Od}}{j{Od}}}Gb}{{{j{Oh}}{j{Oh}}}Gb}{{{j{Ol}}{j{Ol}}}Gb}{{{j{A@`}}{j{A@`}}}Gb}{{{j{A@d}}{j{A@d}}}Gb}{dc{}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}00{{}Nh}{{}Nl}{{}O`}{{}Od}{{}Oh}{{}Ol}{{}A@`}{{}A@d}{B`{{j{c}}}{}}00000000000000000{B`{{j{lc}}}{}}00000000000000000{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{B`Ah}00000000000000000{{{j{N`}}{j{N`}}}Bl}{{{j{Nh}}{j{Nh}}}Bl}{{{j{Nl}}{j{Nl}}}Bl}{{{j{O`}}{j{O`}}}Bl}{{{j{Od}}{j{Od}}}Bl}{{{j{Oh}}{j{Oh}}}Bl}{{{j{Ol}}{j{Ol}}}Bl}{{{j{A@`}}{j{A@`}}}Bl}{{{j{A@d}}{j{A@d}}}Bl}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{j{j{c}}}Bl{}}00000000000000000{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}000{{{j{N`}}{j{lCd}}}Cf}0{{{j{Nf}}{j{lCd}}}Cf}{{{j{Nh}}{j{lCd}}}Cf}0{{{j{Nj}}{j{lCd}}}Cf}{{{j{Nl}}{j{lCd}}}Cf}0{{{j{Nn}}{j{lCd}}}Cf}{{{j{O`}}{j{lCd}}}Cf}0{{{j{Ob}}{j{lCd}}}Cf}{{{j{Od}}{j{lCd}}}Cf}0{{{j{Of}}{j{lCd}}}Cf}{{{j{Oh}}{j{lCd}}}Cf}0{{{j{Oj}}{j{lCd}}}Cf}{{{j{Ol}}{j{lCd}}}Cf}0{{{j{On}}{j{lCd}}}Cf}{{{j{A@`}}{j{lCd}}}Cf}{{{j{A@b}}{j{lCd}}}Cf}{{{j{A@d}}{j{lCd}}}Cf}0{{{j{A@f}}{j{lCd}}}Cf}{cc{}}00000000000000000{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{{{j{N`}}{j{lc}}}AhGh}{{{j{Nh}}{j{lc}}}AhGh}{{{j{Nl}}{j{lc}}}AhGh}{{{j{O`}}{j{lc}}}AhGh}{{{j{Od}}{j{lc}}}AhGh}{{{j{Oh}}{j{lc}}}AhGh}{{{j{Ol}}{j{lc}}}AhGh}{{{j{A@`}}{j{lc}}}AhGh}{{{j{A@d}}{j{lc}}}AhGh}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{}B`}00000000000000000{{{j{{Nd{}{{Kb{c}}{Id{e}}}}}}}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{lc}}N`}AhNd}{{{j{lc}}Nl}AhNd}{{{j{lc}}A@d}AhNd}{{{j{lc}}Nh}AhNd}{{{j{lc}}Od}AhNd}{{{j{lc}}O`}AhNd}{{{j{lc}}A@`}AhNd}{{{j{lc}}Ol}AhNd}{{{j{lc}}Oh}AhNd}{{}c{}}00000000000000000{N`c{}}{{}c{}}00000000{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{j}{{}Nf}{{}Nj}{{}Nn}{{}Ob}{{}Of}{{}Oj}{{}On}{{}A@b}{{}A@f}{jB`}{{{j{Nf}}}B`}{{{j{Nj}}}B`}{{{j{Nn}}}B`}{{{j{Ob}}}B`}{{{j{Of}}}B`}{{{j{Oj}}}B`}{{{j{On}}}B`}{{{j{A@b}}}B`}{{{j{A@f}}}B`}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}00{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0000000{{{j{lNf}}}{{Cb{c}}}{}}{{{j{lNj}}}{{Cb{c}}}{}}{{{j{lNn}}}{{Cb{c}}}{}}{{{j{lOb}}}{{Cb{c}}}{}}{{{j{lOf}}}{{Cb{c}}}{}}{{{j{lOj}}}{{Cb{c}}}{}}{{{j{lOn}}}{{Cb{c}}}{}}{{{j{lA@b}}}{{Cb{c}}}{}}{{{j{lA@f}}}{{Cb{c}}}{}}8765432109{{{j{lNf}}B`}{{Cb{c}}}{}}{{{j{lNj}}B`}{{Cb{c}}}{}}{{{j{lNn}}B`}{{Cb{c}}}{}}{{{j{lOb}}B`}{{Cb{c}}}{}}{{{j{lOf}}B`}{{Cb{c}}}{}}{{{j{lOj}}B`}{{Cb{c}}}{}}{{{j{lOn}}B`}{{Cb{c}}}{}}{{{j{lA@b}}B`}{{Cb{c}}}{}}{{{j{lA@f}}B`}{{Cb{c}}}{}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{}{{Gl{c}}}{}}00000000{{{j{N`}}{j{N`}}}{{Cb{Gb}}}}{{{j{Nh}}{j{Nh}}}{{Cb{Gb}}}}{{{j{Nl}}{j{Nl}}}{{Cb{Gb}}}}{{{j{O`}}{j{O`}}}{{Cb{Gb}}}}{{{j{Od}}{j{Od}}}{{Cb{Gb}}}}{{{j{Oh}}{j{Oh}}}{{Cb{Gb}}}}{{{j{Ol}}{j{Ol}}}{{Cb{Gb}}}}{{{j{A@`}}{j{A@`}}}{{Cb{Gb}}}}{{{j{A@d}}{j{A@d}}}{{Cb{Gb}}}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}e}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}000{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}e{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}d}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}1{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}01{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}e}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}00{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}00{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}d}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{Nf}}}{{Gn{B`{Cb{B`}}}}}}{{{j{Nj}}}{{Gn{B`{Cb{B`}}}}}}{{{j{Nn}}}{{Gn{B`{Cb{B`}}}}}}{{{j{Ob}}}{{Gn{B`{Cb{B`}}}}}}{{{j{Of}}}{{Gn{B`{Cb{B`}}}}}}{{{j{Oj}}}{{Gn{B`{Cb{B`}}}}}}{{{j{On}}}{{Gn{B`{Cb{B`}}}}}}{{{j{A@b}}}{{Gn{B`{Cb{B`}}}}}}{{{j{A@f}}}{{Gn{B`{Cb{B`}}}}}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}cc}{{Gn{ee}}}{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}};;{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{jc{}}00000000000000000{jC`}0000000{c{{Bd{e}}}{}{}}00000000000000000{{}{{Bd{c}}}{}}00000000000000000{jDd}00000000000000000{{{j{{Nd{}{{Kb{c}}{Id{e}}}}}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{}c{}}00000000000000000{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}e}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}0{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}e{j{e}}}Ah{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}{{{j{l{Nd{}{{Kb{c}}{Id{e}}}}}}{j{e}}{j{e}}c}e{}{Gj{Il{e}{{Ih{e}}}}{In{e}{{Ih{e}}}}{Ij{e}{{Ih{e}}}}HjJbJ`}}````````````{{}B`}`000`````````````````````````{j{{j{c}}}{}}0{{{j{l}}}{{j{lc}}}{}}0{{{j{{A@h{c}}}}}{{A@h{c}}}Gj}{{j{j{lc}}}Ah{}}{{jAj}Ah}{A@h}{{}{{A@h{c}}}Lh}{B`{{j{c}}}{}}0{B`{{j{lc}}}{}}0{c{{Bd{{A@h{e}}}}}BfLj}{B`Ah}0{{{j{{A@h{c}}}}{j{lCd}}}CfHj}{cc{}}0{A@hCl}8{{{j{{A@h{c}}}}B`}{{j{e}}}Gj{}}{{{j{{A@h{c}}}}A@j}{{j{e}}}Gj{}}{{{j{l{A@h{c}}}}B`}{{j{le}}}Gj{}}{{}B`}0{{}c{}}0={{{j{{A@h{c}}}}e}BdM`Cn}{jc{}}{c{{Bd{e}}}{}{}}0{{}{{Bd{c}}}{}}0{jDd}0{{}c{}}0`{{}D`}008888{{{j{l{A@l{c}}}}N`}AhFb}{{{j{l{A@l{c}}}}e}AhFb{}}{{{j{l{A@l{c}}}}{Hh{eHf}}}AhFb{}}{{{j{l{A@l{c}}}}{j{e}}{j{e}}gg}{{Gn{ee}}}Fb{}{}}{{{j{l{A@l{c}}}}}eFb{}}0{{{j{l{A@l{c}}}}{j{e}}{j{e}}g}eFb{}{}}{{{j{l{A@l{c}}}}{j{e}}}AhFb{}}{{{j{l{A@l{c}}}}{j{e}}ddg}eFb{}{}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{c}}{j{c}}}Ah{}}{{{j{c}}}Ah{}}{dc{}}{{{j{l{A@l{c}}}}{j{e}}g}eFb{}{}}00{{B`Bh}{{A@l{c}}}Fb}{{{j{l{A@l{c}}}}}{{Gn{N`d}}}Fb}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}<<{B`Ah}{{{j{l{A@l{c}}}}{j{e}}{j{e}}}eFb{}}6666{cc{}}{{{j{l{A@l{c}}}}d}B`Fb}{{{j{l{A@l{c}}}}d}AjFb}1{A@lBl}{{{j{l{A@l{c}}}}}AhFb}{{}B`}{{{j{{A@l{c}}}}}eFb{}}{A@lD`}{{}c{}}{{{j{l{A@l{c}}}}{j{e}}}eFb{}}{A@lCl}0{A@lh}0{{{j{l{A@l{c}}}}{j{e}}{j{e}}g}eFb{}{}}0000000{{{j{{A@l{c}}}}}D`Fb}101{{{j{l{A@l{c}}}}{j{e}}e}AhFb{}}0{{{j{l{A@l{c}}}}{j{e}}e{j{e}}}AhFb{}}0{A@lA@h}0{{{j{l{A@l{c}}}}{j{e}}}AhFb{}}===7{A@lB`}800{{{j{l{A@l{c}}}}e}AhFb{}}777{{{j{l{A@l{c}}}}}N`Fb}{{{j{l{A@l{c}}}}{j{e}}{j{e}}gg}{{Gn{ee}}}Fb{}{}}99{{{j{l{A@l{c}}}}{j{e}}g}eFb{}{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}{{{j{l{A@l{c}}}}B`}AhFb}0{{{j{{A@l{c}}}}e}gFb{}{}}{{}c{}}{{{j{l{A@l{c}}}}MlD`}AhFb}{{{j{l{A@l{c}}}}Mlc}AhFb}{{{j{l{A@l{c}}}}{j{e}}{j{e}}g}eFb{}{}}````````````{{}{{h{Hf}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{Hf}}}Hf}{{j{j{lc}}}Ah{}}{{jAj}Ah}{{{j{Hf}}{j{Hf}}}Gb}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}{B`Ah}{{{j{Hf}}{j{Hf}}}Bl}{{j{j{c}}}Bl{}}0{{{j{Hf}}{j{lCd}}}Cf}{cc{}}{dHf}{{{j{Hf}}{j{lc}}}AhGh}{{}B`}{{}c{}}{{{j{Hf}}}Bl}{{{j{Hf}}{j{{Hn{c}}}}}{{Cb{B`}}}Md}{{{j{Hf}}}B`}{{{j{Hf}}{j{Hf}}}{{Cb{Gb}}}}3{jc{}}{{{j{Hf}}}d}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}{{}c{}}{{}D`}<```````````````{j{{j{c}}}{}}0{{{j{l}}}{{j{lc}}}{}}0{A@nAA`}{{{j{H`}}}H`}{{j{j{lc}}}Ah{}}{{jAj}Ah}{{{j{{A@n{c}}}}{j{e}}}AAbAAd{}}{A@nAAf}{B`{{j{c}}}{}}0{B`{{j{lc}}}{}}0{A@nAAh}{B`Ah}0{{{j{H`}}{j{H`}}}Bl}{{j{j{c}}}Bl{}}0{{{j{H`}}{j{lCd}}}Cf}{cc{}}0{B`{{h{{Hb{H`}}}}}}{{{j{{A@n{c}}}}}{{j{{AA`{c}}}}}AAd}{{{j{{A@n{c}}}}{j{e}}}{{Cb{{j{{AAl{c{AAj{c}}}}}}}}}AAd{}}{{{j{{A@n{c}}}}}{{j{{AAf{c}}}}}AAd}{{{j{{A@n{c}}}}AAb}{{AAj{c}}}AAd}{{{j{H`}}{j{lc}}}AhGh}{{}B`}0{{}c{}}0{{{j{{A@n{c}}}}}cAAd}{A@n}{jc{}}{c{{Bd{e}}}{}{}}0{{}{{Bd{c}}}{}}0{jDd}0{{{j{{A@n{c}}}}}{{j{{AAl{c{AAj{c}}}}}}}AAd}{{}c{}}0{A@nj}`````````````````````````{AAn}{AB`}{ABbh}1{ABb}{j{{j{c}}}{}}00000000{{{j{l}}}{{j{lc}}}{}}00000000{ABdAB`}{{{j{ABf}}}ABf}{{{j{{AAn{c}}}}}{{AAn{c}}}Gj}{{{j{{ABh{c}}}}}{{ABh{c}}}Gj}{{{j{{ABj{c}}}}}{{ABj{c}}}{GjMd}}{{{j{ABl}}}ABl}{{j{j{lc}}}Ah{}}0000{{jAj}Ah}0000{ABhAAn}{{{j{{ABd{c}}}}{j{e}}}AAbAAd{}}{ABdj}{ABnABh}{B`{{j{c}}}{}}00000000{B`{{j{lc}}}{}}00000000{c{{Bd{ABl}}}Bf}4{B`Ah}00000000{{{j{ABf}}{j{ABf}}}Bl}{{{j{ABl}}{j{ABl}}}Bl}{{j{j{c}}}Bl{}}0{{{j{{ABj{c}}}}e}{{Bd{{AC`{c}}{ACb{e}}}}}Md{}}{ABnABj}{{{j{ABl}}{j{lCd}}}Cf}0{cc{}}00000000{AB`}{ABb}{{{j{{ABd{c}}}}}{{j{{AB`{c}}}}}AAd}{{{j{{ABd{c}}}}{j{e}}}{{Cb{{j{{AAl{c{AAj{c}}}}}}}}}AAd{}}{{{j{{AAn{c}}}}{j{ABf}}}{{Cb{{j{c}}}}}{}}{{{j{{ABd{c}}}}}{{j{{AAf{c}}}}}AAd}{{{j{{ABd{c}}}}AAb}{{AAj{c}}}AAd}{{{j{{AB`{c}}}}ABl}{{j{e}}}Fb{}}{{}B`}00000000{{}c{}}00000000{{{AAn{c}}}e{}{}}{{{ABh{c}}}e{}{}}{{{ABj{c}}}eMd{}}{AAnh}{ABnACd}{jBl}{{{j{{ABd{c}}}}}cAAd}{ABd}{{j{j{l{Jf{ACfc}}}}}C`{}}{{{AAn{c}}g}{{AAn{e}}}{}{}{{ACh{c}{{Ih{e}}}}}}1{{{j{ABl}}c}BdCn}{ABhh}3{jc{}}0000{jC`}{c{{Bd{e}}}{}{}}00000000{{}{{Bd{c}}}{}}00000000{jDd}00000000{{{j{{ABd{c}}}}}{{j{{AAl{c{AAj{c}}}}}}}AAd}{{}c{}}00000000{ABbh}{AAnh}{ABjABh}0`{{{j{l{ACj{c}}}}Mh}AhACl}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}{B`Ah}{cc{}}{{}B`}{{}c{}}{ACjMh}{{{j{{ACn{c}}}}AAh}{{ACj{c}}}ACl}{ACjh}0{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}{{}c{}}{{ABb{j{{ACn{c}}}}AAhe{j{AD`}}{j{lg}}}{{Gn{{ABn{c}}}}}ACl{{ADb{c}}Gj}{ADdADf}}{{AD`eAAhj{j{{ABn{c}}}}}BlACl{Gj{ADb{c}}}}```{j{{j{c}}}{}}00{{{j{l}}}{{j{lc}}}{}}00{ADhADj}{B`{{j{c}}}{}}00{B`{{j{lc}}}{}}00{B`Ah}00{ADj}{ADlADj}{cc{}}00{{{j{{ADj{c{Cl{c}}}}}}{j{{Hb{H`}}}}}{{Cb{{j{c}}}}}{}}{{}B`}004{{}c{}}00{ADjh}{B`{{ADl{c}}}ACl}{ADhACd}{ADhADn}{ADhAC`}{ADjCl}0;{c{{Bd{e}}}{}{}}00{{}{{Bd{c}}}{}}00{jDd}00{{}c{}}00{ADhADj}0``{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{AE`}}}AE`}{{j{j{lc}}}Ah{}}{{jAj}Ah}{B`{{j{c}}}{}}{B`{{j{lc}}}{}}{B`Ah}{{{j{AE`}}{j{lCd}}}Cf}0{cc{}}{{}B`}{{}c{}}{{AAh{j{{ACn{c}}}}{ADl{c}}{j{{Hn{K`}}}}{j{le}}}{{Bd{{ADh{c}}AE`}}}ACl{ADdADf}}{jc{}}{jC`}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{jDd}{{}c{}}{{AAhj{j{{Hn{K`}}}}{j{{ADh{c}}}}}BlACl}`````{j{{j{c}}}{}}000{{{j{l}}}{{j{lc}}}{}}000{AEbAEd}{fAEb}{{}{{Cb{{Gn{AEfAEf}}}}}}{B`{{j{c}}}{}}000{B`{{j{lc}}}{}}000{B`Ah}000{cc{}}000{{{j{lMf}}{Cl{Aj}}}Al}{{{j{lAEb}}{Cl{Aj}}}Al}{{{j{lAEh}}{Cl{Aj}}}Al}{{{j{lMf}}An}Ah}{{{j{lAEb}}An}Ah}{{{j{lAEh}}An}Ah}{AEbAEf}0{{}B`}000{{}c{}}00022{AEj}{{{j{lAEb}}}AEl}{c{{Bd{e}}}{}{}}000{{}{{Bd{c}}}{}}000{jDd}000{{}c{}}0005````{j{{j{c}}}{}}0{{{j{l}}}{{j{lc}}}{}}0{{{j{AEn}}}AEn}{{{j{{Hh{ce}}}}}{{Hh{ce}}}Gj{GjAF`}}{{j{j{lc}}}Ah{}}0{{jAj}Ah}0{B`{{j{c}}}{}}0{B`{{j{lc}}}{}}0{B`Ah}0{{{j{AEn}}{j{lCd}}}Cf}{{{j{{Hh{ce}}}}{j{lCd}}}Cf{AFbFb}AF`}{{{j{{Hh{ce}}}}{j{lCd}}}CfHj{HjAF`}}{cc{}}0{{}B`}0{{}c{}}0{{{Hh{ce}}}{{AFd{ce}}}{}AF`}{{AEnce{j{{Hn{e}}}}}{{Hh{ec}}}AF`{Gj{Il{}{{Ih{}}}}{In{}{{Ih{}}}}{Ij{}{{Ih{}}}}HjJ`Jb}}{{{j{{Hh{ce}}}}}c{Gj{Il{}{{Ih{}}}}{In{}{{Ih{}}}}{Ij{}{{Ih{}}}}HjJ`Jb}AF`}{{ce{h{c}}}{{Hh{ce}}}{Gj{Il{}{{Ih{}}}}{In{}{{Ih{}}}}{Ij{}{{Ih{}}}}HjJ`Jb}AF`}{{c{h{e}}}{{Hh{ec}}}AF`{}}{jc{}}0{jC`}{c{{Bd{e}}}{}{}}0{{}{{Bd{c}}}{}}0{jDd}0{{}c{}}076{DnAFf}{B`C`}","D":"DMn","p":[[1,"i32"],[1,"u32"],[5,"HostProgram",22],[5,"Vec",3112],[1,"reference",null,null,1],[0,"mut"],[6,"StepFrequency",22],[5,"VmConfiguration",22],[5,"Start",22],[5,"Symbol",22],[5,"Meta",22],[1,"unit"],[1,"u8"],[5,"Preimage",22],[5,"Hint",22],[1,"usize"],[5,"Page",22],[6,"Result",3113,null,1],[10,"Deserializer",3114],[5,"State",22],[5,"ParsePreimageKeyError",22],[1,"bool"],[5,"PreimageKey",22],[5,"String",3115],[6,"Option",3116,null,1],[5,"Formatter",3117],[8,"Result",3117],[5,"MipsVmConfigurationArgs",314],[1,"str"],[1,"array"],[10,"Serializer",3118],[1,"u64"],[5,"Instant",3119],[5,"TypeId",3120],[5,"Command",3121],[6,"Commands",285],[5,"ArgMatches",3122],[8,"Error",3123],[5,"RunArgs",314],[5,"GenStateJsonArgs",314],[6,"Cannon",314],[5,"Id",3124],[5,"ElfBytes",3125],[10,"EndianParse",3126],[6,"Architecture",428],[5,"Path",3127],[6,"Error",448],[6,"Constraint",448],[10,"Field",3128],[6,"Steps",521],[6,"ColumnAlias",521],[5,"StepsIter",521],[6,"Sponges",521],[5,"SpongesIter",521],[6,"Absorbs",521],[5,"AbsorbsIter",521],[6,"Ordering",3129],[8,"KeccakWitness",521],[5,"Box",3130,null,1],[10,"Hasher",3131],[10,"Clone",3132],[5,"IterBridge",3133],[1,"tuple",null,null,1],[6,"RelationColumnType",2643],[6,"Column",3134],[5,"Env",748],[6,"LookupTableIDs",2591],[5,"RAMLookup",3063],[10,"Debug",3117],[5,"KeccakEnv",775],[1,"slice"],[5,"Env",925],[10,"LogupHelpers",804],[17,"Variable"],[10,"Interpreter",827],[17,"Output"],[10,"Mul",3135],[10,"Add",3135],[10,"Sub",3135],[10,"One",3136],[10,"Zero",3136],[10,"KeccakInterpreter",827],[5,"HashMap",3137],[6,"ColumnAlias",964],[8,"MIPSWitness",964],[6,"Instruction",1071],[5,"Env",1004],[8,"E",0],[17,"Position"],[10,"InterpreterEnv",1071],[5,"InstructionIter",1071],[6,"RTypeInstruction",1071],[5,"RTypeInstructionIter",1071],[6,"JTypeInstruction",1071],[5,"JTypeInstructionIter",1071],[6,"ITypeInstruction",1071],[5,"ITypeInstructionIter",1071],[5,"InstructionParts",1450],[5,"Registers",1482],[10,"Default",3138],[10,"Deserialize",3114],[17,"Item"],[10,"Iterator",3139],[10,"Serialize",3118],[5,"Env",1523],[10,"PrimeField",3140],[10,"PreImageOracleT",2994],[5,"LookupMultiplicities",1523],[5,"SyscallEnv",1523],[6,"Column",1683],[5,"Env",1718],[6,"Instruction",1792],[8,"E",1683],[10,"InterpreterEnv",1792],[5,"InstructionIter",1792],[6,"RInstruction",1792],[5,"RInstructionIter",1792],[6,"IInstruction",1792],[5,"IInstructionIter",1792],[6,"SInstruction",1792],[5,"SInstructionIter",1792],[6,"SBInstruction",1792],[5,"SBInstructionIter",1792],[6,"UInstruction",1792],[5,"UInstructionIter",1792],[6,"UJInstruction",1792],[5,"UJInstructionIter",1792],[6,"SyscallInstruction",1792],[5,"SyscallInstructionIter",1792],[6,"MInstruction",1792],[5,"MInstructionIter",1792],[5,"Registers",2412],[6,"RegisterAlias",2412],[5,"Env",2493],[5,"ColumnEnvironment",2643],[5,"BerkeleyChallenges",3141],[6,"Domain",3142],[10,"FftField",3143],[5,"Constants",3144],[5,"EvaluationDomains",3142],[5,"Radix2EvaluationDomain",3145],[5,"Evaluations",3146],[5,"ColumnEnv",2696],[5,"LookupChallenges",2696],[5,"LookupProofInput",2696],[5,"LookupEvalEnvironment",2696],[6,"LookupColumns",2696],[5,"AllColumns",2696],[5,"Eval",2696],[6,"LookupChallengeTerm",2696],[5,"Proof",2696],[5,"PointEvaluations",3147],[6,"ExprError",3144],[5,"OpeningProof",3148],[5,"CacheId",3144],[10,"FnMut",3149],[5,"LookupEnvironment",2897],[10,"KimchiCurve",3150],[5,"SRS",3148],[8,"ELookup",2696],[10,"FqSponge",3151],[10,"RngCore",3152],[10,"CryptoRng",3152],[5,"Proof",2917],[5,"WitnessColumns",2917],[5,"ProofInputs",2917],[5,"PolyComm",3153],[6,"ProverError",2971],[5,"PreImageOracle",2994],[5,"Command",3154],[5,"RW",2994],[5,"NullPreImageOracle",2994],[5,"ReadWrite",2994],[5,"Child",3154],[6,"LookupMode",3063],[10,"LookupTableID",3155],[10,"Display",3117],[5,"Logup",3155],[5,"ExitCode",3154],[10,"BoolHelpers",804],[10,"ArithHelpers",804]],"r":[[8,3063],[452,521],[466,521],[468,521],[953,1071],[954,1071],[955,1071],[957,1071]],"b":[[145,"impl-Display-for-State"],[146,"impl-Debug-for-State"],[662,"impl-Index%3CSteps%3E-for-Witness%3CN_ZKVM_KECCAK_REL_COLS,+T%3E"],[663,"impl-Index%3CColumnAlias%3E-for-Witness%3CN_ZKVM_KECCAK_REL_COLS,+T%3E"],[664,"impl-IndexMut%3CColumnAlias%3E-for-Witness%3CN_ZKVM_KECCAK_REL_COLS,+T%3E"],[665,"impl-IndexMut%3CSteps%3E-for-Witness%3CN_ZKVM_KECCAK_REL_COLS,+T%3E"],[991,"impl-Index%3CInstruction%3E-for-Witness%3CN_MIPS_COLS,+T%3E"],[992,"impl-Index%3CColumnAlias%3E-for-Witness%3CN_MIPS_COLS,+T%3E"],[993,"impl-IndexMut%3CColumnAlias%3E-for-Witness%3CN_MIPS_COLS,+T%3E"],[994,"impl-IndexMut%3CInstruction%3E-for-Witness%3CN_MIPS_COLS,+T%3E"],[2084,"impl-Debug-for-Instruction"],[2085,"impl-Display-for-Instruction"],[2087,"impl-Debug-for-RInstruction"],[2088,"impl-Display-for-RInstruction"],[2090,"impl-Display-for-IInstruction"],[2091,"impl-Debug-for-IInstruction"],[2093,"impl-Display-for-SInstruction"],[2094,"impl-Debug-for-SInstruction"],[2096,"impl-Display-for-SBInstruction"],[2097,"impl-Debug-for-SBInstruction"],[2099,"impl-Display-for-UInstruction"],[2100,"impl-Debug-for-UInstruction"],[2102,"impl-Debug-for-UJInstruction"],[2103,"impl-Display-for-UJInstruction"],[2107,"impl-Display-for-MInstruction"],[2108,"impl-Debug-for-MInstruction"],[2475,"impl-Index%3Cusize%3E-for-Registers%3CT%3E"],[2476,"impl-Index%3CRegisterAlias%3E-for-Registers%3CT%3E"],[2799,"impl-Debug-for-LookupChallengeTerm"],[2800,"impl-Display-for-LookupChallengeTerm"],[2981,"impl-Debug-for-ProverError"],[2982,"impl-Display-for-ProverError"],[3084,"impl-Display-for-RAMLookup%3CF,+ID%3E"],[3085,"impl-Debug-for-RAMLookup%3CT,+ID%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAALkJxgAAAAQABgAGAA4AAAAQAAAAFQCGAKQAAACpABYAzABhAC8BAwA0AT8AeAEQAI0BJwC2AQAAuAEFAMEBBwDKAQAAzAEXAOYBBQDtAQcA9wECAP8BCQAKAgAADgIBABECAAATAgAAFQIBABoCCgAmAgEAKQIDAC8CAAAzAi0AYgIpAJMCAwCZAggAqgJCAO4CCAD4AgQA/gIAAAEDBgAJAwQADwMEABUDAAAcAwMAIQMAACwDAAA2AwAAOQMAAD0DAQCfAwcAqAMEAK4DAACyAwYAugMCAL4DAADAAwQAxgMAAMsDAADNAwgA1wMGAN8DAADiAwIA5gMGAO4DGwALBAAADQQBABAEAgAUBAsAIQQnAEoEAABMBAIAUAQYAGoEAQBtBCYAmQQAAJwEAACiBA8AtQQdANUEEwDrBAsA+AQHAAQFBwAUBQUAGwUOADMFDgBIBQcAUQUDAFYFBwBmBQAAaAUDAG4FAgB1BQMAfQUsAKsFEAC9BQEAwAUTANUFCwDiBQUA6QUKAPUFAAD5BTMAMAYKAD4GDgBOBgAAUAYfAHEGFwCKBgIAjgYAAJAGAACTBhsAsAYAALIGIgDXBgEA2gYCAN4GIgAQBwAAEgcBABUHAAAgBwAAKAcAACoHAAAtBwAALwcBADIHAABBBwAAQwcCAEcHAABJBwIAUwcAAFYHAABcByMAggdAAMUHKwDzBxoADwgRACUIGQBRCAoAXQgUAHcIAACMCB4AtggRAMkICADTCBEA7AgAAO4IBgD5CAgABgllAG4JBgB3CQAAeQkAAHsJAgCBCQAAgwkJAJAJBACWCREAqwkFALMJCgDCCSAA5AkHAO0JDgD9CRMAEgoNACQKAAAnCgAALAoNADsKAgA/CgoATAoHAFUKCQBgCgMAZQoDAGoKBQByCgcAfAoAAH4KCQCJCgIAjQoAAI8KBACVCgQAmwpWAPsKEAAVCzwAVAsEAFoLAABdCwEAYAsDAGULFQB+CwQAhgsBAIkLEwCeCwkAqQsAAKwLIgDTCwsA4wsUAPoLFAARDAEAGgwKACcMAQA=","P":[[47,"T"],[71,""],[77,"T"],[83,""],[94,"T"],[118,"__D"],[122,""],[139,"K"],[141,""],[155,"T"],[163,""],[164,"T"],[168,"FromStr::Err"],[169,""],[191,"U"],[203,""],[219,"__S"],[221,""],[230,"T"],[236,""],[237,"U,T"],[249,"U"],[261,""],[273,"V"],[287,""],[289,"T"],[292,""],[293,"T"],[294,""],[297,"T"],[299,""],[301,"T"],[302,""],[306,"U"],[307,"T"],[308,"U,T"],[309,"U"],[310,""],[313,"V"],[321,""],[329,"T"],[337,""],[341,"T"],[345,""],[355,"T"],[363,""],[371,"T"],[375,""],[392,"U"],[396,""],[399,"T"],[403,"U,T"],[407,"U"],[411,""],[424,"V"],[431,"T"],[435,""],[436,"T"],[437,""],[438,"U"],[439,"T"],[440,""],[441,"U,T"],[442,"U"],[443,""],[444,"V"],[473,"T"],[477,""],[479,"T"],[481,""],[485,"T"],[489,""],[494,"K"],[498,""],[500,"T"],[503,""],[506,"U"],[508,"F"],[509,""],[510,"T"],[512,"U,T"],[514,"U"],[516,""],[518,"V"],[534,""],[569,"T"],[583,""],[590,"T"],[597,""],[611,"T"],[625,""],[636,"K"],[644,""],[651,"T"],[658,"__H"],[662,"T,Index::Output"],[666,""],[673,"U"],[680,"IntoIterator::IntoIter"],[681,"I"],[684,""],[692,"Iterator::Item"],[701,"T"],[704,""],[713,"T"],[720,"U,T"],[727,"U"],[734,""],[741,"V"],[749,"F,Interpreter::Variable"],[750,"T"],[752,"Fp"],[753,"T"],[754,""],[755,"Interpreter::Variable"],[756,"F,Interpreter::Variable"],[758,""],[759,"F"],[760,"T"],[762,""],[763,"Fp"],[764,"T"],[765,""],[766,"U"],[767,""],[768,"T"],[769,"U,T"],[770,"U"],[771,"Interpreter::Variable"],[772,""],[773,"F,Interpreter::Variable"],[774,"V"],[776,"T"],[778,"F"],[779,"T"],[780,""],[782,"F"],[783,"T"],[785,""],[786,"F"],[787,"T"],[788,""],[789,"U"],[790,"F"],[794,""],[795,"T"],[796,"U,T"],[797,"U"],[798,""],[799,"F"],[800,"V"],[801,""],[802,"F"],[807,"Interpreter::Variable"],[835,"F,Interpreter::Variable"],[836,"Interpreter::Variable"],[837,""],[839,"Interpreter::Variable"],[840,""],[841,"Interpreter::Variable"],[842,""],[843,"Interpreter::Variable"],[844,""],[847,"Interpreter::Variable"],[848,""],[849,"Interpreter::Variable"],[868,""],[877,"Interpreter::Variable"],[926,"F,Interpreter::Variable"],[927,"T"],[929,"F"],[930,"T"],[931,""],[932,"Interpreter::Variable"],[933,"F,Interpreter::Variable"],[935,"F"],[936,"T"],[938,""],[939,"F"],[940,"T"],[941,""],[942,"U"],[943,""],[945,"T"],[946,"U,T"],[947,"U"],[948,""],[950,"F,Interpreter::Variable"],[951,"V"],[952,""],[975,"T"],[977,""],[978,"T"],[979,""],[982,"T"],[984,""],[986,"K"],[988,""],[989,"T"],[990,"__H"],[991,"T,Index::Output"],[995,""],[996,"U"],[997,""],[999,"T"],[1000,"U,T"],[1001,"U"],[1002,""],[1003,"V"],[1005,"Fp"],[1006,"Fp,InterpreterEnv::Variable"],[1008,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1009,"Fp,InterpreterEnv::Position"],[1011,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1013,"T"],[1015,"InterpreterEnv::Variable"],[1019,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1022,"Fp"],[1023,"T"],[1025,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1027,""],[1028,"Fp,InterpreterEnv::Variable"],[1029,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1033,"T"],[1034,"Fp"],[1040,""],[1041,"Fp,InterpreterEnv::Variable"],[1042,"U"],[1043,"Fp,InterpreterEnv::Variable"],[1044,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1049,"Fp,InterpreterEnv::Variable"],[1055,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1056,"Fp"],[1057,"Fp,InterpreterEnv::Variable"],[1058,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1065,"U,T"],[1066,"U"],[1067,""],[1068,"Fp,InterpreterEnv::Position,InterpreterEnv::Variable"],[1069,"V"],[1070,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1087,""],[1171,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1185,"T"],[1201,"InterpreterEnv::Variable"],[1204,""],[1212,"T"],[1220,""],[1232,"InterpreterEnv::Variable"],[1233,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1237,""],[1240,"T"],[1256,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1258,""],[1270,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1271,"K"],[1279,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1283,""],[1291,"T"],[1299,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1301,"__H"],[1305,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1307,""],[1315,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1316,"Env"],[1321,"U"],[1329,"IntoIterator::IntoIter"],[1330,"I"],[1334,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1335,""],[1345,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1351,"Iterator::Item"],[1359,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1360,"Iterator::Item"],[1364,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1365,"T"],[1369,""],[1373,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1396,""],[1400,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1404,""],[1405,"T"],[1413,"U,T"],[1421,"U"],[1429,""],[1437,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1438,"V"],[1446,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1451,"T"],[1453,""],[1454,"T"],[1455,""],[1458,"T"],[1460,"__D"],[1461,""],[1464,"K"],[1466,""],[1467,"T"],[1468,""],[1470,"U"],[1471,""],[1475,"__S"],[1476,""],[1477,"T"],[1478,"U,T"],[1479,"U"],[1480,""],[1481,"V"],[1482,""],[1492,"T"],[1496,""],[1498,"T"],[1501,"__D,T"],[1502,""],[1503,"T"],[1505,""],[1508,"T,Index::Output"],[1510,""],[1511,"U"],[1512,"T"],[1513,""],[1517,"T,__S"],[1518,"T"],[1519,"U,T"],[1520,"U"],[1521,""],[1522,"V"],[1525,""],[1533,"Fp,PreImageOracle"],[1534,"Fp,PreImageOracle,InterpreterEnv::Variable"],[1536,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1537,"Fp,PreImageOracle,InterpreterEnv::Position"],[1539,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1540,""],[1541,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1542,"T"],[1548,""],[1549,"InterpreterEnv::Variable"],[1552,""],[1553,"T"],[1554,""],[1555,"InterpreterEnv::Variable"],[1556,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1559,"PreImageOracle,Fp"],[1560,""],[1561,"Fp,PreImageOracle"],[1562,""],[1564,"T"],[1570,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1572,""],[1575,"Fp,PreImageOracle,InterpreterEnv::Variable"],[1576,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1580,"T"],[1583,"Fp,PreImageOracle"],[1586,""],[1588,"Fp,PreImageOracle"],[1589,""],[1592,"Fp,PreImageOracle,InterpreterEnv::Variable"],[1593,""],[1594,"U"],[1597,"Fp,PreImageOracle,InterpreterEnv::Variable"],[1598,""],[1608,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1611,""],[1612,"Fp,PreImageOracle"],[1613,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1614,"Fp,PreImageOracle"],[1615,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1616,""],[1621,"Fp,PreImageOracle,InterpreterEnv::Variable"],[1625,""],[1628,"Fp,PreImageOracle,InterpreterEnv::Variable"],[1630,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1631,"Fp,PreImageOracle"],[1632,""],[1633,"Fp,PreImageOracle"],[1636,""],[1642,"Fp,PreImageOracle,InterpreterEnv::Variable"],[1643,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1646,""],[1647,"Fp,PreImageOracle"],[1648,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1649,""],[1650,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1653,"T"],[1654,"U,T"],[1657,"U"],[1660,""],[1663,"Fp,PreImageOracle"],[1665,"Fp,PreImageOracle,InterpreterEnv::Position,InterpreterEnv::Variable"],[1666,"V"],[1669,"Fp,PreImageOracle"],[1671,"Fp,PreImageOracle,InterpreterEnv::Variable,InterpreterEnv::Position"],[1672,""],[1698,"T"],[1700,""],[1701,"T"],[1702,""],[1703,"T"],[1705,""],[1707,"K"],[1709,""],[1710,"T"],[1711,""],[1712,"U"],[1713,"T"],[1714,"U,T"],[1715,"U"],[1716,""],[1717,"V"],[1719,"Fp"],[1720,"Fp,InterpreterEnv::Variable"],[1722,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1723,"Fp,InterpreterEnv::Position"],[1725,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1726,"Fp,InterpreterEnv::Variable"],[1727,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1728,"T"],[1730,"InterpreterEnv::Variable"],[1733,""],[1734,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1737,"Fp"],[1738,"T"],[1740,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1742,""],[1743,"Fp,InterpreterEnv::Variable"],[1744,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1748,"T"],[1749,"Fp"],[1754,""],[1755,"Fp,InterpreterEnv::Variable"],[1756,"U"],[1757,"Fp,InterpreterEnv::Variable"],[1758,""],[1759,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1769,"Fp,InterpreterEnv::Variable"],[1774,"Fp"],[1775,""],[1778,"Fp,InterpreterEnv::Variable"],[1779,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1786,"U,T"],[1787,"U"],[1788,""],[1789,"Fp,InterpreterEnv::Position,InterpreterEnv::Variable"],[1790,"V"],[1791,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[1869,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1883,"T"],[1919,"InterpreterEnv::Variable"],[1921,""],[1939,"T"],[1957,""],[1984,"InterpreterEnv::Variable"],[1985,"InterpreterEnv::Position,InterpreterEnv::Variable"],[1988,""],[1996,"T"],[2032,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2034,""],[2061,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2062,"K"],[2080,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2084,""],[2110,"T"],[2128,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2130,"__H"],[2139,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2141,""],[2159,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2160,"Env"],[2169,"U"],[2187,"IntoIterator::IntoIter"],[2188,"I"],[2197,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2198,""],[2218,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2229,"Iterator::Item"],[2247,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2248,"Iterator::Item"],[2257,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2258,"T"],[2267,""],[2276,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2296,""],[2305,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2309,"T"],[2327,""],[2335,"U,T"],[2353,"U"],[2371,""],[2389,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2390,"V"],[2408,"InterpreterEnv::Position,InterpreterEnv::Variable"],[2424,""],[2454,"T"],[2460,""],[2462,"T"],[2467,"__D,T"],[2468,""],[2470,"T"],[2473,""],[2475,"T,Index::Output"],[2478,""],[2480,"U"],[2482,""],[2483,"T,__S"],[2484,"T"],[2485,"U,T"],[2487,"U"],[2489,""],[2491,"V"],[2494,""],[2501,"Fp"],[2502,"Fp,InterpreterEnv::Variable"],[2504,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[2505,"Fp,InterpreterEnv::Position"],[2507,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[2508,"Fp,InterpreterEnv::Variable"],[2509,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[2510,"T"],[2512,"InterpreterEnv::Variable"],[2515,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[2518,"Fp"],[2520,"T"],[2522,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[2524,""],[2525,"Fp,InterpreterEnv::Variable"],[2526,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[2530,"T"],[2531,"Fp"],[2534,""],[2535,"Fp"],[2536,""],[2537,"Fp,InterpreterEnv::Variable"],[2538,""],[2539,"U"],[2540,"Fp,InterpreterEnv::Variable"],[2541,""],[2545,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[2553,"Fp"],[2554,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[2555,"Fp"],[2556,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[2557,"Fp,InterpreterEnv::Variable"],[2561,""],[2563,"Fp,InterpreterEnv::Variable"],[2564,"Fp"],[2567,""],[2572,"Fp,InterpreterEnv::Variable"],[2573,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[2576,"Fp"],[2577,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[2581,"U,T"],[2582,"U"],[2583,""],[2584,"Fp"],[2586,"Fp,InterpreterEnv::Position,InterpreterEnv::Variable"],[2587,"V"],[2588,"Fp"],[2590,"Fp,InterpreterEnv::Variable,InterpreterEnv::Position"],[2603,""],[2604,"T"],[2606,""],[2607,"T"],[2608,""],[2610,"T"],[2612,""],[2614,"K"],[2616,""],[2617,"T"],[2618,""],[2619,"__H"],[2620,""],[2621,"U"],[2622,""],[2623,"F"],[2624,""],[2627,"T"],[2628,""],[2629,"U,T"],[2630,"U"],[2631,""],[2632,"V"],[2633,""],[2650,"T"],[2654,""],[2656,"T"],[2657,""],[2658,"F,ColumnEnvironment::Column"],[2659,""],[2660,"T"],[2664,""],[2668,"K"],[2670,""],[2671,"T"],[2673,""],[2674,"F"],[2675,"F,ColumnEnvironment::Column"],[2676,"F"],[2678,"__H"],[2679,""],[2681,"U"],[2683,"F"],[2684,""],[2685,"T"],[2686,"U,T"],[2688,"U"],[2690,""],[2692,"F"],[2693,"V"],[2695,""],[2726,"T"],[2744,""],[2746,"X"],[2748,"F"],[2749,""],[2750,"T"],[2755,""],[2761,"F,ColumnEnvironment::Column"],[2762,""],[2764,"T"],[2782,"__D"],[2783,""],[2795,"K"],[2797,"F,ColumnEvaluations::Column"],[2798,""],[2801,"T"],[2810,""],[2812,"F"],[2813,"F,ColumnEnvironment::Column"],[2814,"F"],[2817,"F,Index::Output"],[2818,""],[2827,"U"],[2836,"X,IntoIterator::IntoIter"],[2838,"F,IntoIterator::IntoIter"],[2839,""],[2842,"F"],[2843,""],[2844,"ChallengeTerm"],[2845,"X,Y,F"],[2846,"ChallengeTerm"],[2847,"__S"],[2848,""],[2849,"ChallengeTerm"],[2850,"T"],[2855,""],[2856,"U,T"],[2865,"U"],[2874,""],[2883,"F"],[2884,"V"],[2893,""],[2898,"G"],[2899,"T"],[2903,""],[2904,"T"],[2905,""],[2906,"U"],[2907,""],[2908,"G"],[2909,""],[2911,"U,T"],[2912,"U"],[2913,""],[2914,"V"],[2915,"G,EFqSponge,RNG"],[2916,"G,EFqSponge"],[2920,"T"],[2926,""],[2927,"T"],[2933,""],[2938,"T"],[2941,"G"],[2942,""],[2946,"U"],[2949,""],[2950,"G"],[2951,""],[2957,"U,T"],[2960,"U"],[2963,""],[2966,"V"],[2969,""],[2973,"T"],[2975,""],[2976,"T"],[2977,""],[2978,"T"],[2980,""],[2983,"T"],[2984,""],[2985,"U"],[2986,"G,RNG"],[2987,"T"],[2988,""],[2989,"U,T"],[2990,"U"],[2991,""],[2992,"V"],[2993,"G"],[2999,"T"],[3007,""],[3010,"T"],[3018,""],[3022,"T"],[3026,""],[3038,"U"],[3042,""],[3046,"U,T"],[3050,"U"],[3054,""],[3058,"V"],[3062,""],[3067,"T"],[3071,""],[3072,"T,ID"],[3073,"T"],[3075,""],[3077,"T"],[3081,""],[3084,"F,ID"],[3085,"T,ID"],[3086,"T"],[3088,""],[3090,"U"],[3092,"T,ID"],[3093,"ID,T"],[3094,"T,ID"],[3096,"ID,T"],[3097,"T"],[3099,""],[3100,"U,T"],[3102,"U"],[3104,""],[3106,"V"],[3108,"T,ID"],[3109,"ID,T"],[3110,""]]}],["pickles_o1vm",{"t":"HHHHH","n":["cannon_main","gen_state_json","main","pad","prove_and_verify"],"q":[[0,"pickles_o1vm"],[5,"o1vm::cli::cannon"],[6,"alloc::string"],[7,"core::result"],[8,"std::process"],[9,"mina_curves::pasta::fields::fp"],[10,"o1vm::preimage_oracle"],[11,"alloc::boxed"],[12,"o1vm::interpreters::mips::witness"],[13,"mina_curves::pasta::curves::vesta"],[14,"o1vm::pickles::proof"],[15,"rand::rngs::thread"],[16,"kimchi::circuits::domains"],[17,"poly_commitment::ipa"],[18,"o1vm"]],"i":"`````","f":"{bd}{f{{j{dh}}}}{{}l}{{{Af{{Ad{n{Ab{A`}}}}}}{Af{Ah{Al{Aj}}}}{Af{AhAn}}}d}{{{B`{n}}{Af{{Bb{Aj}}}}{Af{{Bf{{Bd{n}}}}}}{Al{Aj}}{Af{AhAn}}}d}","D":"`","p":[[5,"RunArgs",5],[1,"unit"],[5,"GenStateJsonArgs",5],[5,"String",6],[6,"Result",7,null,1],[5,"ExitCode",8],[8,"Fp",9],[10,"PreImageOracleT",10],[5,"Box",11,null,1],[5,"Env",12],[1,"reference",null,null,1],[0,"mut"],[8,"Vesta",13],[5,"ProofInputs",14],[5,"ThreadRng",15],[5,"EvaluationDomains",16],[5,"SRS",17],[8,"E",18],[1,"slice"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAUAAQAAAAUA","P":[]}],["plonk_neon",{"t":"","n":[],"q":[],"i":"","f":"","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["plonk_wasm",{"t":"HCHHHCHHCCCCCCCCCHCHCHFNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNFFINNNNHHHHHHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOFFINNNNHHHHHHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOCCFFOOONNNNNNNNNNNNNNNNNNONNHHHNNNNNONNNNNNNNOONNNNNNONOOONNNNNNNNNNNNNNNNNOOOONNNNNNOOFFOOONNNNNNNNNNNNNNNNNNONNHHHNNNNNONNNNNNNNOONNNNNNONOOONNNNNNNNNNNNNNNNNOOOONNNNNNOOFFFNNNNNNHHHHHHHHHHHONNNNNNNNNNNNNNNOHNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNHHHHHHHHHHHONNNNNNNNNNNNNNNONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCFFFFFFFNONNNNNNNNNNNNNNHHHHHNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONONNNNNNNNNNNNONONOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOFFFFFFFNONNNNNNNNNNNNNNHHHHHNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONONNNNNNNNNNNNONONOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOCCFFFFFFNNNNNNNNNNNNHHHHHHHHNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONONONONONONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNONONONONOONONNNNNNNNNNNNHONOONONONOHNNNNNNNNNNNNNNNNNNNONOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNONONONONNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOFFFFFFNNNNNNNNNNNNHHHHHHHHNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNONONONONONONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNONONONONOONONNNNNNNNNNNNHONOONONONOHNNNNNNNNNNNNNNNNNNNONOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNONONONONNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOCCFNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNNFNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNNHHCCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHCCFNNHHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNHHHHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFPINNNNCNNNNNNNNNNCNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["alert","circuit","console_log","create_zero_u32_ptr","free_u32_ptr","gate_vector","get_memory","get_memory_byte_length","oracles","pasta_fp_plonk_index","pasta_fq_plonk_index","plonk_proof","plonk_verifier_index","poly_comm","poseidon","projective","rayon","set_u32_ptr","srs","wait_until_non_zero","wasm_ocaml_serde","prover_to_json","WasmGateWires","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","describe","describe_vector","drop","fmt","fp","fq","from","from_abi","init","into","into_abi","is_none","long_ref_from_abi","new","none","ref_from_abi","ref_mut_from_abi","return_abi","to_owned","try_from","try_from_js_value","try_into","type_id","vector_from_abi","vector_into_abi","vzip","WasmFpGate","WasmFpGateVector","WasmGateVector","borrow","","borrow_mut","","caml_pasta_fp_plonk_circuit_serialize","caml_pasta_fp_plonk_gate_vector_add","caml_pasta_fp_plonk_gate_vector_create","caml_pasta_fp_plonk_gate_vector_digest","caml_pasta_fp_plonk_gate_vector_get","caml_pasta_fp_plonk_gate_vector_len","caml_pasta_fp_plonk_gate_vector_wrap","coeffs","deref","","deref_mut","","describe","","describe_vector","","drop","","from","","","","from_abi","","init","","into","","into_abi","","is_none","","long_ref_from_abi","","new","none","","ref_from_abi","","ref_mut_from_abi","","return_abi","","try_from","","try_from_js_value","","try_into","","typ","type_id","","vector_from_abi","","vector_into_abi","","vzip","","wires","WasmFqGate","WasmFqGateVector","WasmGateVector","borrow","","borrow_mut","","caml_pasta_fq_plonk_circuit_serialize","caml_pasta_fq_plonk_gate_vector_add","caml_pasta_fq_plonk_gate_vector_create","caml_pasta_fq_plonk_gate_vector_digest","caml_pasta_fq_plonk_gate_vector_get","caml_pasta_fq_plonk_gate_vector_len","caml_pasta_fq_plonk_gate_vector_wrap","coeffs","deref","","deref_mut","","describe","","describe_vector","","drop","","from","","","","from_abi","","init","","into","","into_abi","","is_none","","long_ref_from_abi","","new","none","","ref_from_abi","","ref_mut_from_abi","","return_abi","","try_from","","try_from_js_value","","try_into","","typ","type_id","","vector_from_abi","","vector_into_abi","","vzip","","wires","fp","fq","WasmFpOracles","WasmFpRandomOracles","alpha","alpha_chal","beta","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","describe","","describe_vector","","digest_before_evaluations","drop","","fp_oracles_create","fp_oracles_deep_copy","fp_oracles_dummy","from","","","from_abi","","gamma","init","","into","","into_abi","","is_none","","joint_combiner","joint_combiner_chal","long_ref_from_abi","","new","","none","","o","opening_prechallenges","","p_eval0","p_eval1","ref_from_abi","","ref_mut_from_abi","","return_abi","","set_opening_prechallenges","to_owned","","try_from","","try_from_js_value","","try_into","","type_id","","u","u_chal","v","v_chal","vector_from_abi","","vector_into_abi","","vzip","","zeta","zeta_chal","WasmFqOracles","WasmFqRandomOracles","alpha","alpha_chal","beta","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","describe","","describe_vector","","digest_before_evaluations","drop","","fq_oracles_create","fq_oracles_deep_copy","fq_oracles_dummy","from","","","from_abi","","gamma","init","","into","","into_abi","","is_none","","joint_combiner","joint_combiner_chal","long_ref_from_abi","","new","","none","","o","opening_prechallenges","","p_eval0","p_eval1","ref_from_abi","","ref_mut_from_abi","","return_abi","","set_opening_prechallenges","to_owned","","try_from","","try_from_js_value","","try_into","","type_id","","u","u_chal","v","v_chal","vector_from_abi","","vector_into_abi","","vzip","","zeta","zeta_chal","WasmPastaFpLookupTable","WasmPastaFpPlonkIndex","WasmPastaFpRuntimeTableCfg","borrow","","","borrow_mut","","","caml_pasta_fp_plonk_index_create","caml_pasta_fp_plonk_index_decode","caml_pasta_fp_plonk_index_domain_d1_size","caml_pasta_fp_plonk_index_domain_d4_size","caml_pasta_fp_plonk_index_domain_d8_size","caml_pasta_fp_plonk_index_encode","caml_pasta_fp_plonk_index_max_degree","caml_pasta_fp_plonk_index_public_inputs","caml_pasta_fp_plonk_index_read","caml_pasta_fp_plonk_index_serialize","caml_pasta_fp_plonk_index_write","data","deref","","","deref_mut","","","describe","","","describe_vector","","","drop","","","first_column","format_circuit_gate","from","","","from_abi","","","id","","init","","","into","","","into_abi","","","is_none","","","long_ref_from_abi","","","new","","none","","","ref_from_abi","","","ref_mut_from_abi","","","return_abi","","","try_from","","","try_from_js_value","","","try_into","","","type_id","","","vector_from_abi","","","vector_into_abi","","","vzip","","","WasmPastaFqLookupTable","WasmPastaFqPlonkIndex","WasmPastaFqRuntimeTableCfg","borrow","","","borrow_mut","","","caml_pasta_fq_plonk_index_create","caml_pasta_fq_plonk_index_decode","caml_pasta_fq_plonk_index_domain_d1_size","caml_pasta_fq_plonk_index_domain_d4_size","caml_pasta_fq_plonk_index_domain_d8_size","caml_pasta_fq_plonk_index_encode","caml_pasta_fq_plonk_index_max_degree","caml_pasta_fq_plonk_index_public_inputs","caml_pasta_fq_plonk_index_read","caml_pasta_fq_plonk_index_serialize","caml_pasta_fq_plonk_index_write","data","deref","","","deref_mut","","","describe","","","describe_vector","","","drop","","","first_column","from","","","from_abi","","","id","","init","","","into","","","into_abi","","","is_none","","","long_ref_from_abi","","","new","","none","","","ref_from_abi","","","ref_mut_from_abi","","","return_abi","","","try_from","","","try_from_js_value","","","try_into","","","type_id","","","vector_from_abi","","","vector_into_abi","","","vzip","","","fp","fq","WasmFpLookupCommitments","WasmFpOpeningProof","WasmFpProofEvaluations","WasmFpProverCommitments","WasmFpProverProof","WasmFpRuntimeTable","WasmVecVecFpPolyComm","aggreg","","borrow","","","","","","","borrow_mut","","","","","","","caml_pasta_fp_plonk_proof_batch_verify","caml_pasta_fp_plonk_proof_create","caml_pasta_fp_plonk_proof_deep_copy","caml_pasta_fp_plonk_proof_dummy","caml_pasta_fp_plonk_proof_verify","clone","","","","clone_into","","","","clone_to_uninit","","","","commitments","","create","delta","","deref","","","","","","","deref_mut","","","","","","","describe","","","","","","","describe_vector","","","","","","drop","","","","","","","evals","","fmt","from","","","","","","","","","","","","","","","","","from_abi","","","","","","","ft_eval1","init","","","","","","","into","","","","","","","into_abi","","","","","","","is_none","","","","","","long_ref_from_abi","","","","","","lookup","","lr_0","","lr_1","","new","","","","","none","","","","","","prev_challenges_comms","","prev_challenges_scalars","","proof","","public","public_","push","ref_from_abi","","","","","","ref_mut_from_abi","","","","","","return_abi","","","","","","","runtime","","serialize","set_aggreg","set_commitments","set_delta","set_evals","set_lookup","set_lr_0","set_lr_1","set_prev_challenges_comms","set_prev_challenges_scalars","set_proof","set_public_","set_runtime","set_sg","set_sorted","set_t_comm","set_w_comm","set_z_comm","sg","","sorted","","t_comm","","to_owned","","","","try_from","","","","","","","try_from_js_value","","","","","","try_into","","","","","","","type_id","","","","","","","vector_from_abi","","","","","","vector_into_abi","","","","","","vzip","","","","","","","w_comm","","z1","z2","z_comm","","WasmFqLookupCommitments","WasmFqOpeningProof","WasmFqProofEvaluations","WasmFqProverCommitments","WasmFqProverProof","WasmFqRuntimeTable","WasmVecVecFqPolyComm","aggreg","","borrow","","","","","","","borrow_mut","","","","","","","caml_pasta_fq_plonk_proof_batch_verify","caml_pasta_fq_plonk_proof_create","caml_pasta_fq_plonk_proof_deep_copy","caml_pasta_fq_plonk_proof_dummy","caml_pasta_fq_plonk_proof_verify","clone","","","","clone_into","","","","clone_to_uninit","","","","commitments","","create","delta","","deref","","","","","","","deref_mut","","","","","","","describe","","","","","","","describe_vector","","","","","","drop","","","","","","","evals","","fmt","from","","","","","","","","","","","","","","","","","from_abi","","","","","","","ft_eval1","init","","","","","","","into","","","","","","","into_abi","","","","","","","is_none","","","","","","long_ref_from_abi","","","","","","lookup","","lr_0","","lr_1","","new","","","","","none","","","","","","prev_challenges_comms","","prev_challenges_scalars","","proof","","public","public_","push","ref_from_abi","","","","","","ref_mut_from_abi","","","","","","return_abi","","","","","","","runtime","","serialize","set_aggreg","set_commitments","set_delta","set_evals","set_lookup","set_lr_0","set_lr_1","set_prev_challenges_comms","set_prev_challenges_scalars","set_proof","set_public_","set_runtime","set_sg","set_sorted","set_t_comm","set_w_comm","set_z_comm","sg","","sorted","","t_comm","","to_owned","","","","try_from","","","","","","","try_from_js_value","","","","","","try_into","","","","","","","type_id","","","","","","","vector_from_abi","","","","","","vector_into_abi","","","","","","vzip","","","","","","","w_comm","","z1","z2","z_comm","","fp","fq","WasmFpDomain","WasmFpLookupSelectors","WasmFpLookupVerifierIndex","WasmFpPlonkVerificationEvals","WasmFpPlonkVerifierIndex","WasmFpShifts","borrow","","","","","","borrow_mut","","","","","","caml_pasta_fp_plonk_verifier_index_create","caml_pasta_fp_plonk_verifier_index_deep_copy","caml_pasta_fp_plonk_verifier_index_deserialize","caml_pasta_fp_plonk_verifier_index_dummy","caml_pasta_fp_plonk_verifier_index_read","caml_pasta_fp_plonk_verifier_index_serialize","caml_pasta_fp_plonk_verifier_index_shifts","caml_pasta_fp_plonk_verifier_index_write","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","coefficients_comm","","complete_add_comm","","deref","","","","","","deref_mut","","","","","","describe","","","","","","describe_vector","","","","","","domain","drop","","","","","","emul_comm","","endomul_scalar_comm","","evals","","ffmul","","foreign_field_add_comm","","foreign_field_mul_comm","","from","","","","","","","","","","from_abi","","","","","","generic_comm","","group_gen","init","","","","","","into","","","","","","into_abi","","","","","","is_none","","","","","","joint_lookup_used","log_size_of_group","long_ref_from_abi","","","","","","lookup","","lookup_index","","lookup_info","","lookup_selectors","","lookup_table","","max_poly_size","mul_comm","","new","","","","","","none","","","","","","of_wasm","prev_challenges","psm_comm","","public_","range_check","","range_check0_comm","","range_check1_comm","","read_raw","ref_from_abi","","","","","","ref_mut_from_abi","","","","","","return_abi","","","","","","rot_comm","","runtime_tables_selector","","s0","s1","s2","s3","s4","s5","s6","set_coefficients_comm","set_complete_add_comm","set_emul_comm","set_endomul_scalar_comm","set_evals","set_ffmul","set_foreign_field_add_comm","set_foreign_field_mul_comm","set_generic_comm","set_lookup","set_lookup_index","set_lookup_info","set_lookup_selectors","set_lookup_table","set_mul_comm","set_psm_comm","set_range_check","set_range_check0_comm","set_range_check1_comm","set_rot_comm","set_runtime_tables_selector","set_sigma_comm","set_srs","set_table_ids","set_xor","set_xor_comm","shifts","sigma_comm","","srs","","table_ids","","to_owned","","","","","","to_wasm","try_from","","","","","","try_from_js_value","","","","","","try_into","","","","","","type_id","","","","","","vector_from_abi","","","","","","vector_into_abi","","","","","","vzip","","","","","","xor","","xor_comm","","zk_rows","WasmFqDomain","WasmFqLookupSelectors","WasmFqLookupVerifierIndex","WasmFqPlonkVerificationEvals","WasmFqPlonkVerifierIndex","WasmFqShifts","borrow","","","","","","borrow_mut","","","","","","caml_pasta_fq_plonk_verifier_index_create","caml_pasta_fq_plonk_verifier_index_deep_copy","caml_pasta_fq_plonk_verifier_index_deserialize","caml_pasta_fq_plonk_verifier_index_dummy","caml_pasta_fq_plonk_verifier_index_read","caml_pasta_fq_plonk_verifier_index_serialize","caml_pasta_fq_plonk_verifier_index_shifts","caml_pasta_fq_plonk_verifier_index_write","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","coefficients_comm","","complete_add_comm","","deref","","","","","","deref_mut","","","","","","describe","","","","","","describe_vector","","","","","","domain","drop","","","","","","emul_comm","","endomul_scalar_comm","","evals","","ffmul","","foreign_field_add_comm","","foreign_field_mul_comm","","from","","","","","","","","","","from_abi","","","","","","generic_comm","","group_gen","init","","","","","","into","","","","","","into_abi","","","","","","is_none","","","","","","joint_lookup_used","log_size_of_group","long_ref_from_abi","","","","","","lookup","","lookup_index","","lookup_info","","lookup_selectors","","lookup_table","","max_poly_size","mul_comm","","new","","","","","","none","","","","","","of_wasm","prev_challenges","psm_comm","","public_","range_check","","range_check0_comm","","range_check1_comm","","read_raw","ref_from_abi","","","","","","ref_mut_from_abi","","","","","","return_abi","","","","","","rot_comm","","runtime_tables_selector","","s0","s1","s2","s3","s4","s5","s6","set_coefficients_comm","set_complete_add_comm","set_emul_comm","set_endomul_scalar_comm","set_evals","set_ffmul","set_foreign_field_add_comm","set_foreign_field_mul_comm","set_generic_comm","set_lookup","set_lookup_index","set_lookup_info","set_lookup_selectors","set_lookup_table","set_mul_comm","set_psm_comm","set_range_check","set_range_check0_comm","set_range_check1_comm","set_rot_comm","set_runtime_tables_selector","set_sigma_comm","set_srs","set_table_ids","set_xor","set_xor_comm","shifts","sigma_comm","","srs","","table_ids","","to_owned","","","","","","to_wasm","try_from","","","","","","try_from_js_value","","","","","","try_into","","","","","","type_id","","","","","","vector_from_abi","","","","","","vector_into_abi","","","","","","vzip","","","","","","xor","","xor_comm","","zk_rows","pallas","vesta","WasmFqPolyComm","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","describe","describe_vector","drop","from","","","from_abi","init","into","into_abi","is_none","long_ref_from_abi","new","none","ref_from_abi","ref_mut_from_abi","return_abi","set_unshifted","shifted","to_owned","try_from","try_from_js_value","try_into","type_id","unshifted","","vector_from_abi","vector_into_abi","vzip","WasmFpPolyComm","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","describe","describe_vector","drop","from","","","from_abi","init","into","into_abi","is_none","long_ref_from_abi","new","none","ref_from_abi","ref_mut_from_abi","return_abi","set_unshifted","shifted","to_owned","try_from","try_from_js_value","try_into","type_id","unshifted","","vector_from_abi","vector_into_abi","vzip","caml_pasta_fp_poseidon_block_cipher","caml_pasta_fq_poseidon_block_cipher","pallas","vesta","caml_pallas_add","caml_pallas_affine_deep_copy","caml_pallas_double","caml_pallas_endo_base","caml_pallas_endo_scalar","caml_pallas_negate","caml_pallas_of_affine","caml_pallas_of_affine_coordinates","caml_pallas_one","caml_pallas_random","caml_pallas_rng","caml_pallas_scale","caml_pallas_sub","caml_pallas_to_affine","caml_vesta_add","caml_vesta_affine_deep_copy","caml_vesta_double","caml_vesta_endo_base","caml_vesta_endo_scalar","caml_vesta_negate","caml_vesta_of_affine","caml_vesta_of_affine_coordinates","caml_vesta_one","caml_vesta_random","caml_vesta_rng","caml_vesta_scale","caml_vesta_sub","caml_vesta_to_affine","run_in_pool","fp","fq","WasmFpSrs","borrow","borrow_mut","caml_fp_srs_add_lagrange_basis","caml_fp_srs_b_poly_commitment","caml_fp_srs_batch_accumulator_check","caml_fp_srs_batch_accumulator_generate","caml_fp_srs_commit_evaluations","caml_fp_srs_create","caml_fp_srs_create_parallel","caml_fp_srs_get","caml_fp_srs_get_lagrange_basis","caml_fp_srs_h","caml_fp_srs_lagrange_commitment","caml_fp_srs_lagrange_commitments_whole_domain_ptr","caml_fp_srs_lagrange_commitments_whole_domain_read_from_ptr","caml_fp_srs_maybe_lagrange_commitment","caml_fp_srs_read","caml_fp_srs_set","caml_fp_srs_set_lagrange_basis","caml_fp_srs_write","clone","clone_into","clone_to_uninit","deref","","deref_mut","describe","describe_vector","drop","from","","","from_abi","init","into","into_abi","is_none","long_ref_from_abi","none","ref_from_abi","ref_mut_from_abi","return_abi","to_owned","try_from","try_from_js_value","try_into","type_id","vector_from_abi","vector_into_abi","vzip","WasmFqSrs","borrow","borrow_mut","caml_fq_srs_add_lagrange_basis","caml_fq_srs_b_poly_commitment","caml_fq_srs_batch_accumulator_check","caml_fq_srs_batch_accumulator_generate","caml_fq_srs_commit_evaluations","caml_fq_srs_create","caml_fq_srs_create_parallel","caml_fq_srs_get","caml_fq_srs_get_lagrange_basis","caml_fq_srs_h","caml_fq_srs_lagrange_commitment","caml_fq_srs_lagrange_commitments_whole_domain_ptr","caml_fq_srs_lagrange_commitments_whole_domain_read_from_ptr","caml_fq_srs_maybe_lagrange_commitment","caml_fq_srs_read","caml_fq_srs_set","caml_fq_srs_set_lagrange_basis","caml_fq_srs_write","clone","clone_into","clone_to_uninit","deref","","deref_mut","describe","describe_vector","drop","from","","","from_abi","init","into","into_abi","is_none","long_ref_from_abi","none","ref_from_abi","ref_mut_from_abi","return_abi","to_owned","try_from","try_from_js_value","try_into","type_id","vector_from_abi","vector_into_abi","vzip","Err","Error","Ok","Result","borrow","borrow_mut","custom","","de","deref","deref_mut","drop","fmt","","from","","init","into","new","ser","to_string","try_from","try_into","type_id","vzip","Deserializer","borrow","borrow_mut","deref","deref_mut","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","drop","from","","init","into","into_deserializer","is_human_readable","newtype_variant_seed","struct_variant","try_from","try_into","tuple_variant","type_id","unit_variant","vzip","ArraySerializer","ErrorSerializer","Serializer","borrow","","","borrow_mut","","","default","deref","","","deref_mut","","","drop","","","end","","","","","","","from","","","init","","","into","","","is_human_readable","new","","serialize_bool","serialize_bytes","serialize_char","serialize_element","","serialize_f32","serialize_f64","serialize_field","","","","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","try_from","","","try_into","","","type_id","","","vzip","",""],"q":[[0,"plonk_wasm"],[21,"plonk_wasm::circuit"],[22,"plonk_wasm::gate_vector"],[56,"plonk_wasm::gate_vector::fp"],[122,"plonk_wasm::gate_vector::fq"],[188,"plonk_wasm::oracles"],[190,"plonk_wasm::oracles::fp"],[275,"plonk_wasm::oracles::fq"],[360,"plonk_wasm::pasta_fp_plonk_index"],[456,"plonk_wasm::pasta_fq_plonk_index"],[551,"plonk_wasm::plonk_proof"],[553,"plonk_wasm::plonk_proof::fp"],[820,"plonk_wasm::plonk_proof::fq"],[1087,"plonk_wasm::plonk_verifier_index"],[1089,"plonk_wasm::plonk_verifier_index::fp"],[1384,"plonk_wasm::plonk_verifier_index::fq"],[1679,"plonk_wasm::poly_comm"],[1681,"plonk_wasm::poly_comm::pallas"],[1718,"plonk_wasm::poly_comm::vesta"],[1755,"plonk_wasm::poseidon"],[1757,"plonk_wasm::projective"],[1759,"plonk_wasm::projective::pallas"],[1773,"plonk_wasm::projective::vesta"],[1787,"plonk_wasm::rayon"],[1788,"plonk_wasm::srs"],[1790,"plonk_wasm::srs::fp"],[1841,"plonk_wasm::srs::fq"],[1892,"plonk_wasm::wasm_ocaml_serde"],[1917,"plonk_wasm::wasm_ocaml_serde::de"],[1968,"plonk_wasm::wasm_ocaml_serde::ser"],[2056,"wasm_bindgen"],[2057,"alloc::string"],[2058,"core::fmt"],[2059,"kimchi::circuits::wires"],[2060,"core::result"],[2061,"core::any"],[2062,"alloc::boxed"],[2063,"alloc::vec"],[2064,"mina_curves::pasta::fields::fp"],[2065,"kimchi::circuits::gate"],[2066,"arkworks::pasta_fp"],[2067,"wasm_types::flat_vector"],[2068,"mina_curves::pasta::fields::fq"],[2069,"arkworks::pasta_fq"],[2070,"kimchi::circuits::scalars"],[2071,"core::option"],[2072,"arkworks::group_affine"],[2073,"kimchi::proof"],[2074,"mina_curves::pasta::curves::vesta"],[2075,"poly_commitment::ipa"],[2076,"mina_curves::pasta::curves::pallas"],[2077,"poly_commitment::commitment"],[2078,"kimchi::circuits::lookup::index"],[2079,"kimchi::verifier_index"],[2080,"kimchi::circuits::lookup::lookups"],[2081,"alloc::sync"],[2082,"arkworks::group_projective"],[2083,"core::marker"],[2084,"core::ops::function"],[2085,"serde_wasm_bindgen::error"],[2086,"serde::de"],[2087,"serde::ser"]],"i":"```````````````````````Ad0000000000``00000000000000000000```CdBj10```````0101010101010001010101010100101010101010100101010100```DbCn10```````0101010101010001010101010100101010101010100101010100````Df000Dh1010101010101010010```11010110101010111010100000010101001010101010111110101011``Ef000Eh1010101010101010010```11010110101010111010100000010101001010101010111110101011```nF`Fb210```````````12102102102102100`2102101021021021021021010210210210210210210210210210210210```FlFfFh210```````````121021021021021002102101021021021021021010210210210210210210210210210210210`````````Fn0Gd1GfGhDnG`Gj5643210`````56435643564322033564321056432105643210643210564321022355566644433322210564321025643210564321056432106432106432104433336432164321022222222064321064321056432106626232433222263644433664456435643210643210564321056432106432106432105643210443344```````Hl0Ib1IdIfEnHnIh5643210`````56435643564322033564321056432105643210643210564321022355566644433322210564321025643210564321056432106432106432104433336432164321022222222064321064321056432106626232433222263644433664456435643210643210564321056432106432106432105643210443344````````InJ`IlJbJdDl543210````````543210543210543210444454321054321054321054321005432104444002244445432221110543210445543210543210543210543210155432102200111111044543210543210`0440224444`54321054321054321044113333333444402444201114424441401240440011543210`54321054321054321054321054321054321054321022440``````KhKjKfKlKnEl543210````````543210543210543210444454321054321054321054321005432104444002244445432221110543210445543210543210543210543210155432102200111111044543210543210`0440224444`54321054321054321044113333333444402444201114424441401240440011543210`54321054321054321054321054321054321054321022440```Ej00000000000000000000000000000000000`Dj00000000000000000000000000000000000````````````````````````````````````Fd0``````````````````000000000000000000000000000000`Fj0``````````````````000000000000000000000000000000Mb`0`Lj000`0000000000`00000`M`0000000000000000000000000000000000000000000000000```MjMlMh2100210210210222111121021021001000011002211000002000000000000000000002210210210210","f":"{{{d{b}}}f}`0{{}h}{hf}`{{}j}{{}l}`````````{{hh}f}`{hh}`{{{d{n}}}A`}`{d{{d{c}}}{}}{{{d{Ab}}}{{d{Abc}}}{}}{{{d{Ad}}}Ad}{{d{d{Abc}}}f{}}{{dAf}f}{l{{d{c}}}{}}{l{{d{Abc}}}{}}{{}f}0{lf}{{{d{Ad}}{d{AbAh}}}Aj}``{cc{}}{hAd}?{{}c{}}{Adh}{{{d{c}}}Al{}}{ce{}{}}{{AnAnAnAnAnAnAn}Ad}{{}c{}}{ce{}{}}{ce{}{}}{{}}{dc{}}{c{{B`{e}}}{}{}}{j{{B`{Adc}}}{}}{{}{{B`{c}}}{}}{dBb}{c{{Bf{{Bd{Ad}}}}}{}}{{{Bf{{Bd{Ad}}}}}c{}}{{}c{}}```{d{{d{c}}}{}}0{{{d{Ab}}}{{d{Abc}}}{}}0{{l{d{Bh}}}A`}{{{d{AbBh}}Bj}f}{{}Bh}{{l{d{Bh}}}{{Bf{{Bd{Af}}}}}}{{{d{Bh}}Bl}Bj}{{{d{Bh}}}l}{{{d{AbBh}}AnAn}f}{BjBn}{l{{d{c}}}{}}0{l{{d{Abc}}}{}}0{{}f}000{lf}0{cc{}}0{{{d{{Cb{C`}}}}}Bj}{{{Cb{C`}}}Bj}{hCd}{hBj}{{}l}0{{}c{}}0{Cdh}{Bjh}{{{d{c}}}Al{}}0{ce{}{}}0{{CfAd{Cj{Ch}}}Bj}{{}c{}}0{ce{}{}}0{ce{}{}}0{{}}0{c{{B`{e}}}{}{}}0{j{{B`{Cdc}}}{}}{j{{B`{Bjc}}}{}}{{}{{B`{c}}}{}}0{BjCf}{dBb}0{c{{Bf{{Bd{Cd}}}}}{}}{c{{Bf{{Bd{Bj}}}}}{}}{{{Bf{{Bd{Cd}}}}}c{}}{{{Bf{{Bd{Bj}}}}}c{}}{{}c{}}0{BjAd}```{d{{d{c}}}{}}0{{{d{Ab}}}{{d{Abc}}}{}}0{{l{d{Cl}}}A`}{{{d{AbCl}}Cn}f}{{}Cl}{{l{d{Cl}}}{{Bf{{Bd{Af}}}}}}{{{d{Cl}}Bl}Cn}{{{d{Cl}}}l}{{{d{AbCl}}AnAn}f}{CnBn}{l{{d{c}}}{}}0{l{{d{Abc}}}{}}0{{}f}000{lf}0{cc{}}{{{Cb{D`}}}Cn}{{{d{{Cb{D`}}}}}Cn}2{hDb}{hCn}{{}l}0{{}c{}}0{Dbh}{Cnh}{{{d{c}}}Al{}}0{ce{}{}}0{{CfAd{Cj{Dd}}}Cn}{{}c{}}0{ce{}{}}0{ce{}{}}0{{}}0{c{{B`{e}}}{}{}}0{j{{B`{Dbc}}}{}}{j{{B`{Cnc}}}{}}{{}{{B`{c}}}{}}0{CnCf}{dBb}0{c{{Bf{{Bd{Db}}}}}{}}{c{{Bf{{Bd{Cn}}}}}{}}{{{Bf{{Bd{Db}}}}}c{}}{{{Bf{{Bd{Cn}}}}}c{}}{{}c{}}0{CnAd}````{DfCh}00{d{{d{c}}}{}}0{{{d{Ab}}}{{d{Abc}}}{}}0{{{d{Df}}}Df}{{{d{Dh}}}Dh}{{d{d{Abc}}}f{}}0{{dAf}f}0{l{{d{c}}}{}}0{l{{d{Abc}}}{}}0{{}f}000{DhCh}{lf}0{{{`{Dj}}DlDn}{{B`{DhE`}}}}{DnDn}{{}Dh}{{{Eb{C`}}}Df}{cc{}}0{hDf}{hDh}{DfCh}{{}l}0{{}c{}}0{Dfh}{Dhh}{{{d{c}}}Al{}}0{DfEd}0{ce{}{}}0{{{Ed{Ch}}{Ed{Ch}}ChChChChChChChChChCh}Df}{{DfChCh{Cj{Ch}}Ch}Dh}{{}c{}}0{DhDf}{{{d{Dh}}}{{Cj{Ch}}}}{DhCj}{DhCh}0{ce{}{}}0{ce{}{}}0{{}}0{{{d{AbDh}}{Cj{Ch}}}f}{dc{}}0{c{{B`{e}}}{}{}}0{j{{B`{Dfc}}}{}}{j{{B`{Dhc}}}{}}{{}{{B`{c}}}{}}0{dBb}0{DfCh}000{c{{Bf{{Bd{Df}}}}}{}}{c{{Bf{{Bd{Dh}}}}}{}}{{{Bf{{Bd{Df}}}}}c{}}{{{Bf{{Bd{Dh}}}}}c{}}{{}c{}}055``{EfDd}00{d{{d{c}}}{}}0{{{d{Ab}}}{{d{Abc}}}{}}0{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}{{d{d{Abc}}}f{}}0{{dAf}f}0{l{{d{c}}}{}}0{l{{d{Abc}}}{}}0{{}f}000{EhDd}{lf}0{{{`{Ej}}ElEn}{{B`{EhE`}}}}{EnEn}{{}Eh}{{{Eb{D`}}}Ef}{cc{}}0{hEf}{hEh}{EfDd}{{}l}0{{}c{}}0{Efh}{Ehh}{{{d{c}}}Al{}}0{EfEd}0{ce{}{}}0{{{Ed{Dd}}{Ed{Dd}}DdDdDdDdDdDdDdDdDdDd}Ef}{{EfDdDd{Cj{Dd}}Dd}Eh}{{}c{}}0{EhEf}{{{d{Eh}}}{{Cj{Dd}}}}{EhCj}{EhDd}0{ce{}{}}0{ce{}{}}0{{}}0{{{d{AbEh}}{Cj{Dd}}}f}{dc{}}0{c{{B`{e}}}{}{}}0{j{{B`{Efc}}}{}}{j{{B`{Ehc}}}{}}{{}{{B`{c}}}{}}0{dBb}0{EfDd}000{c{{Bf{{Bd{Ef}}}}}{}}{c{{Bf{{Bd{Eh}}}}}{}}{{{Bf{{Bd{Ef}}}}}c{}}{{{Bf{{Bd{Eh}}}}}c{}}{{}c{}}055```{d{{d{c}}}{}}00{{{d{Ab}}}{{d{Abc}}}{}}00{{{d{Bh}}Bl{`{F`}}{`{Fb}}Bl{d{Fd}}Al}{{B`{nE`}}}}{{{d{{Bd{Af}}}}{d{Fd}}}{{B`{nE`}}}}{{{d{n}}}Bl}00{{{d{n}}}{{B`{{Bn{Af}}E`}}}}11{{{Ed{Bl}}{d{Fd}}A`}{{B`{nj}}}}{{{d{n}}}A`}{{{Ed{Al}}{d{n}}A`}{{B`{fj}}}}`{l{{d{c}}}{}}00{l{{d{Abc}}}{}}00{{}f}00000{lf}00{FbCj}{{l{d{{Cb{C`}}}}}A`}{cc{}}00{hn}{hF`}{hFb}{F`Bl}{FbBl}{{}l}00{{}c{}}00{nh}{F`h}{Fbh}{{{d{c}}}Al{}}00{ce{}{}}00`{{Bl{Cj{Ch}}}Fb}{{}c{}}00{ce{}{}}00{ce{}{}}00{{}}00{c{{B`{e}}}{}{}}00{j{{B`{nc}}}{}}{j{{B`{F`c}}}{}}{j{{B`{Fbc}}}{}}{{}{{B`{c}}}{}}00{dBb}00{c{{Bf{{Bd{n}}}}}{}}{c{{Bf{{Bd{F`}}}}}{}}{c{{Bf{{Bd{Fb}}}}}{}}{{{Bf{{Bd{n}}}}}c{}}{{{Bf{{Bd{F`}}}}}c{}}{{{Bf{{Bd{Fb}}}}}c{}}{{}c{}}00```{d{{d{c}}}{}}00{{{d{Ab}}}{{d{Abc}}}{}}00{{{d{Cl}}Bl{`{Ff}}{`{Fh}}Bl{d{Fj}}Al}{{B`{FlE`}}}}{{{d{{Bd{Af}}}}{d{Fj}}}{{B`{FlE`}}}}{{{d{Fl}}}Bl}00{{{d{Fl}}}{{B`{{Bn{Af}}E`}}}}11{{{Ed{Bl}}{d{Fj}}A`}{{B`{Flj}}}}{{{d{Fl}}}A`}{{{Ed{Al}}{d{Fl}}A`}{{B`{fj}}}}`{l{{d{c}}}{}}00{l{{d{Abc}}}{}}00{{}f}00000{lf}00{FhCj}{cc{}}00{hFl}{hFf}{hFh}{FfBl}{FhBl}{{}l}00{{}c{}}00{Flh}{Ffh}{Fhh}{{{d{c}}}Al{}}00{ce{}{}}00`{{Bl{Cj{Dd}}}Fh}{{}c{}}00{ce{}{}}00{ce{}{}}00{{}}00{c{{B`{e}}}{}{}}00{j{{B`{Flc}}}{}}{j{{B`{Ffc}}}{}}{j{{B`{Fhc}}}{}}{{}{{B`{c}}}{}}00{dBb}00{c{{Bf{{Bd{Fl}}}}}{}}{c{{Bf{{Bd{Ff}}}}}{}}{c{{Bf{{Bd{Fh}}}}}{}}{{{Bf{{Bd{Fl}}}}}c{}}{{{Bf{{Bd{Ff}}}}}c{}}{{{Bf{{Bd{Fh}}}}}c{}}{{}c{}}00`````````{{{d{Fn}}}Dj}{FnDj}{d{{d{c}}}{}}000000{{{d{Ab}}}{{d{Abc}}}{}}000000{{{`{Dl}}{`{Dn}}}Al}`{DnDn}{{}Dn}{{DlDn}Al}{{{d{Gd}}}Gd}{{{d{Fn}}}Fn}{{{d{Gf}}}Gf}{{{d{Gh}}}Gh}{{d{d{Abc}}}f{}}000{{dAf}f}000{{{d{Dn}}}Gf}{DnGf}{BlGj}{{{d{Gh}}}Gb}{GhGb}{l{{d{c}}}{}}000000{l{{d{Abc}}}{}}000000{{}f}000000000000{lf}000000{{{d{Dn}}}Gd}{DnGd}{{{d{Gh}}{d{AbAh}}}Aj}{cc{}}{{{d{{Gn{{Gl{{Bn{C`}}}}}}}}}Gd}{{{Gn{{Gl{{Bn{C`}}}}}}}Gd}{{{Hb{H`}}}Fn}3{{{d{{Hb{H`}}}}}Fn}4{{{Hd{H`}}}Gf}{{{d{{Hd{H`}}}}}Gf}{{{Hf{H`}}}Gh}{{{d{{Hf{H`}}}}}Gh}88{{{Hj{{Hh{H`{Hf{H`}}}}{Bn{C`}}}}}Dn}{{{Hj{{d{{Hh{H`{Hf{H`}}}}}}{d{{Bn{C`}}}}}}}Dn}::{cGd{}}{hFn}{hGf}{hGh}{hDn}{hG`}{hGj}{DnCh}{{}l}000000{{}c{}}000000{Gdc{}}{Fnh}{Gfh}{Ghh}{Dnh}{G`h}{Gjh}{{{d{c}}}Al{}}00000{ce{}{}}00000{{{d{Gf}}}{{Ed{Fn}}}}{GfEd}{{{d{Gh}}}{{`{Gb}}}}`0`{{{`{Dj}}Dj{Ed{Dj}}}Fn}{{{`{Dj}}DjDj{Ed{Fn}}}Gf}{{{`{Gb}}{`{Gb}}GbChChGb}Gh}`{{Bl{Cj{Ch}}}G`}{{}c{}}00000{{{d{Dn}}}{{`{Dj}}}}``{DnBn}{{{d{Dn}}}Gh}{DnGh}{DnCj}{{{d{Dn}}}{{Cj{Ch}}}}{{{d{AbGj}}{`{Dj}}}f}{ce{}{}}00000{ce{}{}}00000{{}}000000{{{d{Fn}}}{{Ed{Dj}}}}{FnEd}{{{d{Dn}}}A`}{{{d{AbFn}}Dj}f}{{{d{AbDn}}Gf}f}{{{d{AbGh}}Gb}f}{{{d{AbDn}}Gd}f}{{{d{AbGf}}{Ed{Fn}}}f}{{{d{AbGh}}{`{Gb}}}f}0{{{d{AbDn}}{`{Dj}}}f}`{{{d{AbDn}}Gh}f}{{{d{AbDn}}{Cj{Ch}}}f}{{{d{AbFn}}{Ed{Dj}}}f}7{{{d{AbFn}}{`{Dj}}}f}{{{d{AbGf}}Dj}f}{{{d{AbGf}}{`{Dj}}}f}1{{{d{Gh}}}Gb}{GhGb}{{{d{Fn}}}{{`{Dj}}}}`{{{d{Gf}}}Dj}{GfDj}{dc{}}000{c{{B`{e}}}{}{}}000000{j{{B`{Fnc}}}{}}{j{{B`{Gfc}}}{}}{j{{B`{Ghc}}}{}}{j{{B`{Dnc}}}{}}{j{{B`{G`c}}}{}}{j{{B`{Gjc}}}{}}{{}{{B`{c}}}{}}000000{dBb}000000{c{{Bf{{Bd{Fn}}}}}{}}{c{{Bf{{Bd{Gf}}}}}{}}{c{{Bf{{Bd{Gh}}}}}{}}{c{{Bf{{Bd{Dn}}}}}{}}{c{{Bf{{Bd{G`}}}}}{}}{c{{Bf{{Bd{Gj}}}}}{}}{{{Bf{{Bd{Fn}}}}}c{}}{{{Bf{{Bd{Gf}}}}}c{}}{{{Bf{{Bd{Gh}}}}}c{}}{{{Bf{{Bd{Dn}}}}}c{}}{{{Bf{{Bd{G`}}}}}c{}}{{{Bf{{Bd{Gj}}}}}c{}}{{}c{}}000000{{{d{Gf}}}{{`{Dj}}}}`{GhCh}0{{{d{Gf}}}Dj}{GfDj}```````{{{d{Hl}}}Ej}{HlEj}{d{{d{c}}}{}}000000{{{d{Ab}}}{{d{Abc}}}{}}000000{{{`{El}}{`{En}}}Al}`{EnEn}{{}En}{{ElEn}Al}{{{d{Ib}}}Ib}{{{d{Hl}}}Hl}{{{d{Id}}}Id}{{{d{If}}}If}{{d{d{Abc}}}f{}}000{{dAf}f}000{{{d{En}}}Id}{EnId}{BlIh}{{{d{If}}}I`}{IfI`}{l{{d{c}}}{}}000000{l{{d{Abc}}}{}}000000{{}f}000000000000{lf}000000{{{d{En}}}Ib}{EnIb}{{{d{If}}{d{AbAh}}}Aj}{{{d{{Gn{{Gl{{Bn{D`}}}}}}}}}Ib}{{{Gn{{Gl{{Bn{D`}}}}}}}Ib}{cc{}}0{{{d{{Hb{Ij}}}}}Hl}{{{Hb{Ij}}}Hl}2{{{Hd{Ij}}}Id}{{{d{{Hd{Ij}}}}}Id}{{{d{{Hf{Ij}}}}}If}{{{Hf{Ij}}}If}6{{{Hj{{Hh{Ij{Hf{Ij}}}}{Bn{D`}}}}}En}{{{Hj{{d{{Hh{Ij{Hf{Ij}}}}}}{d{{Bn{D`}}}}}}}En}888{cIb{}}{hHl}{hId}{hIf}{hEn}{hHn}{hIh}{EnDd}{{}l}000000{{}c{}}000000{Ibc{}}{Hlh}{Idh}{Ifh}{Enh}{Hnh}{Ihh}{{{d{c}}}Al{}}00000{ce{}{}}00000{{{d{Id}}}{{Ed{Hl}}}}{IdEd}{{{d{If}}}{{`{I`}}}}`0`{{{`{Ej}}Ej{Ed{Ej}}}Hl}{{{`{Ej}}EjEj{Ed{Hl}}}Id}{{{`{I`}}{`{I`}}I`DdDdI`}If}`{{Bl{Cj{Dd}}}Hn}{{}c{}}00000{{{d{En}}}{{`{Ej}}}}``{EnBn}{{{d{En}}}If}{EnIf}{EnCj}{{{d{En}}}{{Cj{Dd}}}}{{{d{AbIh}}{`{Ej}}}f}{ce{}{}}00000{ce{}{}}00000{{}}000000{{{d{Hl}}}{{Ed{Ej}}}}{HlEd}{{{d{En}}}A`}{{{d{AbHl}}Ej}f}{{{d{AbEn}}Id}f}{{{d{AbIf}}I`}f}{{{d{AbEn}}Ib}f}{{{d{AbId}}{Ed{Hl}}}f}{{{d{AbIf}}{`{I`}}}f}0{{{d{AbEn}}{`{Ej}}}f}`{{{d{AbEn}}If}f}{{{d{AbEn}}{Cj{Dd}}}f}{{{d{AbHl}}{Ed{Ej}}}f}7{{{d{AbHl}}{`{Ej}}}f}{{{d{AbId}}Ej}f}{{{d{AbId}}{`{Ej}}}f}1{{{d{If}}}I`}{IfI`}{{{d{Hl}}}{{`{Ej}}}}`{{{d{Id}}}Ej}{IdEj}{dc{}}000{c{{B`{e}}}{}{}}000000{j{{B`{Hlc}}}{}}{j{{B`{Idc}}}{}}{j{{B`{Ifc}}}{}}{j{{B`{Enc}}}{}}{j{{B`{Hnc}}}{}}{j{{B`{Ihc}}}{}}{{}{{B`{c}}}{}}000000{dBb}000000{c{{Bf{{Bd{Hl}}}}}{}}{c{{Bf{{Bd{Id}}}}}{}}{c{{Bf{{Bd{If}}}}}{}}{c{{Bf{{Bd{En}}}}}{}}{c{{Bf{{Bd{Hn}}}}}{}}{c{{Bf{{Bd{Ih}}}}}{}}{{{Bf{{Bd{Hl}}}}}c{}}{{{Bf{{Bd{Id}}}}}c{}}{{{Bf{{Bd{If}}}}}c{}}{{{Bf{{Bd{En}}}}}c{}}{{{Bf{{Bd{Hn}}}}}c{}}{{{Bf{{Bd{Ih}}}}}c{}}{{}c{}}000000{{{d{Id}}}{{`{Ej}}}}`{IfDd}0{{{d{Id}}}Ej}{IdEj}````````{d{{d{c}}}{}}00000{{{d{Ab}}}{{d{Abc}}}{}}00000{{{d{n}}}Dl}{{{d{Dl}}}Dl}{{{d{Fd}}A`}{{B`{DlE`}}}}{{}Dl}{{{Ed{Bl}}{d{Fd}}A`}{{B`{Dlj}}}}{DlA`}{BlIl}{{{Ed{Al}}DlA`}{{B`{fj}}}}{{{d{In}}}In}{{{d{J`}}}J`}{{{d{Il}}}Il}{{{d{Jb}}}Jb}{{{d{Jd}}}Jd};{{d{d{Abc}}}f{}}00000{{dAf}f}00000{{{d{J`}}}{{`{Dj}}}}`{{{d{J`}}}Dj}{J`Dj}{l{{d{c}}}{}}00000{l{{d{Abc}}}{}}00000{{}f}00000000000{DlIn}{lf}000006565{{{d{Dl}}}J`}{DlJ`}{{{d{Jb}}}{{Ed{Dj}}}}{JbEd}{{{d{J`}}}{{Ed{Dj}}}}{J`Ed}10{cc{}}000{{{d{{Jh{{Jf{H`}}}}}}}Jb}{{{Jh{{Jf{H`}}}}}Jb}{{{d{{Jj{H`}}}}}Jd}3{{{Jj{H`}}}Jd}4{hIn}{hJ`}{hIl}{hJb}{hJd}{hDl}{{{d{J`}}}Dj}{J`Dj}{InCh}{{}l}00000{{}c{}}00000{Inh}{J`h}{Ilh}{Jbh}{Jdh}{Dlh}{{{d{c}}}Al{}}00000{JdAl}{InBl}{ce{}{}}00000{{{d{Jb}}}{{Ed{Dj}}}}{JbEd}{{{d{Dl}}}{{Ed{Jd}}}}{DlEd}{{{d{Jd}}}Jl}{JdJl}{{{d{Jd}}}Jb}{JdJb}{{{d{Jd}}}{{`{Dj}}}}`{DlBl}{{{d{J`}}}Dj}{J`Dj}{{BlCh}In}{{{`{Dj}}{`{Dj}}{d{Dj}}{d{Dj}}{d{Dj}}{d{Dj}}{d{Dj}}{d{Dj}}{Ed{Dj}}{Ed{Dj}}{Ed{Dj}}{Ed{Dj}}{Ed{Dj}}{Ed{Dj}}}J`}{{ChChChChChChCh}Il}{{{Ed{Dj}}{Ed{Dj}}{Ed{Dj}}{Ed{Dj}}}Jb}{{Al{`{Dj}}Jb{Ed{Dj}}{d{Jl}}{Ed{Dj}}}Jd}{{{d{In}}BlBlBl{d{Fd}}{d{J`}}{d{Il}}{Ed{Jd}}Jn}Dl}{{}c{}}00000{Dl{{Hj{{K`{H`{Hf{H`}}}}{Kd{{Kb{H`}}}}}}}}:98:{{{d{Jb}}}{{Ed{Dj}}}}{JbEd}{{{d{J`}}}{{Ed{Dj}}}}{J`Ed}10{{{Ed{Bl}}{d{Fd}}A`}{{B`{{K`{H`{Hf{H`}}}}j}}}}{ce{}{}}00000{ce{}{}}00000{{}}0000054{{{d{Jd}}}{{Ed{Dj}}}}{JdEd}{IlCh}000000{{{d{AbJ`}}{`{Dj}}}f}{{{d{AbJ`}}Dj}f}00{{{d{AbDl}}J`}f}{{{d{AbJb}}{Ed{Dj}}}f}{{{d{AbJ`}}{Ed{Dj}}}f}031{{{d{AbDl}}{Ed{Jd}}}f}{{{d{AbJd}}Jl}f}{{{d{AbJd}}Jb}f}{{{d{AbJd}}{`{Dj}}}f}775444{{{d{AbJd}}{Ed{Dj}}}f}9{{{d{AbDl}}Fd}f}176{DlIl}{{{d{J`}}}{{`{Dj}}}}`{{{d{Dl}}}Fd}{DlFd}{{{d{Jd}}}{{Ed{Dj}}}}{JdEd}{dc{}}00000{{{d{{Kd{{Kb{H`}}}}}}{K`{H`{Hf{H`}}}}}Dl}{c{{B`{e}}}{}{}}00000{j{{B`{Inc}}}{}}{j{{B`{J`c}}}{}}{j{{B`{Ilc}}}{}}{j{{B`{Jbc}}}{}}{j{{B`{Jdc}}}{}}{j{{B`{Dlc}}}{}}{{}{{B`{c}}}{}}00000{dBb}00000{c{{Bf{{Bd{In}}}}}{}}{c{{Bf{{Bd{J`}}}}}{}}{c{{Bf{{Bd{Il}}}}}{}}{c{{Bf{{Bd{Jb}}}}}{}}{c{{Bf{{Bd{Jd}}}}}{}}{c{{Bf{{Bd{Dl}}}}}{}}{{{Bf{{Bd{In}}}}}c{}}{{{Bf{{Bd{J`}}}}}c{}}{{{Bf{{Bd{Il}}}}}c{}}{{{Bf{{Bd{Jb}}}}}c{}}{{{Bf{{Bd{Jd}}}}}c{}}{{{Bf{{Bd{Dl}}}}}c{}}{{}c{}}00000{{{d{Jb}}}{{Ed{Dj}}}}{JbEd}{{{d{J`}}}{{Ed{Dj}}}}{J`Ed}{DlJn}``````{d{{d{c}}}{}}00000{{{d{Ab}}}{{d{Abc}}}{}}00000{{{d{Fl}}}El}{{{d{El}}}El}{{{d{Fj}}A`}{{B`{ElE`}}}}{{}El}{{{Ed{Bl}}{d{Fj}}A`}{{B`{Elj}}}}{ElA`}{BlKf}{{{Ed{Al}}ElA`}{{B`{fj}}}}{{{d{Kh}}}Kh}{{{d{Kj}}}Kj}{{{d{Kf}}}Kf}{{{d{Kl}}}Kl}{{{d{Kn}}}Kn};{{d{d{Abc}}}f{}}00000{{dAf}f}00000{{{d{Kj}}}{{`{Ej}}}}`{{{d{Kj}}}Ej}{KjEj}{l{{d{c}}}{}}00000{l{{d{Abc}}}{}}00000{{}f}00000000000{ElKh}{lf}000006565{{{d{El}}}Kj}{ElKj}{{{d{Kl}}}{{Ed{Ej}}}}{KlEd}{{{d{Kj}}}{{Ed{Ej}}}}{KjEd}10{cc{}}00{{{Jh{{Jf{Ij}}}}}Kl}{{{d{{Jh{{Jf{Ij}}}}}}}Kl}22{{{d{{Jj{Ij}}}}}Kn}{{{Jj{Ij}}}Kn}4{hKh}{hKj}{hKf}{hKl}{hKn}{hEl}{{{d{Kj}}}Ej}{KjEj}{KhDd}{{}l}00000{{}c{}}00000{Khh}{Kjh}{Kfh}{Klh}{Knh}{Elh}{{{d{c}}}Al{}}00000{KnAl}{KhBl}{ce{}{}}00000{{{d{Kl}}}{{Ed{Ej}}}}{KlEd}{{{d{El}}}{{Ed{Kn}}}}{ElEd}{{{d{Kn}}}Jl}{KnJl}{{{d{Kn}}}Kl}{KnKl}{{{d{Kn}}}{{`{Ej}}}}`{ElBl}{{{d{Kj}}}Ej}{KjEj}{{BlDd}Kh}{{{`{Ej}}{`{Ej}}{d{Ej}}{d{Ej}}{d{Ej}}{d{Ej}}{d{Ej}}{d{Ej}}{Ed{Ej}}{Ed{Ej}}{Ed{Ej}}{Ed{Ej}}{Ed{Ej}}{Ed{Ej}}}Kj}{{DdDdDdDdDdDdDd}Kf}{{{Ed{Ej}}{Ed{Ej}}{Ed{Ej}}{Ed{Ej}}}Kl}{{Al{`{Ej}}Kl{Ed{Ej}}{d{Jl}}{Ed{Ej}}}Kn}{{{d{Kh}}BlBlBl{d{Fj}}{d{Kj}}{d{Kf}}{Ed{Kn}}Jn}El}{{}c{}}00000{El{{Hj{{K`{Ij{Hf{Ij}}}}{Kd{{Kb{Ij}}}}}}}}:98:{{{d{Kl}}}{{Ed{Ej}}}}{KlEd}{{{d{Kj}}}{{Ed{Ej}}}}{KjEd}10{{{Ed{Bl}}{d{Fj}}A`}{{B`{{K`{Ij{Hf{Ij}}}}j}}}}{ce{}{}}00000{ce{}{}}00000{{}}0000054{{{d{Kn}}}{{Ed{Ej}}}}{KnEd}{KfDd}000000{{{d{AbKj}}{`{Ej}}}f}{{{d{AbKj}}Ej}f}00{{{d{AbEl}}Kj}f}{{{d{AbKl}}{Ed{Ej}}}f}{{{d{AbKj}}{Ed{Ej}}}f}031{{{d{AbEl}}{Ed{Kn}}}f}{{{d{AbKn}}Jl}f}{{{d{AbKn}}Kl}f}{{{d{AbKn}}{`{Ej}}}f}775444{{{d{AbKn}}{Ed{Ej}}}f}9{{{d{AbEl}}Fj}f}176{ElKf}{{{d{Kj}}}{{`{Ej}}}}`{{{d{El}}}Fj}{ElFj}{{{d{Kn}}}{{Ed{Ej}}}}{KnEd}{dc{}}00000{{{d{{Kd{{Kb{Ij}}}}}}{K`{Ij{Hf{Ij}}}}}El}{c{{B`{e}}}{}{}}00000{j{{B`{Khc}}}{}}{j{{B`{Kjc}}}{}}{j{{B`{Kfc}}}{}}{j{{B`{Klc}}}{}}{j{{B`{Knc}}}{}}{j{{B`{Elc}}}{}}{{}{{B`{c}}}{}}00000{dBb}00000{c{{Bf{{Bd{Kh}}}}}{}}{c{{Bf{{Bd{Kj}}}}}{}}{c{{Bf{{Bd{Kf}}}}}{}}{c{{Bf{{Bd{Kl}}}}}{}}{c{{Bf{{Bd{Kn}}}}}{}}{c{{Bf{{Bd{El}}}}}{}}{{{Bf{{Bd{Kh}}}}}c{}}{{{Bf{{Bd{Kj}}}}}c{}}{{{Bf{{Bd{Kf}}}}}c{}}{{{Bf{{Bd{Kl}}}}}c{}}{{{Bf{{Bd{Kn}}}}}c{}}{{{Bf{{Bd{El}}}}}c{}}{{}c{}}00000{{{d{Kl}}}{{Ed{Ej}}}}{KlEd}{{{d{Kj}}}{{Ed{Ej}}}}{KjEd}{ElJn}```{d{{d{c}}}{}}{{{d{Ab}}}{{d{Abc}}}{}}{{{d{Ej}}}Ej}{{d{d{Abc}}}f{}}{{dAf}f}{l{{d{c}}}{}}{l{{d{Abc}}}{}}{{}f}0{lf}{{{Jf{Ij}}}Ej}{{{d{{Jf{Ij}}}}}Ej}{cc{}}{hEj}{{}l}{{}c{}}{Ejh}{{{d{c}}}Al{}}{ce{}{}}{{{`{I`}}{Ed{I`}}}Ej}{{}c{}}{ce{}{}}{ce{}{}}{{}}{{{d{AbEj}}{`{I`}}}f}{EjEd}{dc{}}{c{{B`{e}}}{}{}}{j{{B`{Ejc}}}{}}{{}{{B`{c}}}{}}{dBb}{{{d{Ej}}}{{`{I`}}}}`{c{{Bf{{Bd{Ej}}}}}{}}{{{Bf{{Bd{Ej}}}}}c{}}{{}c{}}`{d{{d{c}}}{}}{{{d{Ab}}}{{d{Abc}}}{}}{{{d{Dj}}}Dj}{{d{d{Abc}}}f{}}{{dAf}f}{l{{d{c}}}{}}{l{{d{Abc}}}{}}{{}f}0{lf}{cc{}}{{{Jf{H`}}}Dj}{{{d{{Jf{H`}}}}}Dj}{hDj}{{}l}{{}c{}}{Djh}{{{d{c}}}Al{}}{ce{}{}}{{{`{Gb}}{Ed{Gb}}}Dj}{{}c{}}{ce{}{}}{ce{}{}}{{}}{{{d{AbDj}}{`{Gb}}}f}{DjEd}{dc{}}{c{{B`{e}}}{}{}}{j{{B`{Djc}}}{}}{{}{{B`{c}}}{}}{dBb}{{{d{Dj}}}{{`{Gb}}}}`{c{{Bf{{Bd{Dj}}}}}{}}{{{Bf{{Bd{Dj}}}}}c{}}{{}c{}}{{{Cj{Ch}}}{{Cj{Ch}}}}{{{Cj{Dd}}}{{Cj{Dd}}}}``{{{d{L`}}{d{L`}}}L`}{I`I`}{{{d{L`}}}L`}{{}Ch}{{}Dd}2{I`L`}{{ChCh}L`}{{}L`}0{hL`}{{{d{L`}}Dd}L`}9{{{d{L`}}}I`}{{{d{Lb}}{d{Lb}}}Lb}{GbGb}{{{d{Lb}}}Lb}9:0{GbLb}{{DdDd}Lb}{{}Lb}0{hLb}{{{d{Lb}}Ch}Lb}7{{{d{Lb}}}Gb}{ecLd{{Lh{}{{Lf{c}}}}Ld}}```{d{{d{c}}}{}}{{{d{Ab}}}{{d{Abc}}}{}}{{{d{Fd}}Bl}f}{{{d{Fd}}{Cj{Ch}}}{{B`{Djj}}}}{{{d{Fd}}{`{Gb}}{Cj{Ch}}}Al}{{{d{Fd}}Bl{Cj{Ch}}}{{`{Gb}}}}{{{d{Fd}}Bl{Cj{Ch}}}{{B`{Djj}}}}{BlFd}0{{{d{Fd}}}{{`{Gb}}}}{{{d{Fd}}Bl}{{`{Dj}}}}{{{d{Fd}}}Gb}{{{d{Fd}}BlBl}{{B`{Djj}}}}``{{{d{Fd}}BlBl}{{Ed{Dj}}}}{{{Ed{Bl}}A`}{{B`{{Ed{Fd}}j}}}}{{{`{Gb}}}Fd}{{{d{Fd}}Bl{`{Dj}}}f}{{{Ed{Al}}{d{Fd}}A`}{{B`{fj}}}}{{{d{Fd}}}Fd}{{d{d{Abc}}}f{}}{{dAf}f}{{{d{Fd}}}{{d{c}}}{}}{l{{d{c}}}{}}{l{{d{Abc}}}{}}{{}f}0{lf}{{{Kd{{Kb{H`}}}}}Fd}{cc{}}{{{d{{Kd{{Kb{H`}}}}}}}Fd}{hFd}{{}l}{{}c{}}{Fdh}{{{d{c}}}Al{}}{ce{}{}}{{}c{}}{ce{}{}}{ce{}{}}{{}}{dc{}}{c{{B`{e}}}{}{}}{j{{B`{Fdc}}}{}}{{}{{B`{c}}}{}}{dBb}{c{{Bf{{Bd{Fd}}}}}{}}{{{Bf{{Bd{Fd}}}}}c{}}{{}c{}}`{d{{d{c}}}{}}{{{d{Ab}}}{{d{Abc}}}{}}{{{d{Fj}}Bl}f}{{{d{Fj}}{Cj{Dd}}}{{B`{Ejj}}}}{{{d{Fj}}{`{I`}}{Cj{Dd}}}Al}{{{d{Fj}}Bl{Cj{Dd}}}{{`{I`}}}}{{{d{Fj}}Bl{Cj{Dd}}}{{B`{Ejj}}}}{BlFj}0{{{d{Fj}}}{{`{I`}}}}{{{d{Fj}}Bl}{{`{Ej}}}}{{{d{Fj}}}I`}{{{d{Fj}}BlBl}{{B`{Ejj}}}}``{{{d{Fj}}BlBl}{{Ed{Ej}}}}{{{Ed{Bl}}A`}{{B`{{Ed{Fj}}j}}}}{{{`{I`}}}Fj}{{{d{Fj}}Bl{`{Ej}}}f}{{{Ed{Al}}{d{Fj}}A`}{{B`{fj}}}}{{{d{Fj}}}Fj}{{d{d{Abc}}}f{}}{{dAf}f}{l{{d{c}}}{}}{{{d{Fj}}}{{d{c}}}{}}{l{{d{Abc}}}{}}{{}f}0{lf}{{{d{{Kd{{Kb{Ij}}}}}}}Fj}{cc{}}{{{Kd{{Kb{Ij}}}}}Fj}{hFj}{{}l}{{}c{}}{Fjh}{{{d{c}}}Al{}}{ce{}{}}{{}c{}}{ce{}{}}{ce{}{}}{{}}{dc{}}{c{{B`{e}}}{}{}}{j{{B`{Fjc}}}{}}{{}{{B`{c}}}{}}{dBb}{c{{Bf{{Bd{Fj}}}}}{}}{{{Bf{{Bd{Fj}}}}}c{}}{{}c{}}````{d{{d{c}}}{}}{{{d{Ab}}}{{d{Abc}}}{}}{cLjLl}0`{l{{d{c}}}{}}{l{{d{Abc}}}{}}{lf}{{{d{Lj}}{d{AbAh}}}{{B`{fLn}}}}0{jLj}{cc{}}{{}l}{{}c{}}8`{dA`}{c{{B`{e}}}{}{}}{{}{{B`{c}}}{}}{dBb}?`>=;:{{M`c}MbMd}0000{{M`{d{b}}{d{{Bd{{d{b}}}}}}c}MbMd}1111111111{{M`{d{b}}c}MbMd}22221{{M`lc}MbMd}{{M`{d{b}}lc}MbMd}4444442>{jM`}<;:{M`c{}}{{{d{M`}}}Al}{{M`c}MbMf}{{M`{d{{Bd{{d{b}}}}}}c}MbMd}<;6:{M`{{Mb{f}}}}{{}c{}}```{d{{d{c}}}{}}00{{{d{Ab}}}{{d{Abc}}}{}}00{{}Mh}{l{{d{c}}}{}}00{l{{d{Abc}}}{}}00{lf}00{MjMb}00{MlMb}000{cc{}}00{{}l}00{{}c{}}00{{{d{{d{Mh}}}}}Al}{{{d{Mh}}}Ml}:{{{d{Mh}}Al}Mb}{{{d{Mh}}{d{{Bd{Af}}}}}Mb}{{{d{Mh}}Mn}Mb}{{{d{AbMl}}{d{c}}}{{Mb{f}}}{N`Nb}}0{{{d{Mh}}Nd}Mb}{{{d{Mh}}Nf}Mb}{{{d{AbMj}}{d{b}}{d{c}}}{{Mb{f}}}{N`Nb}}{{{d{AbMj}}{d{c}}}{{Mb{f}}}{N`Nb}}{{{d{AbMl}}{d{b}}{d{c}}}{{Mb{f}}}{N`Nb}}5{{{d{Mh}}Nh}Mb}{{{d{Mh}}Nj}Mb}{{{d{Mh}}Bl}Mb}{{{d{Mh}}Nl}Mb}{{{d{Mh}}Nn}Mb}6{{{d{Mh}}{Ed{l}}}{{Mb{c}}}{}}{{{d{Mh}}{d{b}}{d{c}}}Mb{N`Nb}}{{{d{Mh}}{d{b}}h{d{b}}{d{c}}}Mb{N`Nb}}{{{d{Mh}}}Mb}{{{d{Mh}}{Ed{l}}}{{Mb{c}}}{}}{{{d{Mh}}{d{c}}}Mb{N`Nb}}{{{d{Mh}}{d{b}}}Mb}{{{d{Mh}}{d{b}}l}{{Mb{c}}}{}}{{{d{Mh}}{d{b}}h{d{b}}l}{{Mb{c}}}{}}{{{d{Mh}}l}{{Mb{c}}}{}}{{{d{Mh}}{d{b}}l}{{Mb{c}}}{}}{{{d{Mh}}{d{b}}h{d{b}}l}{{Mb{c}}}{}}{{{d{Mh}}O`}Mb}{{{d{Mh}}Ob}Mb}{{{d{Mh}}h}Mb}{{{d{Mh}}Od}Mb}{{{d{Mh}}Af}Mb}=:{{{d{Mh}}{d{b}}h{d{b}}}Mb}{{{d{AbMj}}{d{c}}}{{Mb{f}}}{N`Nb}}{c{{B`{e}}}{}{}}00{{}{{B`{c}}}{}}00{dBb}00{{}c{}}00","D":"Of","p":[[1,"str"],[1,"reference",null,null,1],[1,"unit"],[1,"u32"],[5,"JsValue",2056],[1,"usize"],[5,"WasmPastaFpPlonkIndex",360],[5,"String",2057],[0,"mut"],[5,"WasmGateWires",22],[1,"u8"],[5,"Formatter",2058],[8,"Result",2058],[1,"bool"],[5,"Wire",2059],[6,"Result",2060,null,1],[5,"TypeId",2061],[1,"slice"],[5,"Box",2062,null,1],[8,"WasmGateVector",56],[5,"WasmFpGate",56],[1,"i32"],[5,"Vec",2063],[8,"Fp",2064],[5,"CircuitGate",2065],[5,"WasmFpGateVector",56],[6,"GateType",2065],[5,"WasmPastaFp",2066],[5,"FlatVector",2067],[8,"WasmGateVector",122],[5,"WasmFqGate",122],[8,"Fq",2068],[5,"WasmFqGateVector",122],[5,"WasmPastaFq",2069],[5,"WasmFpRandomOracles",190],[5,"WasmFpOracles",190],[5,"WasmFpPolyComm",1718],[5,"WasmFpPlonkVerifierIndex",1089],[5,"WasmFpProverProof",553],[5,"JsError",2056],[5,"RandomOracles",2070],[6,"Option",2071,null,1],[5,"WasmFqRandomOracles",275],[5,"WasmFqOracles",275],[5,"WasmFqPolyComm",1681],[5,"WasmFqPlonkVerifierIndex",1384],[5,"WasmFqProverProof",820],[5,"WasmPastaFpLookupTable",360],[5,"WasmPastaFpRuntimeTableCfg",360],[5,"WasmFpSrs",1790],[5,"WasmPastaFqLookupTable",456],[5,"WasmPastaFqRuntimeTableCfg",456],[5,"WasmFqSrs",1841],[5,"WasmPastaFqPlonkIndex",456],[5,"WasmFpLookupCommitments",553],[5,"WasmFpRuntimeTable",553],[5,"WasmGVesta",2072],[5,"WasmFpProofEvaluations",553],[5,"WasmFpProverCommitments",553],[5,"WasmFpOpeningProof",553],[5,"WasmVecVecFpPolyComm",553],[5,"PointEvaluations",2073],[5,"ProofEvaluations",2073],[8,"Vesta",2074],[5,"LookupCommitments",2073],[5,"ProverCommitments",2073],[5,"OpeningProof",2075],[5,"ProverProof",2073],[1,"tuple",null,null,1],[5,"WasmFqLookupCommitments",820],[5,"WasmFqRuntimeTable",820],[5,"WasmGPallas",2072],[5,"WasmFqProofEvaluations",820],[5,"WasmFqProverCommitments",820],[5,"WasmFqOpeningProof",820],[5,"WasmVecVecFqPolyComm",820],[8,"Pallas",2076],[5,"WasmFpShifts",1089],[5,"WasmFpDomain",1089],[5,"WasmFpPlonkVerificationEvals",1089],[5,"WasmFpLookupSelectors",1089],[5,"WasmFpLookupVerifierIndex",1089],[5,"PolyComm",2077],[5,"LookupSelectors",2078],[5,"LookupVerifierIndex",2079],[5,"LookupInfo",2080],[1,"isize"],[5,"VerifierIndex",2079],[5,"SRS",2075],[5,"Arc",2081,null,1],[5,"WasmFqShifts",1384],[5,"WasmFqDomain",1384],[5,"WasmFqPlonkVerificationEvals",1384],[5,"WasmFqLookupSelectors",1384],[5,"WasmFqLookupVerifierIndex",1384],[5,"WasmPallasGProjective",2082],[5,"WasmVestaGProjective",2082],[10,"Send",2083],[17,"Output"],[10,"FnOnce",2084],[5,"Error",1892,2085],[10,"Display",2058],[5,"Error",2058],[5,"Deserializer",1917],[8,"Result",1892],[10,"Visitor",2086],[10,"DeserializeSeed",2086],[5,"Serializer",1968],[5,"ErrorSerializer",1968],[5,"ArraySerializer",1968],[1,"char"],[10,"Sized",2083],[10,"Serialize",2087],[1,"f32"],[1,"f64"],[1,"i128"],[1,"i16"],[1,"i64"],[1,"i8"],[1,"u128"],[1,"u16"],[1,"u64"]],"r":[[1893,2085],[1896,2085],[1897,2085],[1898,2085],[1899,2085],[1901,2085],[1902,2085],[1903,2085],[1904,2085],[1905,2085],[1906,2085],[1907,2085],[1908,2085],[1909,2085],[1910,2085],[1912,2085],[1913,2085],[1914,2085],[1915,2085],[1916,2085]],"b":[[83,"impl-From%3C%26CircuitGate%3CFp%3CMontBackend%3CFqConfig,+4%3E,+4%3E%3E%3E-for-WasmFpGate"],[84,"impl-From%3CCircuitGate%3CFp%3CMontBackend%3CFqConfig,+4%3E,+4%3E%3E%3E-for-WasmFpGate"],[148,"impl-From%3CCircuitGate%3CFp%3CMontBackend%3CFrConfig,+4%3E,+4%3E%3E%3E-for-WasmFqGate"],[149,"impl-From%3C%26CircuitGate%3CFp%3CMontBackend%3CFrConfig,+4%3E,+4%3E%3E%3E-for-WasmFqGate"],[636,"impl-From%3C%26ProofEvaluations%3CPointEvaluations%3CVec%3CFp%3CMontBackend%3CFqConfig,+4%3E,+4%3E%3E%3E%3E%3E-for-WasmFpProofEvaluations"],[637,"impl-From%3CProofEvaluations%3CPointEvaluations%3CVec%3CFp%3CMontBackend%3CFqConfig,+4%3E,+4%3E%3E%3E%3E%3E-for-WasmFpProofEvaluations"],[638,"impl-From%3CLookupCommitments%3CAffine%3CVestaParameters%3E%3E%3E-for-WasmFpLookupCommitments"],[640,"impl-From%3C%26LookupCommitments%3CAffine%3CVestaParameters%3E%3E%3E-for-WasmFpLookupCommitments"],[642,"impl-From%3CProverCommitments%3CAffine%3CVestaParameters%3E%3E%3E-for-WasmFpProverCommitments"],[643,"impl-From%3C%26ProverCommitments%3CAffine%3CVestaParameters%3E%3E%3E-for-WasmFpProverCommitments"],[644,"impl-From%3COpeningProof%3CAffine%3CVestaParameters%3E%3E%3E-for-WasmFpOpeningProof"],[645,"impl-From%3C%26OpeningProof%3CAffine%3CVestaParameters%3E%3E%3E-for-WasmFpOpeningProof"],[648,"impl-From%3C(ProverProof%3CAffine%3CVestaParameters%3E,+OpeningProof%3CAffine%3CVestaParameters%3E%3E%3E,+Vec%3CFp%3CMontBackend%3CFqConfig,+4%3E,+4%3E%3E)%3E-for-WasmFpProverProof"],[649,"impl-From%3C(%26ProverProof%3CAffine%3CVestaParameters%3E,+OpeningProof%3CAffine%3CVestaParameters%3E%3E%3E,+%26Vec%3CFp%3CMontBackend%3CFqConfig,+4%3E,+4%3E%3E)%3E-for-WasmFpProverProof"],[902,"impl-From%3C%26ProofEvaluations%3CPointEvaluations%3CVec%3CFp%3CMontBackend%3CFrConfig,+4%3E,+4%3E%3E%3E%3E%3E-for-WasmFqProofEvaluations"],[903,"impl-From%3CProofEvaluations%3CPointEvaluations%3CVec%3CFp%3CMontBackend%3CFrConfig,+4%3E,+4%3E%3E%3E%3E%3E-for-WasmFqProofEvaluations"],[906,"impl-From%3C%26LookupCommitments%3CAffine%3CPallasParameters%3E%3E%3E-for-WasmFqLookupCommitments"],[907,"impl-From%3CLookupCommitments%3CAffine%3CPallasParameters%3E%3E%3E-for-WasmFqLookupCommitments"],[909,"impl-From%3CProverCommitments%3CAffine%3CPallasParameters%3E%3E%3E-for-WasmFqProverCommitments"],[910,"impl-From%3C%26ProverCommitments%3CAffine%3CPallasParameters%3E%3E%3E-for-WasmFqProverCommitments"],[911,"impl-From%3C%26OpeningProof%3CAffine%3CPallasParameters%3E%3E%3E-for-WasmFqOpeningProof"],[912,"impl-From%3COpeningProof%3CAffine%3CPallasParameters%3E%3E%3E-for-WasmFqOpeningProof"],[914,"impl-From%3C(ProverProof%3CAffine%3CPallasParameters%3E,+OpeningProof%3CAffine%3CPallasParameters%3E%3E%3E,+Vec%3CFp%3CMontBackend%3CFrConfig,+4%3E,+4%3E%3E)%3E-for-WasmFqProverProof"],[915,"impl-From%3C(%26ProverProof%3CAffine%3CPallasParameters%3E,+OpeningProof%3CAffine%3CPallasParameters%3E%3E%3E,+%26Vec%3CFp%3CMontBackend%3CFrConfig,+4%3E,+4%3E%3E)%3E-for-WasmFqProverProof"],[1184,"impl-From%3C%26LookupSelectors%3CPolyComm%3CAffine%3CVestaParameters%3E%3E%3E%3E-for-WasmFpLookupSelectors"],[1185,"impl-From%3CLookupSelectors%3CPolyComm%3CAffine%3CVestaParameters%3E%3E%3E%3E-for-WasmFpLookupSelectors"],[1186,"impl-From%3C%26LookupVerifierIndex%3CAffine%3CVestaParameters%3E%3E%3E-for-WasmFpLookupVerifierIndex"],[1188,"impl-From%3CLookupVerifierIndex%3CAffine%3CVestaParameters%3E%3E%3E-for-WasmFpLookupVerifierIndex"],[1478,"impl-From%3CLookupSelectors%3CPolyComm%3CAffine%3CPallasParameters%3E%3E%3E%3E-for-WasmFqLookupSelectors"],[1479,"impl-From%3C%26LookupSelectors%3CPolyComm%3CAffine%3CPallasParameters%3E%3E%3E%3E-for-WasmFqLookupSelectors"],[1482,"impl-From%3C%26LookupVerifierIndex%3CAffine%3CPallasParameters%3E%3E%3E-for-WasmFqLookupVerifierIndex"],[1483,"impl-From%3CLookupVerifierIndex%3CAffine%3CPallasParameters%3E%3E%3E-for-WasmFqLookupVerifierIndex"],[1692,"impl-From%3CPolyComm%3CAffine%3CPallasParameters%3E%3E%3E-for-WasmFqPolyComm"],[1693,"impl-From%3C%26PolyComm%3CAffine%3CPallasParameters%3E%3E%3E-for-WasmFqPolyComm"],[1730,"impl-From%3CPolyComm%3CAffine%3CVestaParameters%3E%3E%3E-for-WasmFpPolyComm"],[1731,"impl-From%3C%26PolyComm%3CAffine%3CVestaParameters%3E%3E%3E-for-WasmFpPolyComm"],[1820,"impl-From%3CArc%3CSRS%3CAffine%3CVestaParameters%3E%3E%3E%3E-for-WasmFpSrs"],[1822,"impl-From%3C%26Arc%3CSRS%3CAffine%3CVestaParameters%3E%3E%3E%3E-for-WasmFpSrs"],[1871,"impl-From%3C%26Arc%3CSRS%3CAffine%3CPallasParameters%3E%3E%3E%3E-for-WasmFqSrs"],[1873,"impl-From%3CArc%3CSRS%3CAffine%3CPallasParameters%3E%3E%3E%3E-for-WasmFqSrs"],[1898,"impl-Error-for-Error"],[1899,"impl-Error-for-Error"],[1904,"impl-Debug-for-Error"],[1905,"impl-Display-for-Error"],[1987,"impl-SerializeStructVariant-for-ErrorSerializer"],[1988,"impl-SerializeTupleVariant-for-ErrorSerializer"],[1989,"impl-SerializeMap-for-ErrorSerializer"],[1990,"impl-SerializeStruct-for-ArraySerializer%3C\'_%3E"],[1991,"impl-SerializeTupleStruct-for-ArraySerializer%3C\'_%3E"],[1992,"impl-SerializeSeq-for-ArraySerializer%3C\'_%3E"],[1993,"impl-SerializeTuple-for-ArraySerializer%3C\'_%3E"],[2009,"impl-SerializeTuple-for-ArraySerializer%3C\'_%3E"],[2010,"impl-SerializeSeq-for-ArraySerializer%3C\'_%3E"],[2013,"impl-SerializeStructVariant-for-ErrorSerializer"],[2014,"impl-SerializeTupleVariant-for-ErrorSerializer"],[2015,"impl-SerializeStruct-for-ArraySerializer%3C\'_%3E"],[2016,"impl-SerializeTupleStruct-for-ArraySerializer%3C\'_%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAI0HOgABAAMACwAAAA4AAAARAAAAFgAOACYAAQApACgAVAAFAFwANwCVAAEAmAADAJ4APgDfAAQA5gBLADQBBAA7AS4AawEjAJIBBwCdASwAywEiAPEBBwD8AX8AfQICAIECAACDAgMAiQIBAI0CDgCjAuUAiwMBAI4DAwCTAwEAmAMOAK4D7gChBAIApQQAAKcEDgC8BAcBxwUBAMsFAQDOBQ4A4wW7AKAGAQCjBh4AwwYDAMgGRQAPBw4AHwcCACMHHQBCBw4AUgcCAFYHDgBoBwsAdQcAAHgHKwClBwAApwcjAM4HAgDUBzQA","P":[[23,"T"],[25,""],[26,"T"],[27,""],[28,"T"],[30,""],[36,"T"],[37,""],[39,"U"],[40,""],[41,"FromWasmAbi::Abi"],[42,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[43,""],[44,"IntoWasmAbi::Abi"],[45,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[46,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[47,""],[48,"T"],[49,"U,T"],[50,"TryFromJsValue::Error"],[51,"U"],[52,""],[53,"VectorFromWasmAbi::Abi"],[54,"VectorIntoWasmAbi::Abi"],[55,"V"],[59,"T"],[63,""],[71,"T"],[75,""],[81,"T"],[83,""],[89,"U"],[91,""],[93,"FromWasmAbi::Abi"],[95,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[97,""],[98,"IntoWasmAbi::Abi"],[100,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[102,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[104,""],[106,"U,T"],[108,"TryFromJsValue::Error"],[110,"U"],[112,""],[115,"VectorFromWasmAbi::Abi"],[117,"VectorIntoWasmAbi::Abi"],[119,"V"],[121,""],[125,"T"],[129,""],[137,"T"],[141,""],[147,"T"],[148,""],[150,"T"],[151,""],[155,"U"],[157,""],[159,"FromWasmAbi::Abi"],[161,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[163,""],[164,"IntoWasmAbi::Abi"],[166,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[168,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[170,""],[172,"U,T"],[174,"TryFromJsValue::Error"],[176,"U"],[178,""],[181,"VectorFromWasmAbi::Abi"],[183,"VectorIntoWasmAbi::Abi"],[185,"V"],[187,""],[195,"T"],[199,""],[201,"T"],[203,""],[205,"T"],[209,""],[220,"T"],[222,""],[227,"U"],[229,""],[231,"FromWasmAbi::Abi"],[233,""],[235,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[237,""],[239,"IntoWasmAbi::Abi"],[241,""],[246,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[248,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[250,""],[253,"T"],[255,"U,T"],[257,"TryFromJsValue::Error"],[259,"U"],[261,""],[267,"VectorFromWasmAbi::Abi"],[269,"VectorIntoWasmAbi::Abi"],[271,"V"],[273,""],[280,"T"],[284,""],[286,"T"],[288,""],[290,"T"],[294,""],[305,"T"],[307,""],[312,"U"],[314,""],[316,"FromWasmAbi::Abi"],[318,""],[320,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[322,""],[324,"IntoWasmAbi::Abi"],[326,""],[331,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[333,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[335,""],[338,"T"],[340,"U,T"],[342,"TryFromJsValue::Error"],[344,"U"],[346,""],[352,"VectorFromWasmAbi::Abi"],[354,"VectorIntoWasmAbi::Abi"],[356,"V"],[358,""],[363,"T"],[369,""],[381,"T"],[387,""],[398,"T"],[401,""],[409,"U"],[412,""],[415,"FromWasmAbi::Abi"],[418,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[421,""],[423,"IntoWasmAbi::Abi"],[426,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[429,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[432,""],[435,"U,T"],[438,"TryFromJsValue::Error"],[441,"U"],[444,""],[447,"VectorFromWasmAbi::Abi"],[450,"VectorIntoWasmAbi::Abi"],[453,"V"],[459,"T"],[465,""],[477,"T"],[483,""],[493,"T"],[496,""],[504,"U"],[507,""],[510,"FromWasmAbi::Abi"],[513,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[516,""],[518,"IntoWasmAbi::Abi"],[521,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[524,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[527,""],[530,"U,T"],[533,"TryFromJsValue::Error"],[536,"U"],[539,""],[542,"VectorFromWasmAbi::Abi"],[545,"VectorIntoWasmAbi::Abi"],[548,"V"],[560,""],[562,"T"],[576,""],[585,"T"],[589,""],[598,"T"],[612,""],[635,"T"],[636,""],[639,"T"],[640,""],[641,"T"],[642,""],[646,"T"],[648,""],[650,"T"],[652,"FromWasmAbi::Abi"],[653,""],[667,"U"],[674,"IntoWasmAbi::Abi"],[675,""],[681,"FromWasmAbi::Abi"],[687,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[693,""],[704,"IntoWasmAbi::Abi"],[710,""],[719,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[725,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[731,""],[764,"T"],[768,"U,T"],[775,"TryFromJsValue::Error"],[781,"U"],[788,""],[795,"VectorFromWasmAbi::Abi"],[801,"VectorIntoWasmAbi::Abi"],[807,"V"],[814,""],[829,"T"],[843,""],[852,"T"],[856,""],[865,"T"],[879,""],[904,"T"],[906,""],[908,"T"],[909,""],[913,"T"],[914,""],[916,"T"],[919,"FromWasmAbi::Abi"],[920,""],[934,"U"],[941,"IntoWasmAbi::Abi"],[942,""],[948,"FromWasmAbi::Abi"],[954,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[960,""],[971,"IntoWasmAbi::Abi"],[977,""],[986,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[992,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[998,""],[1031,"T"],[1035,"U,T"],[1042,"TryFromJsValue::Error"],[1048,"U"],[1055,""],[1062,"VectorFromWasmAbi::Abi"],[1068,"VectorIntoWasmAbi::Abi"],[1074,"V"],[1081,""],[1095,"T"],[1107,""],[1121,"T"],[1127,""],[1137,"T"],[1149,""],[1180,"T"],[1184,""],[1187,"T"],[1188,""],[1189,"T"],[1190,""],[1205,"U"],[1211,""],[1217,"FromWasmAbi::Abi"],[1223,""],[1225,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[1231,""],[1250,"IntoWasmAbi::Abi"],[1256,""],[1268,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[1274,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[1280,""],[1330,"T"],[1336,""],[1337,"U,T"],[1343,"TryFromJsValue::Error"],[1349,"U"],[1355,""],[1361,"VectorFromWasmAbi::Abi"],[1367,"VectorIntoWasmAbi::Abi"],[1373,"V"],[1379,""],[1390,"T"],[1402,""],[1416,"T"],[1422,""],[1432,"T"],[1444,""],[1475,"T"],[1478,""],[1480,"T"],[1482,""],[1484,"T"],[1485,""],[1500,"U"],[1506,""],[1512,"FromWasmAbi::Abi"],[1518,""],[1520,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[1526,""],[1545,"IntoWasmAbi::Abi"],[1551,""],[1563,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[1569,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[1575,""],[1625,"T"],[1631,""],[1632,"U,T"],[1638,"TryFromJsValue::Error"],[1644,"U"],[1650,""],[1656,"VectorFromWasmAbi::Abi"],[1662,"VectorIntoWasmAbi::Abi"],[1668,"V"],[1674,""],[1682,"T"],[1684,""],[1685,"T"],[1686,""],[1687,"T"],[1689,""],[1694,"T"],[1695,""],[1697,"U"],[1698,""],[1699,"FromWasmAbi::Abi"],[1700,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[1701,""],[1702,"IntoWasmAbi::Abi"],[1703,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[1704,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[1705,""],[1708,"T"],[1709,"U,T"],[1710,"TryFromJsValue::Error"],[1711,"U"],[1712,""],[1715,"VectorFromWasmAbi::Abi"],[1716,"VectorIntoWasmAbi::Abi"],[1717,"V"],[1719,"T"],[1721,""],[1722,"T"],[1723,""],[1724,"T"],[1726,""],[1729,"T"],[1730,""],[1734,"U"],[1735,""],[1736,"FromWasmAbi::Abi"],[1737,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[1738,""],[1739,"IntoWasmAbi::Abi"],[1740,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[1741,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[1742,""],[1745,"T"],[1746,"U,T"],[1747,"TryFromJsValue::Error"],[1748,"U"],[1749,""],[1752,"VectorFromWasmAbi::Abi"],[1753,"VectorIntoWasmAbi::Abi"],[1754,"V"],[1755,""],[1787,"R,OP"],[1791,"T"],[1793,""],[1812,"T"],[1813,""],[1814,"Deref::Target"],[1815,"T"],[1817,""],[1821,"T"],[1822,""],[1825,"U"],[1826,""],[1827,"FromWasmAbi::Abi"],[1828,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[1829,"IntoWasmAbi::Abi"],[1830,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[1831,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[1832,""],[1833,"T"],[1834,"U,T"],[1835,"TryFromJsValue::Error"],[1836,"U"],[1837,""],[1838,"VectorFromWasmAbi::Abi"],[1839,"VectorIntoWasmAbi::Abi"],[1840,"V"],[1842,"T"],[1844,""],[1863,"T"],[1864,""],[1865,"T"],[1866,"Deref::Target"],[1867,"T"],[1868,""],[1872,"T"],[1873,""],[1876,"U"],[1877,""],[1878,"FromWasmAbi::Abi"],[1879,"LongRefFromWasmAbi::Abi,LongRefFromWasmAbi::Anchor"],[1880,"IntoWasmAbi::Abi"],[1881,"RefFromWasmAbi::Abi,RefFromWasmAbi::Anchor"],[1882,"RefMutFromWasmAbi::Abi,RefMutFromWasmAbi::Anchor"],[1883,""],[1884,"T"],[1885,"U,T"],[1886,"TryFromJsValue::Error"],[1887,"U"],[1888,""],[1889,"VectorFromWasmAbi::Abi"],[1890,"VectorIntoWasmAbi::Abi"],[1891,"V"],[1896,"T"],[1903,""],[1907,"T"],[1908,""],[1909,"U"],[1910,"T"],[1912,""],[1913,"U,T"],[1914,"U"],[1915,""],[1916,"V"],[1918,"T"],[1922,"V"],[1953,""],[1955,"T"],[1956,""],[1957,"U"],[1958,"IntoDeserializer::Deserializer"],[1959,""],[1960,"T"],[1961,"V"],[1962,"U,T"],[1963,"U"],[1964,"V"],[1965,""],[1967,"V"],[1971,"T"],[1977,""],[1978,"T"],[1984,""],[1994,"T"],[1997,""],[2000,"U"],[2003,""],[2009,"T"],[2011,""],[2013,"T"],[2017,""],[2022,"T"],[2023,"Serializer::SerializeMap"],[2024,"T"],[2026,""],[2027,"Serializer::SerializeSeq"],[2028,"T"],[2029,""],[2030,"Serializer::SerializeStruct"],[2031,"Serializer::SerializeStructVariant"],[2032,"Serializer::SerializeTuple"],[2033,"Serializer::SerializeTupleStruct"],[2034,"Serializer::SerializeTupleVariant"],[2035,""],[2043,"T"],[2044,"U,T"],[2047,"U"],[2050,""],[2053,"V"]]}],["poly_commitment",{"t":"KEKRMMMMMMMCMCMMCCCNMMMCCMCMFFKKFRRFHNHHONNNNNNNNCNNONNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNMOONNNNHOHHNMNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNONNNNNONPGNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNCOONNNNNNNNNNNNNNNNNNONNNNNNNNNNNHNNNNNNNNNONNONNNNNNOONNNNNNNNONNNNNNNNNNNNNNNNNOOFNNONNNNNNNNNONNONNNNNOOFFONNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNNNNONNNNHPSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHHONNNNONNNNNNNNNNNPGPHHNNHNNNNNNNNNN","n":["OpenProof","PolyComm","SRS","","blinding_commitment","commit","commit_custom","commit_evaluations","commit_evaluations_custom","commit_evaluations_non_hiding","commit_non_hiding","commitment","create","error","get_lagrange_basis","get_lagrange_basis_from_domain_size","hash_map_cache","ipa","kzg","mask","mask_custom","max_poly_size","open","pbt_srs","precomputed_srs","size","utils","verify","BatchEvaluationProof","BlindedCommitment","CommitmentCurve","EndoCurve","Evaluation","Map","Params","PolyComm","absorb_commitment","add","b_poly","b_poly_coefficients","blinders","borrow","","","","borrow_mut","","","","caml","chunk_blinding","chunk_commitment","chunks","clone","","clone_into","","clone_to_uninit","","combine","combine_commitments","combine_one","combine_one_endo","combined_inner_product","","commitment","","deref","","","","deref_mut","","","","deserialize","","deserialize_as","drop","","","","eq","equivalent","","evalscale","evaluation_points","evaluations","","fmt","","from","","","","","","get_first_chunk","init","","","","into","","","","into_iter","is_empty","len","map","multi_scalar_mul","new","of_coordinates","opening","polyscale","scale","serialize","","serialize_as","shift_scalar","sponge","squeeze_challenge","squeeze_prechallenge","sub","to_coordinates","to_owned","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","zip","CamlPolyComm","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","from","","","from_value","init","into","into_value","ocaml_binding","ocaml_desc","shifted","to_owned","try_from","try_into","type_id","unique_id","unshifted","vzip","BlindersDontMatch","CommitmentError","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","","from","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","HashMapCache","borrow","borrow_mut","clone","clone_into","clone_to_uninit","contains_key","default","deref","deref_mut","drop","fmt","from","get_or_generate","init","into","new","new_from_hashmap","to_owned","try_from","try_into","type_id","vzip","Challenges","OpeningProof","SRS","blinding_commitment","borrow","","","borrow_mut","","","caml","chal","chal_inv","challenges","clone","","clone_into","","clone_to_uninit","","commit","commit_custom","commit_evaluations","commit_evaluations_custom","commit_evaluations_non_hiding","commit_non_hiding","create","create_parallel","create_trusted_setup","default","","delta","deref","","","deref_mut","","","deserialize","","drop","","","endos","eq","","fmt","","from","","","","","g","get_lagrange_basis","get_lagrange_basis_from_domain_size","h","init","","","into","","","lagrange_bases","lr","mask","mask_custom","max_poly_size","open","","prechallenges","serialize","","sg","size","to_owned","","try_from","","","try_into","","","type_id","","","verify","","vzip","","","z1","z2","CamlOpeningProof","borrow","borrow_mut","delta","deref","deref_mut","drop","from","","from_value","init","into","into_value","lr","ocaml_binding","ocaml_desc","sg","try_from","try_into","type_id","unique_id","vzip","z1","z2","KZGProof","PairingSRS","blinding","blinding_commitment","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","combine_evaluations","commit","commit_custom","commit_evaluations","commit_evaluations_custom","commit_evaluations_non_hiding","commit_non_hiding","create","","create_trusted_setup","default","","deref","","deref_mut","","deserialize","","drop","","eq","fmt","","from","","full_srs","get_lagrange_basis","get_lagrange_basis_from_domain_size","init","","into","","mask","mask_custom","max_poly_size","open","quotient","serialize","","size","to_owned","","try_from","","try_into","","type_id","","verifier_srs","verify","","vzip","","test_regression_commit_non_hiding_expected_number_of_chunks","Prod","SERIALIZED_SRS_SIZE","StoredSRSType","Test","TestSRS","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","deref","","deref_mut","","deserialize","drop","","eq","","equivalent","","","","fmt","from","","","g","get_srs","get_srs_generic","get_srs_test","h","init","","into","","lagrange_bases","serialize","to_owned","","try_from","","try_into","","type_id","","vzip","","DensePolynomial","DensePolynomialOrEvaluations","Evaluations","batch_dlog_accumulator_check","batch_dlog_accumulator_generate","borrow","borrow_mut","combine_polys","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip"],"q":[[0,"poly_commitment"],[28,"poly_commitment::commitment"],[144,"poly_commitment::commitment::caml"],[171,"poly_commitment::error"],[192,"poly_commitment::hash_map_cache"],[215,"poly_commitment::ipa"],[308,"poly_commitment::ipa::caml"],[332,"poly_commitment::kzg"],[399,"poly_commitment::pbt_srs"],[400,"poly_commitment::precomputed_srs"],[454,"poly_commitment::utils"],[472,"ark_poly::polynomial::univariate::dense"],[473,"rand_core"],[474,"core::result"],[475,"ark_poly::domain::radix2"],[476,"ark_poly::evaluations::univariate"],[477,"alloc::vec"],[478,"core::fmt"],[479,"ark_poly::domain"],[480,"core::clone"],[481,"mina_poseidon::sponge"],[482,"ark_ff::fields"],[483,"ark_ff::fields::prime"],[484,"ark_ec"],[485,"serde::de"],[486,"ark_serialize"],[487,"core::cmp"],[488,"core::convert"],[489,"core::marker"],[490,"core::ops::function"],[491,"ark_ec::models::short_weierstrass"],[492,"groupmap"],[493,"serde::ser"],[494,"core::ops::arith"],[495,"core::option"],[496,"core::any"],[497,"ocaml::value"],[498,"ocaml_interop::runtime"],[499,"ocaml_gen"],[500,"alloc::string"],[501,"core::hash"],[502,"core::default"],[503,"std::collections::hash::map"],[504,"ark_ec::pairing"],[505,"mina_curves::named"]],"i":"```Bhb000000`0`00```0001``0`1`````f0``Ad``nDbCb321032`333323232D``00`1232143214343421434441121432144434214321434444445114434`1``454321432143214321434`Ed0000000000000000000000000Af`0000000000000000000`H`000000000000000000000```HlHn1I`120`11020202022222222220012012020120`2020122002222120120202222002002201201201202012000`Id0000000000000000000000``IjIl1010101010`0000001001010101010010100001010000111001010101001110`Jh``0`0Ib101010100101001010110001000```01010001010101010B``0``00`0000000000","f":"````{{{d{b}}}cf}{{{d{b}}{d{h}}j{d{lc}}}{{n{e}}}{A`Ab}f}{{{d{b}}{d{h}}j{d{Ad}}}{{Ah{{n{c}}Af}}}f}{{{d{b}}Aj{d{{Al{Aj}}}}{d{lc}}}{{n{e}}}{A`Ab}f}{{{d{b}}Aj{d{{Al{Aj}}}}{d{Ad}}}{{Ah{{n{c}}Af}}}f}{{{d{b}}Aj{d{{Al{Aj}}}}}{{Ad{c}}}f}{{{d{b}}{d{h}}j}{{Ad{c}}}f}`{jb}`{{{d{b}}Aj}{{d{{An{{Ad{c}}}}}}}f}{{{d{b}}j}{{d{{An{{Ad{c}}}}}}}f}```{{{d{b}}{Ad{c}}{d{le}}}{{n{c}}}f{A`Ab}}{{{d{b}}{Ad{c}}{d{Ad}}}{{Ah{{n{c}}Af}}}f}{{{d{b}}}j}{{{d{c}}d{d{{Bd{{Bb{{B`{e}}Ad}}}}}}{d{Bd}}i{d{lk}}}{{Bh{}{{Bf{c}}}}}{{b{g}}Bj}Blf{Bn{C`{g}}}{A`Ab}}``1`{{{d{c}}d{d{l{Bd{{Cb{eg{Bh{}{{Bf{c}}}}}}}}}}{d{li}}}Cd{{b{e}}Bj}f{{C`{e}}}{A`Ab}}````````{{{d{li}}{d{{Ad{e}}}}}CfChBnCj{{C`{ceg}}}}{{{d{{Ad{c}}}}{d{{Ad{c}}}}}{{Ad{c}}}Cl}{{{d{{Bd{c}}}}c}cCh}{{{d{{Bd{c}}}}}{{An{c}}}Ch}{nAd}{d{{d{c}}}{}}000{{{d{l}}}{{d{lc}}}{}}000`{{{d{{Ad{c}}}}c}cCh}{{{d{{Ad{c}}}}}{{Ad{c}}}f}{AdAn}{{{d{{Ad{c}}}}}{{Ad{c}}}Bn}{{{d{{n{c}}}}}{{n{c}}}{fBn}}{{d{d{lc}}}Cf{}}0{{dCn}Cf}0{{{d{{Bd{D`}}}}{d{{Bd{D`}}}}cc}{{An{D`}}}{}}{{{d{{Bd{{Db{c}}}}}}{d{lAn}}{d{l{An{c}}}}}Cff}{{{d{{Bd{D`}}}}{d{{Bd{D`}}}}c}{{An{D`}}}{}}{{ce{d{{Bd{D`}}}}{d{{Bd{D`}}}}{Dd{c}}}{{An{D`}}}{}{}}{{{d{c}}{d{c}}{d{{Bd{{An{{An{c}}}}}}}}}cCj}{Cb}{DbAd}{nAd}{j{{d{c}}}{}}000{j{{d{lc}}}{}}000{c{{Ah{{Ad{e}}}}}Df{DhDj}}{c{{Ah{{n{e}}}}}Df{fDl}}{c{{Ah{{Ad{e}}}}}Df{}}{jCf}000{{{d{{Ad{c}}}}{d{{Ad{c}}}}}CdDn}{{d{d{c}}}Cd{}}0:{CbAn}{DbAn}1{{{d{{Ad{c}}}}{d{lE`}}}EbBj}{{{d{{n{c}}}}{d{lE`}}}Eb{fBj}}{cc{}}0{{{d{{Ed{c}}}}}{{Ad{e}}}{}{Cl{Ef{{d{c}}}}{Ef{c}}}}1{{{Ed{c}}}{{Ad{e}}}{}{Cl{Ef{c}}}}2{{{d{{Ad{c}}}}}c{EhBnDhDj}}{{}j}000{{}c{}}000{{{d{{Ad{c}}}}}e{}{}}{{{d{{Ad{c}}}}}Cd{EhBnDhDj}}{{{d{{Ad{c}}}}}j{EhBnDhDj}}{{{d{{Ad{c}}}}g}{{Ad{e}}}{EhBnDhDj}{DhDj}{{El{c}{{Ej{e}}}}}}{{{d{{Bd{{d{{Ad{c}}}}}}}}{d{Bd}}}{{Ad{c}}}Cl}{{{An{c}}}{{Ad{c}}}{}}{{cc}{{f{}{{En{e}}{F`{g}}}}}{}Fb{{Fd{c}}}}{Cbd}{Cb}{{{d{{Ad{c}}}}}{{Ad{c}}}Cl}{{{d{{Ad{c}}}}e}Ah{DhDj}Ff}{{{d{{n{c}}}}e}Ah{fFh}Ff}{{{d{{Ad{c}}}}e}Ah{}Ff}{{}}5{{{d{c}}{d{li}}}cCjCh{}{{C`{egc}}}}{{{d{li}}}{{Dd{g}}}Ch{}Ch{{C`{ceg}}}}{{{d{{Ad{c}}}}{d{{Ad{c}}}}}{{Ad{c}}}{Cl{Fj{}{{Ej{}}}}}}{{{d{{f{}{{En{c}}{F`{e}}}}}}}{{Fl{{Bb{gg}}}}}Fb{{Fd{g}}}{}}{dc{}}0{c{{Ah{e}}}{}{}}000{{}{{Ah{c}}}{}}000{dFn}000{{}c{}}000{{{d{{Ad{c}}}}{d{{Ad{e}}}}}{{Fl{{Ad{{Bb{ce}}}}}}}{EhBnDhDj}{EhDhDj}}`{d{{d{c}}}{}}{{{d{l}}}{{d{lc}}}{}}{{{d{{Ed{c}}}}}{{Ed{c}}}Bn}{{d{d{lc}}}Cf{}}{{dCn}Cf}{j{{d{c}}}{}}{j{{d{lc}}}{}}{jCf}{{{d{{Ed{c}}}}{d{lE`}}}EbBj}{{{Ad{c}}}{{Ed{e}}}Cl{{Ef{c}}}}{cc{}}{{{d{{Ad{c}}}}}{{Ed{e}}}Cl{{Ef{c}}{Ef{{d{c}}}}}}{G`{{Ed{c}}}Gb}{{}j}{{}c{}}{{{Ed{c}}{d{Gd}}}G`Gf}{{{d{lGh}}{Fl{{d{Gj}}}}Cd}Gl}{{{d{Gh}}{d{{Bd{{d{Gj}}}}}}}Gl}{EdFl}{dc{}}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{dFn}{{}Gn}{EdAn}{{}c{}}``{d{{d{c}}}{}}{{{d{l}}}{{d{lc}}}{}}{{{d{Af}}}Af}{{d{d{lc}}}Cf{}}{{dCn}Cf}{j{{d{c}}}{}}{j{{d{lc}}}{}}{jCf}{{{d{Af}}{d{lE`}}}Eb}0{cc{}}{{}j}{{}c{}}{dc{}}{dGl}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{dFn}{{}c{}}`{d{{d{c}}}{}}{{{d{l}}}{{d{lc}}}{}}{{{d{{H`{ce}}}}}{{H`{ce}}}{BnHb}Bn}{{d{d{lc}}}Cf{}}{{dCn}Cf}{{{d{{H`{ce}}}}{d{c}}}Cd{HbHd}{}}{{}{{H`{ce}}}{HfHb}Hf}{j{{d{c}}}{}}{j{{d{lc}}}{}}{jCf}{{{d{{H`{ce}}}}{d{lE`}}}Eb{BjHb}Bj}{cc{}}{{{d{{H`{ce}}}}cg}{{d{e}}}{HbHd}{}{{Hh{}{{Ej{e}}}}}}{{}j}{{}c{}}{{}{{H`{ce}}}{HbHd}{}}{{{Hj{ce}}}{{H`{ce}}}{HbHd}{}}{dc{}}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{dFn}{{}c{}}```{{{d{{Hl{c}}}}}cf}{d{{d{c}}}{}}00{{{d{l}}}{{d{lc}}}{}}00`{HnAn}0{{{d{{I`{c}}}}d{d{le}}}HnCl{{C`{c}}}}{{{d{{Hl{c}}}}}{{Hl{c}}}Bn}{{{d{{I`{c}}}}}{{I`{c}}}{BnCl}}{{d{d{lc}}}Cf{}}0{{dCn}Cf}0{{{d{{Hl{c}}}}{d{h}}j{d{le}}}{{n{c}}}f{A`Ab}}{{{d{{Hl{c}}}}{d{h}}j{d{Ad}}}{{Ah{{n{c}}Af}}}f}{{{d{{Hl{c}}}}Aj{d{{Al{Aj}}}}{d{le}}}{{n{c}}}f{A`Ab}}{{{d{{Hl{c}}}}Aj{d{{Al{Aj}}}}{d{Ad}}}{{Ah{{n{c}}Af}}}f}{{{d{{Hl{c}}}}Aj{d{{Al{Aj}}}}}{{Ad{c}}}f}{{{d{{Hl{c}}}}{d{h}}j}{{Ad{c}}}f}{j{{Hl{c}}}f}00{{}{{Hl{c}}}Hf}{{}{{I`{c}}}{HfCl}}{I`}{j{{d{c}}}{}}00{j{{d{lc}}}{}}00{c{{Ah{{Hl{e}}}}}Df{DhDj}}{c{{Ah{{I`{e}}}}}Df{DhDjCl}}{jCf}00{{}Bb}{{{d{{Hl{c}}}}{d{{Hl{c}}}}}CdDn}{{{d{{I`{c}}}}{d{{I`{c}}}}}Cd{DnCl}}{{{d{{Hl{c}}}}{d{lE`}}}EbBj}{{{d{{I`{c}}}}{d{lE`}}}Eb{BjCl}}{cc{}}{{{Ib{c}}}{{Hl{c}}}{}}11{{{Id{eg}}}{{I`{c}}}Cl{{If{c}}}If}{HlAn}{{{d{{Hl{c}}}}Aj}{{d{{An{{Ad{c}}}}}}}f}{{{d{{Hl{c}}}}j}{{d{{An{{Ad{c}}}}}}}f}{Hl}{{}j}00{{}c{}}00{HlH`}{I`An}{{{d{{Hl{c}}}}{Ad{c}}{d{le}}}{{n{c}}}f{A`Ab}}{{{d{{Hl{c}}}}{Ad{c}}{d{Ad}}}{{Ah{{n{c}}Af}}}f}{{{d{{Hl{c}}}}}jf}{{{d{{Hl{c}}}}d{d{{Bd{{Bb{{B`{e}}Ad}}}}}}{d{Bd}}g{d{li}}}{{I`{c}}}{D`f}Bl{Bn{C`{c}}}{A`Ab}}{{{d{c}}d{d{{Bd{{Bb{{B`{e}}Ad}}}}}}{d{Bd}}k{d{lm}}}{{I`{i}}}{}BlCj{{Cl{}{{Ih{g}}}}fD`}{Bn{C`{i}}}{A`Ab}}{{{d{{I`{c}}}}{d{le}}}{{An{Dd}}}Cl{{C`{c}}}}{{{d{{Hl{c}}}}e}Ah{DhDj}Ff}{{{d{{I`{c}}}}e}Ah{DhDjCl}Ff}{I`}6{dc{}}0{c{{Ah{e}}}{}{}}00{{}{{Ah{c}}}{}}00{dFn}00{{{d{{Hl{c}}}}d{d{l{Bd{{Cb{ce{I`{c}}}}}}}}{d{lg}}}Cdf{{C`{c}}}{A`Ab}}{{{d{c}}d{d{l{Bd{{Cb{gi{I`{g}}}}}}}}{d{lk}}}Cd{}Cj{{Cl{}{{Ih{e}}}}fD`}{{C`{g}}}{A`Ab}}{{}c{}}0077`{d{{d{c}}}{}}{{{d{l}}}{{d{lc}}}{}}{Id}{j{{d{c}}}{}}{j{{d{lc}}}{}}{jCf}{{{I`{c}}}{{Id{eg}}}Cl{{Ef{c}}}Ef}{cc{}}{G`{{Id{ce}}}GbGb}{{}j}{{}c{}}{{{Id{ce}}{d{Gd}}}G`GfGf}{IdAn}{{{d{lGh}}{Fl{{d{Gj}}}}Cd}Gl}{{{d{Gh}}{d{{Bd{{d{Gj}}}}}}}Gl}<{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{dFn}{{}Gn}{{}c{}}{Id}0``{Ij}{{{d{{Il{i}}}}}eCj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}}{d{{d{c}}}{}}0{{{d{l}}}{{d{lc}}}{}}0{{{d{{Ij{c}}}}}{{Ij{c}}}Jd}{{{d{{Il{c}}}}}{{Il{c}}}Jd}{{d{d{lc}}}Cf{}}0{{dCn}Cf}0{{{d{{Bd{{Db{c}}}}}}}Anf}{{{d{{Il{i}}}}{d{{h{c}}}}j{d{lk}}}{{n{e}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}{A`Ab}}{{{d{{Il{i}}}}{d{h}}j{d{Ad}}}{{Ah{{n{e}}Af}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}}{{{d{{Il{i}}}}Aj{d{{Al{Aj}}}}{d{lk}}}{{n{e}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}{A`Ab}}{{{d{{Il{i}}}}Aj{d{{Al{Aj}}}}{d{Ad}}}{{Ah{{n{e}}Af}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}}{{{d{{Il{i}}}}Aj{d{{Al{Aj}}}}}{{Ad{e}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}}{{{d{{Il{i}}}}{d{h}}j}{{Ad{e}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}}{{{d{{Il{i}}}}{d{{Bd{{Bb{{B`{k}}Ad}}}}}}{d{{Bd{c}}}}c}{{Fl{{Ij{i}}}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}{{Bl{c}}}}{j{{Il{i}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}}{{cj}{{Il{i}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}}{{}{{Ij{c}}}Jd}{{}{{Il{c}}}Jd}{j{{d{c}}}{}}0{j{{d{lc}}}{}}0{c{{Ah{{Ij{e}}}}}DfJd}{c{{Ah{{Il{e}}}}}DfJd}{jCf}0{{{d{{Il{c}}}}{d{{Il{c}}}}}Cd{DnJd}}{{{d{{Ij{c}}}}{d{lE`}}}Eb{BjJd}}{{{d{{Il{c}}}}{d{lE`}}}Eb{BjJd}}{cc{}}0{IlHl}{{{d{{Il{i}}}}Aj}{{d{{An{{Ad{e}}}}}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}}{{{d{{Il{i}}}}j}{{d{{An{{Ad{e}}}}}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}}{{}j}0{{}c{}}0{{{d{{Il{i}}}}{Ad{e}}{d{lk}}}{{n{e}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}{A`Ab}}{{{d{{Il{i}}}}{Ad{e}}{d{Ad}}}{{Ah{{n{e}}Af}}}Cj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}}{{{d{{Il{i}}}}}jCj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}}{{{d{c}}d{d{{Bd{{Bb{{B`{g}}Ad}}}}}}{d{Bd}}k{d{lm}}}{{Ij{Aa}}}{}Cj{{Bl{e}}}{{f{}{{In{e}}}}}{Bn{C`{ie}}}{A`Ab}{{f{}{{In{e}}}}}{{Jd{}{{J`{i}}{Jb{o}}}}}}{Ij}{{{d{{Ij{c}}}}e}AhJdFf}{{{d{{Il{c}}}}e}AhJdFf}4{dc{}}0{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{dFn}0?{{{d{{Ij{i}}}}{d{{Il{i}}}}{d{{Bd{{Db{e}}}}}}c{d{{Bd{c}}}}}CdCj{{f{}{{In{c}}}}}{{f{}{{In{c}}}}}{{Jd{}{{J`{e}}{Jb{g}}}}}}{{{d{c}}d{d{l{Bd{{Cb{gi{Ij{m}}}}}}}}{d{lo}}}Cd{}Cj{{f{}{{In{e}}}}}{{C`{ge}}}{{f{}{{In{}}}}}{{Jd{}{{J`{g}}{Jb{k}}}}}{A`Ab}}{{}c{}}0{{}Cf}`{{}Jf}```{d{{d{c}}}{}}0{{{d{l}}}{{d{lc}}}{}}0{{{d{Jh}}}Jh}{{{d{{Ib{c}}}}}{{Ib{c}}}Bn}{{d{d{lc}}}Cf{}}0{{dCn}Cf}0{{}{{Ib{c}}}Hf}{j{{d{c}}}{}}0{j{{d{lc}}}{}}0{c{{Ah{{Ib{e}}}}}Df{DhDj}}{jCf}0{{{d{Jh}}{d{Jh}}}Cd}{{{d{{Ib{c}}}}{d{{Ib{c}}}}}CdDn}{{d{d{c}}}Cd{}}000{{{d{{Ib{c}}}}{d{lE`}}}EbBj}{cc{}}0{{{Hl{c}}}{{Ib{c}}}Bn}{IbAn}{{}{{Hl{c}}}{Jjf}}{Jh{{Hl{c}}}{Jjf}}1{Ib}{{}j}0{{}c{}}0{IbHj}{{{d{{Ib{c}}}}e}Ah{DhDj}Ff}{dc{}}0{c{{Ah{e}}}{}{}}0{{}{{Ah{c}}}{}}0{dFn}0{{}c{}}0```{{{d{{Hl{c}}}}{d{{Bd{c}}}}{d{Bd}}}Cdf}{{{d{{Hl{c}}}}j{d{An}}}{{An{c}}}f}{d{{d{c}}}{}}{{{d{l}}}{{d{lc}}}{}}{{{d{{Bd{{Bb{{B`{c}}Ad}}}}}}j}{{Bb{h}}}Bl}{j{{d{c}}}{}}{j{{d{lc}}}{}}{jCf}{cc{}}{{}j}{{}c{}}>=<;","D":"Nd","p":[[10,"SRS",0],[1,"reference",null,null,1],[10,"CommitmentCurve",28],[5,"DensePolynomial",472],[1,"usize"],[0,"mut"],[5,"BlindedCommitment",28],[10,"RngCore",473],[10,"CryptoRng",473],[5,"PolyComm",28],[6,"CommitmentError",171],[6,"Result",474,null,1],[5,"Radix2EvaluationDomain",475],[5,"Evaluations",476],[5,"Vec",477],[6,"DensePolynomialOrEvaluations",454],[1,"tuple",null,null,1],[1,"slice"],[17,"SRS"],[10,"OpenProof",0],[10,"Debug",478],[10,"EvaluationDomain",479],[10,"Clone",480],[10,"FqSponge",481],[5,"BatchEvaluationProof",28],[1,"bool"],[1,"unit"],[10,"Field",482],[10,"PrimeField",483],[10,"AffineRepr",484],[1,"u8"],[10,"EndoCurve",28],[5,"Evaluation",28],[5,"ScalarChallenge",481],[10,"Deserializer",485],[10,"CanonicalDeserialize",486],[10,"CanonicalSerialize",486],[10,"Deserialize",485],[10,"PartialEq",487],[5,"Formatter",478],[8,"Result",478],[5,"CamlPolyComm",144],[10,"From",488,null,1],[10,"Copy",489],[17,"Output"],[10,"FnMut",490],[17,"Params"],[17,"Map"],[10,"SWCurveConfig",491],[10,"GroupMap",492],[10,"Serializer",493],[10,"Serialize",493],[10,"Sub",494],[6,"Option",495,null,1],[5,"TypeId",496],[6,"Value",497],[10,"FromValue",497],[5,"OCamlRuntime",498],[10,"IntoValue",497],[5,"Env",499],[1,"str"],[5,"String",500],[1,"u128"],[5,"HashMapCache",192],[10,"Hash",501],[10,"Eq",487],[10,"Default",502],[10,"FnOnce",490],[5,"HashMap",503],[5,"SRS",215],[5,"Challenges",215],[5,"OpeningProof",215],[5,"TestSRS",400],[5,"CamlOpeningProof",308],[10,"Into",488,null,1],[17,"BaseField"],[5,"KZGProof",332],[5,"PairingSRS",332],[17,"ScalarField"],[17,"G1Affine"],[17,"G2Affine"],[10,"Pairing",504],[1,"u32"],[6,"StoredSRSType",400],[10,"NamedCurve",505]],"r":[[1,28]],"b":[[93,"impl-From%3C%26CamlPolyComm%3CCamlG%3E%3E-for-PolyComm%3CG%3E"],[95,"impl-From%3CCamlPolyComm%3CCamlG%3E%3E-for-PolyComm%3CG%3E"],[154,"impl-From%3CPolyComm%3CG%3E%3E-for-CamlPolyComm%3CCamlG%3E"],[156,"impl-From%3C%26PolyComm%3CG%3E%3E-for-CamlPolyComm%3CCamlG%3E"],[181,"impl-Display-for-CommitmentError"],[182,"impl-Debug-for-CommitmentError"],[395,"impl-KZGProof%3CPair%3E"],[396,"impl-OpenProof%3CG%3E-for-KZGProof%3CPair%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGYBOQAAAAQADgAAABEAAAAaAAEAIgABACUAAQAoAAoANQAHAEEAAABDABIAWgABAF4AAABgAAAAYwADAGsAAABuAAAAcAABAHQAAwB6ACEAnQACAKEAFgC5AAAAuwARAM4AAQDRAAYA2QALAOYADAD1ABIACQEAAAwBAAAOAQEAEQECABoBAAAcAQEAHwEBACIBCwAvAQ0APgEBAEEBAABDAQoAUAEKAFwBBQBjAQAAZQEMAHUBAwB7AQIAfwELAI0BBACUAQAAlgEYALEBAAC3AQEAvAEKAMoBAwDPAQIA0wEAANUBAwA=","P":[[4,"G"],[12,""],[14,"G"],[21,""],[22,"OpenProof::SRS,D,G,EFqSponge,RNG"],[25,""],[27,"OpenProof::SRS,G,EFqSponge,RNG"],[36,"Fq,G,Fr,EFqSponge"],[37,"C"],[38,"F"],[40,""],[41,"T"],[50,"F"],[51,"C"],[52,""],[53,"C"],[54,"G"],[55,"T"],[57,""],[59,"AffineRepr::ScalarField"],[60,"G"],[61,"AffineRepr::ScalarField"],[62,"AffineRepr::ScalarField,AffineRepr::BaseField"],[63,"F"],[64,""],[67,"T"],[75,"__D,C"],[76,"__D,G"],[77,"D,T"],[78,""],[82,"C"],[83,"K"],[85,""],[89,"C"],[90,"G"],[91,"T"],[93,"CamlG,G"],[94,"T"],[95,"CamlG,G"],[96,"T"],[97,"A"],[98,""],[102,"U"],[106,"G,IntoIterator::IntoIter"],[107,"A"],[109,"A,B,F"],[110,"C"],[111,"T"],[112,"AffineRepr::BaseField,CommitmentCurve::Params,CommitmentCurve::Map"],[113,""],[115,"C"],[116,"C,__S"],[117,"G,__S"],[118,"T,S"],[119,""],[121,"Fr,Fq,G,EFqSponge"],[122,"Fq,G,Fr,EFqSponge"],[123,"C"],[124,"CommitmentCurve::Params,CommitmentCurve::Map,AffineRepr::BaseField"],[125,"T"],[127,"U,T"],[131,"U"],[135,""],[139,"V"],[143,"A,B"],[145,"T"],[147,"CamlG"],[148,"T"],[149,""],[150,"T"],[152,""],[153,"CamlG"],[154,"G,CamlG"],[155,"T"],[156,"G,CamlG"],[157,"CamlG"],[158,""],[159,"U"],[160,"CamlG"],[161,""],[164,"T"],[165,"U,T"],[166,"U"],[167,""],[170,"V"],[173,"T"],[175,""],[176,"T"],[177,""],[178,"T"],[180,""],[183,"T"],[184,""],[185,"U"],[186,"T"],[187,""],[188,"U,T"],[189,"U"],[190,""],[191,"V"],[193,"T"],[195,"Key,Value"],[196,"T"],[197,""],[198,"Key,Value"],[200,"T"],[202,""],[203,"Key,Value"],[204,"T"],[205,"Key,Value,F"],[206,""],[207,"U"],[208,"Key,Value"],[210,"T"],[211,"U,T"],[212,"U"],[213,""],[214,"V"],[218,"G"],[219,"T"],[226,""],[228,"G,EFqSponge"],[229,"G"],[231,"T"],[233,""],[235,"G"],[246,""],[247,"T"],[253,"__D,G"],[255,""],[259,"G"],[263,"T"],[264,"G"],[265,"T"],[267,"G,CamlG,CamlF"],[268,""],[269,"G"],[271,""],[275,"U"],[278,""],[280,"G"],[283,"G,D,EFqSponge,RNG"],[284,"OpenProof::SRS,D,BaseField,G,EFqSponge,RNG"],[285,"G,EFqSponge"],[286,"G,__S"],[288,""],[289,"G"],[290,"T"],[292,"U,T"],[295,"U"],[298,""],[301,"G,EFqSponge,RNG"],[302,"OpenProof::SRS,BaseField,G,EFqSponge,RNG"],[303,"V"],[306,""],[309,"T"],[311,""],[312,"T"],[314,""],[315,"G,CamlG,CamlF"],[316,"T"],[317,"G,F"],[318,""],[319,"U"],[320,"G,F"],[321,""],[325,"U,T"],[326,"U"],[327,""],[329,"V"],[330,""],[335,"F,G,G2,Pair"],[336,"T"],[340,"Pair"],[342,"T"],[344,""],[346,"G"],[347,"F,G,G2,Pair"],[353,"F,G,G2,Pair,D"],[354,"F,G,G2,Pair"],[356,"Pair"],[358,"T"],[362,"__D,Pair"],[364,""],[366,"Pair"],[369,"T"],[371,""],[372,"F,G,G2,Pair"],[374,""],[376,"U"],[378,"F,G,G2,Pair"],[381,"OpenProof::SRS,F,D,G,EFqSponge,RNG,G2,Pair"],[382,""],[383,"Pair,__S"],[385,"F,G,G2,Pair"],[386,"T"],[388,"U,T"],[390,"U"],[392,""],[395,"F,G,G2,Pair"],[396,"OpenProof::SRS,F,G,EFqSponge,G2,Pair,RNG"],[397,"V"],[399,""],[405,"T"],[409,""],[410,"G"],[411,"T"],[413,""],[415,"G"],[416,"T"],[420,"__D,G"],[421,""],[424,"G"],[425,"K"],[429,"G"],[430,"T"],[432,"G"],[433,""],[434,"G"],[437,""],[440,"U"],[442,""],[443,"G,__S"],[444,"T"],[446,"U,T"],[448,"U"],[450,""],[452,"V"],[457,"G"],[459,"T"],[461,"D"],[462,"T"],[464,""],[465,"T"],[466,""],[467,"U"],[468,"U,T"],[469,"U"],[470,""],[471,"V"]]}],["saffron",{"t":"IIIIIISICCCCCCCOOCOOCCCOOOFNNNNNNNOONNNNNNNNNNNNNNNNNNGPFPFPFFPFPFONNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNOOOOOOOOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNOHHHHNNNNNNNNNNNNNNNNNNPFGONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNNNNNNNNNOOHHHHHHFFFFFOONNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNONNNNNNNNNNNNONHHNNNNNNNNNNNNNNNOHOOONNCNNNNNNNNNNNNNNNNOHNNNNNHHFFFOONNNNNNNNNONNNNNNNNNNNNNNNNNNNOHOOONNNNNNNNNNNNNNHHNNNFNNNNONNNNHNNNNNHNNNNNHNFNNNNNONNNNNNNNOHNNNNNHHNFGFPHNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHONNNNNNNNNNNNNNNOOOO","n":["BaseField","Curve","CurveFqSponge","CurveFrSponge","CurveParameters","ProjectiveCurve","SRS_SIZE","ScalarField","blob","cli","commitment","diff","encoding","env","folding","last_squeezed","","read_proof","sponge","","storage","storage_proof","utils","x","y","z","FieldBlob","alloc_empty","apply_diff","borrow","borrow_mut","clone","clone_into","clone_to_uninit","commitments","data","deref","deref_mut","deserialize","drop","eq","fmt","from","from_bytes","from_data","init","into","into_bytes","serialize","to_owned","try_from","try_into","type_id","vzip","Commands","ComputeCommitment","ComputeCommitmentArgs","Decode","DecodeFileArgs","Encode","EncodeFileArgs","HexString","StorageProof","StorageProofArgs","VerifyStorageProof","VerifyStorageProofArgs","assert_commitment","augment_args","","","","","augment_args_for_update","","","","","augment_subcommands","augment_subcommands_for_update","borrow","","","","","","","borrow_mut","","","","","","","challenge_seed","","","","clone","clone_into","clone_to_uninit","command","","","","","","command_for_update","","","","","","commitment","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fmt","","from","","","","","","","from_arg_matches","","","","","","from_arg_matches_mut","","","","","","from_str","group_id","","","","","has_subcommand","init","","","","","","","input","","","","into","","","","","","","output","","","proof","srs_cache","","","","","to_owned","to_string","truncate_to_bytes","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","update_from_arg_matches","","","","","","update_from_arg_matches_mut","","","","","","vzip","","","","","","","Commitment","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cm","combine_commitments","commit_poly","commit_sparse","commit_to_field_elems","deref","deref_mut","drop","eq","equivalent","","fmt","from","","from_data","init","into","to_owned","try_from","try_into","type_id","update","vzip","CapacityMismatch","Diff","DiffError","addresses","apply","apply_inplace","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","create_from_bytes","create_from_field_elements","deref","","deref_mut","","diff_values","drop","","eq","","fmt","","","from","","init","","into","","region","to_owned","","to_string","try_from","","try_into","","type_id","","vzip","","attempted","max_number_chunks","encode","encode_as_field_elements","encode_as_field_elements_full","encode_for_domain","get_srs_from_cache","init_console_subscriber","CoreInstance","CoreWitness","ReadProof","RelaxedInstance","RelaxedWitness","a","answer_eval","borrow","","","","","borrow_mut","","","","","check_in_language","clone","clone_into","clone_to_uninit","comm_a","comm_d","comm_e","comm_q","core","","d","data_eval","deref","","","","","deref_mut","","","","","drop","","","","","e","eq","","","","equivalent","","","","","","","","error_eval","fmt","folding_prover","folding_verifier","from","","","","","init","","","","","into","","","","","opening_proof","prove_relaxed","q","query_eval","quotient_comm","relax","","testing","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","u","verify_relaxed","vzip","","","","","generate_random_inst_wit_core","generate_random_inst_wit_relaxed","Answer","Query","ReadProof","answer_comm","answer_eval","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","data_eval","deref","","","deref_mut","","","drop","","","fmt","from","","","init","","","into","","","opening_proof","prove","query","query_eval","quotient_comm","random","to_answer","to_commitment","to_owned","to_polynomial","try_from","","","try_into","","","type_id","","","verify","verify_answer","vzip","","","Data","apply","apply_inplace","borrow","borrow_mut","data","deref","deref_mut","drop","from","init","","into","is_empty","len","of_bytes","read","to_commitment","to_polynomial","try_from","try_into","type_id","update","vzip","StorageProof","borrow","borrow_mut","clone","clone_into","clone_to_uninit","combined_data_eval","deref","deref_mut","deserialize","drop","fmt","from","init","into","opening_proof","prove","serialize","to_owned","try_from","try_into","type_id","verify","verify_wrt_combined_data_commitment","vzip","QueryBytes","QueryError","QueryField","QueryOutOfBounds","aggregate_commitments","apply","borrow","","","borrow_mut","","","chunk_size_in_bytes","clone","","clone_into","","clone_to_uninit","","deref","","","deref_mut","","","drop","","","eq","fmt","","","","from","","","init","","","into","","","into_query_field","len","min_encoding_chunks","start","to_owned","","to_string","try_from","","","try_into","","","type_id","","","vzip","","","domain_size","eval_index","n_polys","poly_index"],"q":[[0,"saffron"],[26,"saffron::blob"],[54,"saffron::cli"],[232,"saffron::commitment"],[261,"saffron::diff"],[309,"saffron::diff::DiffError"],[311,"saffron::encoding"],[315,"saffron::env"],[317,"saffron::folding"],[424,"saffron::folding::testing"],[426,"saffron::read_proof"],[484,"saffron::storage"],[508,"saffron::storage_proof"],[533,"saffron::utils"],[594,"saffron::utils::QueryError"],[598,"alloc::vec"],[599,"mina_poseidon::poseidon"],[600,"ark_ff::fields::models::fp"],[601,"poly_commitment::ipa"],[602,"ark_poly::domain::radix2"],[603,"core::result"],[604,"serde::de"],[605,"core::fmt"],[606,"ark_poly::domain"],[607,"serde::ser"],[608,"core::any"],[609,"core::option"],[610,"clap_builder::builder::command"],[611,"clap_builder::parser::matches::arg_matches"],[612,"clap_builder"],[613,"clap_builder::util::id"],[614,"alloc::string"],[615,"core::clone"],[616,"kimchi::curve"],[617,"ark_ec"],[618,"mina_poseidon::sponge"],[619,"ark_poly::polynomial::univariate::dense"],[620,"core::cmp"],[621,"ark_ff::fields::prime"],[622,"poly_commitment::commitment"],[623,"ark_poly::evaluations::univariate"],[624,"kimchi::circuits::domains"],[625,"rand_core"],[626,"mina_curves::pasta::curves::vesta"],[627,"std::io::error"],[628,"rand_core::os"]],"i":"```````````````dh`10```l00`A`00000000000000000000000000`Dj`0`0``0`0`Cf0DhClD`Db4321055Cn54321605432165321000543216543216105432160543216054321600054321654321654321605432160543216543205432165431543210040543216054321605432165432165432160543216`Eb00000````000000000000000000Fh``An00010101010100010100101011010101001101010101Fj0```````````FnGbGhGd3Gf321403133322121043214032140321403021402211440033``2140321403214033`43324`32140321403214031`21403`````Hd0HhHl2102222210210210221021021022`12211121102102102``102`Hf00000000`00000`00000`0`Ib00000000000000`00000``0```Ij`IfIh12012`0202020120120122012201201201200`0022012012012012Il000","f":"``````{{}b}````````{df}{hf}`{dj}{hj}```{ln}00`{bA`}{{{Ad{AbA`}}{Ad{{Ah{Af}}}}{Ad{{Al{Aj}}}}{Ad{{An{Aj}}}}}B`}{Ad{{Ad{c}}}{}}{{{Ad{Ab}}}{{Ad{Abc}}}{}}{{{Ad{A`}}}A`}{{Ad{Ad{Abc}}}B`{}}{{AdBb}B`}{A`f}0{b{{Ad{c}}}{}}{b{{Ad{Abc}}}{}}{c{{Bd{A`}}}Bf}{bB`}{{{Ad{A`}}{Ad{A`}}}Bh}{{{Ad{A`}}{Ad{AbBj}}}Bl}{cc{}}{{{Ad{{Ah{Af}}}}c{Ad{{Bn{Bb}}}}}A`{{C`{Aj}}}}{{{Ad{{Ah{Af}}}}{Ad{{Bn{Aj}}}}}A`}{{}b}{{}c{}}{A`{{f{Bb}}}}{{{Ad{A`}}c}BdCb}{Adc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{AdCd}{{}c{}}````````````{CfCh}{CjCj}00000000000{Ad{{Ad{c}}}{}}000000{{{Ad{Ab}}}{{Ad{Abc}}}{}}0000003{ClCn}{D`Cn}{DbCn}{{{Ad{Cn}}}Cn}{{Ad{Ad{Abc}}}B`{}}{{AdBb}B`}{{}Cj}000000000004{b{{Ad{c}}}{}}000000{b{{Ad{Abc}}}{}}000000{bB`}000000{{{Ad{Cn}}{Ad{AbBj}}}Bl}0{cc{}}000000{{{Ad{Dd}}}{{Bd{CfDf}}}}{{{Ad{Dd}}}{{Bd{DhDf}}}}{{{Ad{Dd}}}{{Bd{ClDf}}}}{{{Ad{Dd}}}{{Bd{D`Df}}}}{{{Ad{Dd}}}{{Bd{DbDf}}}}{{{Ad{Dd}}}{{Bd{DjDf}}}}{{{Ad{AbDd}}}{{Bd{CfDf}}}}{{{Ad{AbDd}}}{{Bd{DhDf}}}}{{{Ad{AbDd}}}{{Bd{ClDf}}}}{{{Ad{AbDd}}}{{Bd{D`Df}}}}{{{Ad{AbDd}}}{{Bd{DbDf}}}}{{{Ad{AbDd}}}{{Bd{DjDf}}}}{{{Ad{Dl}}}{{Bd{Cnc}}}{}}{{}{{Ch{Dn}}}}0000{{{Ad{Dl}}}Bh}{{}b}000000{CfE`}{DhE`}{ClE`}{D`E`}{{}c{}}000000432{DbCn}{CfCh}{DhCh}{ClCh}{D`Ch}{DbCh}{Adc{}}{AdE`}5{c{{Bd{e}}}{}{}}000000{{}{{Bd{c}}}{}}000000{AdCd}000000{{{Ad{AbCf}}{Ad{Dd}}}{{Bd{B`Df}}}}{{{Ad{AbDh}}{Ad{Dd}}}{{Bd{B`Df}}}}{{{Ad{AbCl}}{Ad{Dd}}}{{Bd{B`Df}}}}{{{Ad{AbD`}}{Ad{Dd}}}{{Bd{B`Df}}}}{{{Ad{AbDb}}{Ad{Dd}}}{{Bd{B`Df}}}}{{{Ad{AbDj}}{Ad{Dd}}}{{Bd{B`Df}}}}{{{Ad{AbCf}}{Ad{AbDd}}}{{Bd{B`Df}}}}{{{Ad{AbDh}}{Ad{AbDd}}}{{Bd{B`Df}}}}{{{Ad{AbCl}}{Ad{AbDd}}}{{Bd{B`Df}}}}{{{Ad{AbD`}}{Ad{AbDd}}}{{Bd{B`Df}}}}{{{Ad{AbDb}}{Ad{AbDd}}}{{Bd{B`Df}}}}{{{Ad{AbDj}}{Ad{AbDd}}}{{Bd{B`Df}}}}{{}c{}}000000`{Ad{{Ad{c}}}{}}{{{Ad{Ab}}}{{Ad{Abc}}}{}}{{{Ad{{Eb{c}}}}}{{Eb{c}}}{EdEf}}{{Ad{Ad{Abc}}}B`{}}{{AdBb}B`}{Eb}{{{Ad{Abe}}{Ad{{Bn{c}}}}}{{Eh{c}}}Ej{{El{c}}}}{{{Ad{{Ah{c}}}}{Ad{En}}}cEf}{{{Ad{{Ah{c}}}}{Ad{Bn}}{Ad{{Bn{F`}}}}}cEf}{{{Ad{{Ah{c}}}}{Ad{Bn}}}{{f{c}}}Ef}{b{{Ad{c}}}{}}{b{{Ad{Abc}}}{}}{bB`}{{{Ad{{Eb{c}}}}{Ad{{Eb{c}}}}}Bh{FbEf}}{{Ad{Ad{c}}}Bh{}}0{{{Ad{{Eb{c}}}}{Ad{AbBj}}}Bl{FdEf}}{cc{}}{c{{Eb{c}}}Ef}{{{Ad{{Ah{c}}}}{Ad{Bn}}}{{Eb{c}}}Ef}{{}b}{{}c{}}{Adc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{AdCd}{{{Ad{{Eb{c}}}}{Ad{{Ah{c}}}}An}{{Eb{c}}}Ef}{{}c{}}```{Anf}{{{Ad{{Bn{{f{c}}}}}}{Ad{{An{c}}}}}{{f{{f{c}}}}}Ff}{{{Ad{Ab{Bn{{f{c}}}}}}{Ad{{An{c}}}}}B`Ff}{Ad{{Ad{c}}}{}}0{{{Ad{Ab}}}{{Ad{Abc}}}{}}0{{{Ad{{An{c}}}}}{{An{c}}}{EdFf}}{{{Ad{Fh}}}Fh}{{Ad{Ad{Abc}}}B`{}}0{{AdBb}B`}0{{{Ad{e}}{Ad{{Bn{Bb}}}}{Ad{{Bn{Bb}}}}}{{Bd{{f{{An{c}}}}Fh}}}Ff{{C`{c}}}}{{{Ad{{f{{f{c}}}}}}{Ad{{f{{f{c}}}}}}}{{Bd{{f{{An{c}}}}Fh}}}Ff}{b{{Ad{c}}}{}}0{b{{Ad{Abc}}}{}}0<{bB`}0{{{Ad{{An{c}}}}{Ad{{An{c}}}}}Bh{FbFf}}{{{Ad{Fh}}{Ad{Fh}}}Bh}{{{Ad{{An{c}}}}{Ad{AbBj}}}Bl{FdFf}}{{{Ad{Fh}}{Ad{AbBj}}}Bl}0{cc{}}0{{}b}0{{}c{}}0{AnF`}{Adc{}}0{AdE`}{c{{Bd{e}}}{}{}}0{{}{{Bd{c}}}{}}0{AdCd}0{{}c{}}0{Fjb}0{{{Ad{{Bn{Bb}}}}}cFf}{{{Ad{{Bn{Bb}}}}}{{f{c}}}Ff}0{{b{Ad{{Bn{Bb}}}}}{{f{{f{c}}}}}Ff}{E`{{Ah{c}}}Fl}{{}B`}`````{FnG`}{GbAj}{Ad{{Ad{c}}}{}}0000{{{Ad{Ab}}}{{Ad{Abc}}}{}}0000{{{Ad{Gd}}{Ad{{Ah{Af}}}}{Al{Aj}}{Ad{Gf}}}Bh}{{{Ad{Gb}}}Gb}{{Ad{Ad{Abc}}}B`{}}{{AdBb}B`}{GhAf}0{GdAf}1{GdGh}{GfFn};:{b{{Ad{c}}}{}}0000{b{{Ad{Abc}}}{}}0000{bB`}0000{GfG`}{{{Ad{Gh}}{Ad{Gh}}}Bh}{{{Ad{Gd}}{Ad{Gd}}}Bh}{{{Ad{Fn}}{Ad{Fn}}}Bh}{{{Ad{Gf}}{Ad{Gf}}}Bh}{{Ad{Ad{c}}}Bh{}}0000000{GbAj}{{{Ad{Gb}}{Ad{AbBj}}}Bl}{{{Ad{{Ah{Af}}}}{Al{Aj}}{Ad{Gh}}{Ad{Fn}}{Ad{Gd}}{Ad{Gf}}}{{Eh{GdGfAf}}}}{{{Ad{Gh}}{Ad{Gd}}Af}Gd}{cc{}}0000{{}b}0000{{}c{}}0000{GbGj}{{{Ad{{Ah{Af}}}}{Gl{Aj}}Ad{Ad{Abc}}{Ad{Gd}}{Ad{Gf}}}Gb{GnH`}}{FnG`}9{GbAf}{GhGd}{{Fn{Al{Aj}}}Gf}`{Adc{}}{c{{Bd{e}}}{}{}}0000{{}{{Bd{c}}}{}}0000{AdCd}0000{GdAj}{{{Ad{{Ah{Af}}}}{Gl{Aj}}Ad{Ad{Abc}}{Ad{Gd}}{Ad{Gb}}}Bh{GnH`}}{{}c{}}0000{{{Ad{{Ah{Hb}}}}{Al{Aj}}{Ad{Abc}}}{{Eh{GhFn}}}{GnH`}}{{{Ad{{Ah{Hb}}}}{Al{Aj}}{Ad{Abc}}}{{Eh{GdGf}}}{GnH`}}```{HdAf}{HdAj}{Ad{{Ad{c}}}{}}00{{{Ad{Ab}}}{{Ad{Abc}}}{}}00{{{Ad{Hd}}}Hd}{{Ad{Ad{Abc}}}B`{}}{{AdBb}B`}5{b{{Ad{c}}}{}}00{b{{Ad{Abc}}}{}}00{bB`}00{{{Ad{Hd}}{Ad{AbBj}}}Bl}{cc{}}00{{}b}00{{}c{}}00{HdGj}{{{Ad{{Ah{Af}}}}{Gl{Aj}}Ad{Ad{Abc}}{Ad{{Hf{Aj}}}}{Ad{Hh}}{Ad{{Eb{Af}}}}{Ad{Af}}}Hd{GnH`}}{Hhf}?{HdAf}{{Hjb}Hh}{{{Ad{Hh}}{Ad{{Hf{Aj}}}}}Hl}{{{Ad{Hh}}{Ad{{Ah{Af}}}}}Af}{Adc{}}{{{Ad{Hh}}{Al{Aj}}}{{En{Aj}}}}{c{{Bd{e}}}{}{}}00{{}{{Bd{c}}}{}}00{AdCd}00{{{Ad{{Ah{Af}}}}{Gl{Aj}}Ad{Ad{Abc}}{Ad{{Eb{Af}}}}{Ad{Af}}{Ad{Hd}}}Bh{GnH`}}{{{Ad{{Ah{Af}}}}{Ad{Hh}}{Ad{Hl}}{Ad{Hd}}}Bh}{{}c{}}00`{{{Ad{{Hf{c}}}}{Ad{{An{c}}}}}{{Hf{c}}}Ff}{{{Ad{Ab{Hf{c}}}}{Ad{{An{c}}}}}B`Ff}{Ad{{Ad{c}}}{}}{{{Ad{Ab}}}{{Ad{Abc}}}{}}{Hff}{b{{Ad{c}}}{}}{b{{Ad{Abc}}}{}}{bB`}{cc{}}{{{Ad{Dl}}{Ad{{Hf{c}}}}}{{Hn{B`}}}Ff}{{}b}{{}c{}}{{{Ad{{Hf{c}}}}}BhFf}{{{Ad{{Hf{c}}}}}bFf}{{{Ad{{Bn{Bb}}}}}{{Hf{c}}}Ff}{{{Ad{Dl}}}{{Hn{{Hf{c}}}}}Ff}{{{Ad{{Hf{c}}}}{Ad{{Ah{e}}}}}{{Eb{e}}}Ff{{Ef{}{{I`{c}}}}}}{{{Ad{{Hf{c}}}}{Al{c}}}{{En{c}}}Ff}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{AdCd}{{{Ad{Dl}}{Ad{{An{c}}}}}{{Hn{B`}}}Ff}{{}c{}}`{Ad{{Ad{c}}}{}}{{{Ad{Ab}}}{{Ad{Abc}}}{}}{{{Ad{Ib}}}Ib}{{Ad{Ad{Abc}}}B`{}}{{AdBb}B`}{IbAj}{b{{Ad{c}}}{}}{b{{Ad{Abc}}}{}}{c{{Bd{Ib}}}Bf}{bB`}{{{Ad{Ib}}{Ad{AbBj}}}Bl}{cc{}}{{}b}{{}c{}}{IbGj}{{{Ad{{Ah{Af}}}}AdA`Aj{Ad{AbId}}}Ib}{{{Ad{Ib}}c}BdCb}{Adc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{AdCd}{{{Ad{{Ah{Af}}}}Ad{Ad{{Bn{Af}}}}Aj{Ad{Ib}}{Ad{AbId}}}Bh}{{{Ad{{Ah{Af}}}}AdAf{Ad{Ib}}{Ad{AbId}}}Bh}{{}c{}}````{{{Ad{{Bn{c}}}}}cEj}{{{If{c}}{Ad{{Bn{{f{c}}}}}}}{{f{Bb}}}Ff}{Ad{{Ad{c}}}{}}00{{{Ad{Ab}}}{{Ad{Abc}}}{}}00{{{Ad{e}}}bFf{{C`{c}}}}{{{Ad{Ih}}}Ih}{{{Ad{Ij}}}Ij}{{Ad{Ad{Abc}}}B`{}}0{{AdBb}B`}0{b{{Ad{c}}}{}}00{b{{Ad{Abc}}}{}}00{bB`}00{{{Ad{Ij}}{Ad{Ij}}}Bh}{{{Ad{Ih}}{Ad{AbBj}}}Bl}{{{Ad{{If{c}}}}{Ad{AbBj}}}BlFd}{{{Ad{Ij}}{Ad{AbBj}}}Bl}0{cc{}}00{{}b}00{{}c{}}00{{{Ad{Ih}}bb}{{Bd{{If{c}}Ij}}}Ff}{Ihb}{{{Ad{e}}{Ad{{Bn{Bb}}}}}bFf{{C`{c}}}}1{Adc{}}0{AdE`}{c{{Bd{e}}}{}{}}00{{}{{Bd{c}}}{}}00{AdCd}00{{}c{}}00{Ilb}000","D":"N`","p":[[1,"usize"],[8,"CurveFqSponge",0],[5,"Vec",598],[8,"CurveFrSponge",0],[5,"ArithmeticSponge",599],[8,"ProjectiveCurve",0],[5,"Fp",600],[5,"FieldBlob",26],[0,"mut"],[1,"reference",null,null,1],[8,"Curve",0],[5,"SRS",601],[8,"ScalarField",0],[5,"Radix2EvaluationDomain",602],[5,"Diff",261],[1,"unit"],[1,"u8"],[6,"Result",603,null,1],[10,"Deserializer",604],[1,"bool"],[5,"Formatter",605],[8,"Result",605],[1,"slice"],[10,"EvaluationDomain",606],[10,"Serializer",607],[5,"TypeId",608],[5,"EncodeFileArgs",54],[6,"Option",609,null,1],[5,"Command",610],[5,"ComputeCommitmentArgs",54],[5,"HexString",54],[5,"StorageProofArgs",54],[5,"VerifyStorageProofArgs",54],[5,"ArgMatches",611],[8,"Error",612],[5,"DecodeFileArgs",54],[6,"Commands",54],[1,"str"],[5,"Id",613],[5,"String",614],[5,"Commitment",232],[10,"Clone",615],[10,"KimchiCurve",616],[1,"tuple",null,null,1],[10,"AffineRepr",617],[10,"FqSponge",618],[5,"DensePolynomial",619],[1,"u64"],[10,"PartialEq",620],[10,"Debug",605],[10,"PrimeField",621],[6,"DiffError",261],[15,"CapacityMismatch",309],[10,"CommitmentCurve",622],[5,"CoreWitness",317],[5,"Evaluations",623],[5,"ReadProof",317],[5,"RelaxedInstance",317],[5,"RelaxedWitness",317],[5,"CoreInstance",317],[5,"OpeningProof",601],[5,"EvaluationDomains",624],[10,"RngCore",625],[10,"CryptoRng",625],[8,"Vesta",626],[5,"ReadProof",426],[5,"Data",484],[5,"Query",426],[1,"f64"],[5,"Answer",426],[8,"Result",627,null,1],[17,"ScalarField"],[5,"StorageProof",508],[5,"OsRng",628],[5,"QueryField",533],[5,"QueryBytes",533],[6,"QueryError",533],[15,"QueryOutOfBounds",594]],"r":[],"b":[[134,"impl-Display-for-HexString"],[135,"impl-Debug-for-HexString"],[289,"impl-Display-for-DiffError"],[290,"impl-Debug-for-DiffError"],[564,"impl-Display-for-QueryError"],[565,"impl-Debug-for-QueryError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOYBMgAAAAwADgAAABAAAQATAAEAFwAAABwADgAsAAIAMQBXAJAAHQC1ADMA6gAFAPQABgD8AAAA/gAAAAABAwAFAQEACAEAAAwBDwAdAQYAJgEBACsBDAA8AQEAQwEAAEUBCQBQAQIAWAEBAFsBGwB4AQIAgAEEAIsBAQCPARIAowEFAK0BFgDHAQIAzQEEANMBAADVAQsA4gEDAOgBBQDwAQAA8gEAAPgBAgD8AQwACgIAAAwCCQAXAgAAGQIAABsCGwA6AgIAQAIWAA==","P":[[29,"T"],[31,""],[32,"T"],[33,""],[36,"T"],[38,"__D"],[39,""],[42,"T"],[43,"D"],[44,""],[46,"U"],[47,""],[48,"__S"],[49,"T"],[50,"U,T"],[51,"U"],[52,""],[53,"V"],[66,""],[79,"T"],[93,""],[98,"T"],[99,""],[113,"T"],[127,""],[136,"T"],[143,""],[155,"FromStr::Err"],[156,""],[173,"U"],[180,""],[189,"T"],[190,""],[192,"U,T"],[199,"U"],[206,""],[225,"V"],[233,"T"],[235,"G"],[236,"T"],[237,""],[239,"G,EFqSponge"],[240,"G"],[243,"T"],[245,""],[246,"G"],[247,"K"],[249,"G"],[250,"T"],[251,"G"],[253,""],[254,"U"],[255,"T"],[256,"U,T"],[257,"U"],[258,""],[259,"G"],[260,"V"],[264,""],[265,"F"],[267,"T"],[271,"F"],[272,""],[273,"T"],[275,""],[277,"F,D"],[278,"F"],[279,"T"],[283,""],[286,"F"],[287,""],[288,"F"],[289,""],[291,"T"],[293,""],[295,"U"],[297,""],[298,"T"],[300,""],[301,"U,T"],[303,"U"],[305,""],[307,"V"],[309,""],[311,"F"],[315,"G"],[316,""],[324,"T"],[334,""],[336,"T"],[337,""],[346,"T"],[356,""],[366,"K"],[374,""],[378,"T"],[383,""],[388,"U"],[393,""],[394,"RNG"],[395,""],[401,"T"],[402,"U,T"],[407,"U"],[412,""],[418,"RNG"],[419,"V"],[424,"RNG"],[429,""],[431,"T"],[437,""],[438,"T"],[439,""],[441,"T"],[447,""],[451,"T"],[454,""],[457,"U"],[460,""],[461,"RNG"],[462,""],[468,"T"],[469,""],[470,"U,T"],[473,"U"],[476,""],[479,"RNG"],[480,""],[481,"V"],[485,"F"],[487,"T"],[489,""],[490,"T"],[492,""],[493,"T"],[494,"F"],[495,""],[496,"U"],[497,"F"],[501,"F,G"],[502,"F"],[503,"U,T"],[504,"U"],[505,""],[506,"F"],[507,"V"],[509,"T"],[511,""],[512,"T"],[513,""],[515,"T"],[517,"__D"],[518,""],[520,"T"],[521,""],[522,"U"],[523,""],[525,"__S"],[526,"T"],[527,"U,T"],[528,"U"],[529,""],[532,"V"],[537,"G"],[538,"F"],[539,"T"],[545,"F,D"],[546,""],[548,"T"],[550,""],[552,"T"],[558,""],[563,"F"],[564,""],[566,"T"],[569,""],[572,"U"],[575,"F"],[576,""],[577,"F,D"],[578,""],[579,"T"],[581,""],[582,"U,T"],[585,"U"],[588,""],[591,"V"],[594,""]]}],["saffron_og_flow",{"t":"H","n":["main"],"q":[[0,"saffron_og_flow"],[1,"std::process"]],"i":"`","f":"{{}b}","D":"`","p":[[5,"ExitCode",1]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}],["turshi",{"t":"EEEEEECCCCCSSSSSSSSSSSSSSSSSSSSSSSSSKMMMMFNNNNNNNNNNNNNNNNNNNNNNFFFFFKNNNMNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNONNNNNNNNNNNNOONNNNONNNNNNMNNNNNNNNNONNNNONNNNNNNNNNNNNNNONNNNNFKKKMNHNNNNNNNNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNNNNNMNMNMNMNMNMNMNMNNNNNNN","n":["CairoInstruction","CairoMemory","CairoProgram","FlagBits","Offsets","Pointers","flags","helper","memory","runner","word","AP_ADD","AP_ONE","AP_Z2","DST_AP","NUM_FLAGS","OP0_AP","OP1_AP","OP1_DBL","OP1_FP","OP1_VAL","OPC_AEQ","OPC_CALL","OPC_JMP_INC","OPC_RET","PC_ABS","PC_JNZ","PC_REL","PC_SIZ","POS_DST","POS_FLAGS","POS_OP0","POS_OP1","RES_ADD","RES_MUL","RES_ONE","CairoFieldHelpers","lsb","to_hex_be","to_u64","u16_chunk","CairoMemory","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","get_codelen","index","index_mut","init","into","is_empty","len","new","read","to_string","try_from","try_into","type_id","vzip","write","CairoContext","CairoInstruction","CairoProgram","CairoState","CairoStep","Pointers","adr_dst","adr_op0","adr_op1","ap","","","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","curr","default","deref","","","","","deref_mut","","","","","drop","","","","","dst","execute","f15","f_ap_add","f_ap_one","f_dst_fp","f_op0_fp","f_op1_ap","f_op1_fp","f_op1_val","f_opc_aeq","f_opc_call","f_opc_ret","f_pc_abs","f_pc_jnz","f_pc_rel","f_res_add","f_res_mul","fin","","fp","","","from","","","","","ini","","init","","","","","instr","","into","","","","","mem","","new","","","","next","next_pc","off_dst","off_op0","off_op1","op0","op1","pc","","","res","set_dst","set_op0","set_op1","set_res","size","steps","","to_owned","","","trace","","try_from","","","","","try_into","","","","","type_id","","","","","vars","vzip","","","","","CairoWord","FlagBits","FlagSets","Offsets","ap_up","","bias","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dst_reg","","f15","","f_ap_add","","f_ap_one","","f_dst_fp","","f_op0_fp","","f_op1_ap","","f_op1_fp","","f_op1_val","","f_opc_aeq","","f_opc_call","","f_opc_ret","","f_pc_abs","","f_pc_jnz","","f_pc_rel","","f_res_add","","f_res_mul","","from","init","into","new","off_dst","","off_op0","","off_op1","","op0_reg","","op1_src","","opcode","","pc_up","","res_log","","to_owned","try_from","try_into","type_id","vzip","word"],"q":[[0,"turshi"],[11,"turshi::flags"],[36,"turshi::helper"],[41,"turshi::memory"],[64,"turshi::runner"],[204,"turshi::word"],[279,"alloc::string"],[280,"core::fmt"],[281,"ark_ff::fields"],[282,"alloc::vec"],[283,"core::option"],[284,"core::result"],[285,"core::any"],[286,"core::clone"]],"i":"`````````````````````````````````````f000`Ab000000000000000000000``````Bd00BfBh2BnC`2Bl5213053053053052021305213052130552555555555555555511435213051121305252130521213522555554355222251130511213052130521305221305````CdCb`0000000010Cf10101010101010101010101010101011111Ch202023232323232222222","f":"```````````{{}b}000{{}d}11111111111110000111`{{{h{f}}}b}{{{h{f}}}j}{{{h{f}}}l}{{{h{f}}d}c{}}`{h{{h{c}}}{}}{{{h{n}}}{{h{nc}}}{}}{d{{h{c}}}{}}{d{{h{nc}}}{}}{dA`}{{{h{{Ab{c}}}}{h{nAd}}}AfAh}{cc{}}{{{h{{Ab{c}}}}}dAh}{{{h{{Ab{c}}}}c}{{h{e}}}Ah{}}{{{h{n{Ab{c}}}}c}{{h{ne}}}Ah{}}>{{}c{}}{{{h{{Ab{c}}}}}AjAh}{{{h{{Ab{c}}}}}lAh}{{{Al{c}}}{{Ab{c}}}Ah}{{{h{n{Ab{c}}}}c}{{An{c}}}Ah}{hj}{c{{B`{e}}}{}{}}{{}{{B`{c}}}{}}{hBb}{{}c{}}{{{h{n{Ab{c}}}}cc}A`Ah}``````{{{h{{Bd{c}}}}}cAh}00{{{h{Bf}}}c{}}{{{h{{Bh{c}}}}}cAh}2{h{{h{c}}}{}}0000{{{h{n}}}{{h{nc}}}{}}0000{{{h{{Bh{c}}}}}{{Bh{c}}}Bj}{{{h{{Bl{c}}}}}{{Bl{c}}}Bj}{{{h{{Bd{c}}}}}{{Bd{c}}}Bj}{{h{h{nc}}}A`{}}00{{hb}A`}00{BnBh}{{}{{Bl{c}}}Ah}{d{{h{c}}}{}}0000{d{{h{nc}}}{}}0000{dA`}0000>{{{h{n{Bn{c}}}}}{{Bd{c}}}Ah}????????????????{{{h{{C`{c}}}}}{{Bh{c}}}Ah}{C`Bh}{{{h{Bf}}}c{}}{{{h{{Bh{c}}}}}cAh}{{{h{{Bd{c}}}}}cAh}{cc{}}000054{{}d}0000{{{h{n{Bn{c}}}}}{{Cb{c}}}Ah}3{{}c{}}0000{Bnh}{C`h}{{{h{n{Ab{c}}}}{Bh{c}}}{{Bn{c}}}Ah}{{{h{n{Ab{c}}}}l}{{C`{c}}}Ah}{{ccc}{{Bh{c}}}Ah}{{{Cb{c}}{Bh{c}}{Bl{c}}}{{Bd{c}}}Ah}{BnAn}{{{h{n{Bn{c}}}}}{{An{c}}}Ah}<<<<<>=<<{{{h{n{Bn{c}}}}}A`Ah}000={{{h{{C`{c}}}}}cAh}{C`}{hc{}}00{{{h{{C`{c}}}}}{{h{{Al{{Bd{c}}}}}}}Ah}{C`Al}{c{{B`{e}}}{}{}}0000{{}{{B`{c}}}{}}0000{hBb}0000{BnBl}{{}c{}}0000````{{{h{Cd}}}b}{{{h{{Cb{c}}}}}bAh}{ccAh}{h{{h{c}}}{}}{{{h{n}}}{{h{nc}}}{}}{{{h{{Cb{c}}}}}{{Cb{c}}}Bj}{{h{h{nc}}}A`{}}{{hb}A`}{d{{h{c}}}{}}{d{{h{nc}}}{}}{dA`}:9{{{h{Cf}}}c{}}{{{h{{Cb{c}}}}}cAh}101010101010101010101010101010{cc{}}{{}d}{{}c{}}{c{{Cb{c}}}Ah}{{{h{Ch}}}c{}}50505{{{h{Cd}}}b}{{{h{{Cb{c}}}}}bAh}10101010{hc{}}{c{{B`{e}}}{}{}}{{}{{B`{c}}}{}}{hBb}{{}c{}}<","D":"A@j","p":[[1,"u8"],[1,"usize"],[10,"CairoFieldHelpers",36],[1,"reference",null,null,1],[5,"String",279],[1,"u64"],[0,"mut"],[1,"unit"],[5,"CairoMemory",41],[5,"Formatter",280],[8,"Result",280],[10,"Field",281],[1,"bool"],[5,"Vec",282],[6,"Option",283,null,1],[6,"Result",284,null,1],[5,"TypeId",285],[5,"CairoInstruction",64],[10,"Pointers",64],[5,"CairoState",64],[10,"Clone",286],[5,"CairoContext",64],[5,"CairoStep",64],[5,"CairoProgram",64],[5,"CairoWord",204],[10,"FlagSets",204],[10,"FlagBits",204],[10,"Offsets",204]],"r":[[0,64],[1,41],[2,64],[3,204],[4,204],[5,64]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJIAKgABAAUAKwAFADMAAgA7AAQASwAUAGIADgBzAA8AhgABAI8ABACjAAIAqQABALMAAgC4AA4AyAAEANIAAADUAAcA3QAAAN8AAADhAAAA4wAAAOUAAADnAAAA6QAAAOsAAADtAAAA7wAAAPEAAADzAAAA9QAAAPcAAAD5AAAA+wAAAP0AAAD/AAAAAwEAAAUBAAAHAQAACQEAAAsBAAANAQAADwEAABEBBQA=","P":[[40,"F"],[42,"T"],[46,""],[47,"F"],[48,"T"],[49,"F"],[50,"F,Index::Output"],[52,""],[53,"U"],[54,"F"],[58,""],[59,"U,T"],[60,"U"],[61,""],[62,"V"],[63,"F"],[76,"T"],[86,"F"],[89,"T"],[92,""],[96,"F"],[97,"T"],[107,""],[112,"F"],[131,""],[132,"F"],[135,"T"],[140,"F"],[141,""],[147,"F"],[149,"U"],[154,""],[156,"F"],[160,""],[161,"F"],[177,""],[178,"T"],[181,"F"],[182,""],[183,"U,T"],[188,"U"],[193,""],[199,"V"],[208,""],[209,"F"],[211,"T"],[213,"F"],[214,"T"],[215,""],[216,"T"],[218,""],[220,"F"],[253,"T"],[254,""],[255,"U"],[256,"F"],[263,""],[264,"F"],[265,""],[266,"F"],[267,""],[268,"F"],[269,""],[270,"F"],[271,""],[272,"F"],[273,"T"],[274,"U,T"],[275,"U"],[276,""],[277,"V"],[278,"F"]]}],["wasm_types",{"t":"TFKNNNNNNNNNMNNNNNNNNNNNNNNNNNM","n":["FLATTENED_SIZE","FlatVector","FlatVectorElem","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","describe","extend","flatten","fmt","from","","from_abi","from_bytes","from_iter","into","into_abi","into_iter","","is_none","none","return_abi","to_owned","try_from","try_into","type_id","unflatten"],"q":[[0,"wasm_types"],[31,"wasm_types::flat_vector"],[32,"core::clone"],[33,"core::iter::traits::collect"],[34,"alloc::vec"],[35,"core::fmt"],[36,"core::result"],[37,"core::any"]],"i":"Ab``f000000001000000000000000001","f":"```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{c}}}}}{{f{c}}}h}{{b{b{dc}}}j{}}{{bl}j}{{}{{f{c}}}{}}{{{b{{f{c}}}}}{{b{e}}}{}{}}{{}j}{{{b{d{f{c}}}}e}j{}{{A`{}{{n{c}}}}}}{Ab{{Ad{l}}}}{{{b{{f{c}}}}{b{dAf}}}AhAj}{cc{}}{{{Ad{c}}}{{f{c}}}{}}{c{{f{e}}}{}Ab}{{{Ad{l}}}{{f{c}}}Ab}{e{{f{c}}}{}{{A`{}{{n{c}}}}}}{{}c{}}{{{f{c}}}eAb{}}{{{b{{f{c}}}}}e{}{}}{{{f{c}}}e{}{}}{{{b{c}}}Al{}}{{}c{}}{{}}{bc{}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{bB`}{{{Ad{l}}}Ab}","D":"d","p":[[1,"reference",null,null,1],[0,"mut"],[5,"FlatVector",0,31],[10,"Clone",32],[1,"unit"],[1,"u8"],[17,"Item"],[10,"IntoIterator",33],[10,"FlatVectorElem",0,31],[5,"Vec",34],[5,"Formatter",35],[8,"Result",35],[10,"Debug",35],[1,"bool"],[6,"Result",36,null,1],[5,"TypeId",37]],"r":[[0,31],[1,31],[2,31],[3,31],[4,31],[5,31],[6,31],[7,31],[8,31],[9,31],[10,31],[11,31],[12,31],[13,31],[14,31],[15,31],[16,31],[17,31],[18,31],[19,31],[20,31],[21,31],[22,31],[23,31],[24,31],[25,31],[26,31],[27,31],[28,31],[29,31],[30,31]],"b":[[21,"impl-IntoIterator-for-%26FlatVector%3CT%3E"],[22,"impl-IntoIterator-for-FlatVector%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB0AAwAAAA4AEAADABUACgA=","P":[[3,"T"],[7,""],[8,"T"],[9,"T,Deref::Target"],[10,""],[11,"T,I"],[12,""],[13,"T"],[16,"FromWasmAbi::Abi,T"],[17,"T"],[18,"T,I"],[19,"U"],[20,"T,IntoWasmAbi::Abi"],[21,"T,IntoIterator::IntoIter"],[23,"FromWasmAbi::Abi"],[24,"IntoWasmAbi::Abi"],[25,""],[26,"T"],[27,"U,T"],[28,"U"],[29,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7907,23233,302,2119,215,20278,1323,12035,21431,125653,43815,51543,1534,137,6052,3055,8244,8285,9358,11160,87941,1070,126,59180,20411,16971,216,6154,2031]}