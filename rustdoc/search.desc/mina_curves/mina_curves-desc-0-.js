searchState.loadedDescShard("mina_curves", 0, "G_GENERATOR_X = 1\nG1_GENERATOR_Y = …\nlegacy curve, a copy of the normal curve to support legacy …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>X / Z</code> projection of the affine <code>X</code>\n<code>Y / Z</code> projection of the affine <code>Y</code>\nProjective multiplicative inverse. Will be <code>0</code> only at …\nG_GENERATOR_X = 1\nG1_GENERATOR_Y = …\nlegacy curve, a copy of the normal curve to support legacy …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>X / Z</code> projection of the affine <code>X</code>\n<code>Y / Z</code> projection of the affine <code>Y</code>\nProjective multiplicative inverse. Will be <code>0</code> only at …\nThe interface for a field that supports an efficient …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns a <code>LegendreSymbol</code>, which indicates whether this …\nReturns the square root of self, if it exists.\nSets <code>self</code> to be the square root of <code>self</code>, if it exists.\nThe number of bits that can be reliably stored. (Should …\nA trait that defines parameters for a field that can be …\nA trait that defines parameters for a prime field.\nA multiplicative generator of the field. <code>Self::GENERATOR</code> …\nINV = -MODULUS^{-1} mod 2^64\nGENERATOR^((MODULUS-1) / (2^s * …\nThe modulus of the field.\nThe number of bits needed to represent the <code>Self::MODULUS</code>.\n(Self::MODULUS - 1) / 2\nLet <code>M</code> be the power of 2^64 nearest to <code>Self::MODULUS_BITS</code>. …\nR2 = R^2 % Self::MODULUS\nThe number of bits that must be shaved from the beginning …\nAn integer <code>b</code> such that there exists a multiplicative …\nThe integer <code>k</code> such that there exists a multiplicative …\nt for 2^s * t = MODULUS - 1, and t coprime to 2.\nLet <code>N</code> be the size of the multiplicative group defined by …\n2^s root of unity computed by GENERATOR^t\n(t - 1) / 2\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets <code>a = -a</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets <code>a = -a</code>.")