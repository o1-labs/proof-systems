searchState.loadedDescShard("mina_hasher", 0, "Mina hasher\nGeneric domain string argument type\nThe domain parameter trait is used during hashing to …\nInterface for hashable objects\nInterface for hashing <code>Hashable</code> inputs\nCreate an experimental kimchi hasher context\nCreate a legacy hasher context\nObtain has result output\nGenerate unique domain string of length <code>&lt;= 20</code>.\nHash input and obtain result output\nSet the initial state based on domain separation string …\nInitialize state, hash input and obtain result output\nConversion into vector of bytes\nMina Poseidon hasher\nRestore the initial state that was set most recently\nRandom oracle input structures and algorithms\nSerialization to random oracle input\nConsume hash <code>input</code>\nPoseidon hasher context\nPoseidon hasher type with experimental kimchi plonk sponge …\nPoseidon hasher type with legacy plonk sponge constants\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe state of the sponge\nThe state of the sponge\nThe state of the sponge\nRandom oracle input structure\nAppend a single bit\nAppend bytes\nAppend a base field element\nAppend a <code>Hashable</code> input\nAppend another random oracle input\nAppend a scalar field element\nAppend a 32-bit unsigned integer\nAppend a 64-bit unsigned integer\nDeserialize a <code>ROInput</code> from bytes\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new empty random oracle input\nSerialize the ROInput into bytes\nSerialize random oracle input to bytes\nSerialize random oracle input to vector of base field …")