(function() {
    var type_impls = Object.fromEntries([["kimchi_stubs",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-CamlGroupAffine%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#impl-Clone-for-CamlGroupAffine%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"kimchi_stubs/arkworks/group_affine/enum.CamlGroupAffine.html\" title=\"enum kimchi_stubs::arkworks::group_affine::CamlGroupAffine\">CamlGroupAffine</a>&lt;F&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"kimchi_stubs/arkworks/group_affine/enum.CamlGroupAffine.html\" title=\"enum kimchi_stubs::arkworks::group_affine::CamlGroupAffine\">CamlGroupAffine</a>&lt;F&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","kimchi_stubs::arkworks::group_affine::CamlGVesta","kimchi_stubs::arkworks::group_affine::CamlGPallas"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-CamlGroupAffine%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#impl-Debug-for-CamlGroupAffine%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"kimchi_stubs/arkworks/group_affine/enum.CamlGroupAffine.html\" title=\"enum kimchi_stubs::arkworks::group_affine::CamlGroupAffine\">CamlGroupAffine</a>&lt;F&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","kimchi_stubs::arkworks::group_affine::CamlGVesta","kimchi_stubs::arkworks::group_affine::CamlGPallas"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromValue%3C'from_value_lifetime%3E-for-CamlGroupAffine%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#impl-FromValue%3C'from_value_lifetime%3E-for-CamlGroupAffine%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'from_value_lifetime, F&gt; FromValue&lt;'from_value_lifetime&gt; for <a class=\"enum\" href=\"kimchi_stubs/arkworks/group_affine/enum.CamlGroupAffine.html\" title=\"enum kimchi_stubs::arkworks::group_affine::CamlGroupAffine\">CamlGroupAffine</a>&lt;F&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(F, F)</a>: FromValue&lt;'from_value_lifetime&gt;,\n    F: FromValue&lt;'from_value_lifetime&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#method.from_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_value</a>(value: Value) -&gt; Self</h4></section></summary><div class='docblock'>Convert from OCaml value</div></details></div></details>","FromValue<'from_value_lifetime>","kimchi_stubs::arkworks::group_affine::CamlGVesta","kimchi_stubs::arkworks::group_affine::CamlGPallas"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoValue-for-CamlGroupAffine%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#impl-IntoValue-for-CamlGroupAffine%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; IntoValue for <a class=\"enum\" href=\"kimchi_stubs/arkworks/group_affine/enum.CamlGroupAffine.html\" title=\"enum kimchi_stubs::arkworks::group_affine::CamlGroupAffine\">CamlGroupAffine</a>&lt;F&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(F, F)</a>: IntoValue,\n    F: IntoValue,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#method.into_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_value</a>(self, gc: &amp;<a class=\"struct\" href=\"https://docs.rs/ocaml-interop/0.8.8/ocaml_interop/runtime/struct.OCamlRuntime.html\" title=\"struct ocaml_interop::runtime::OCamlRuntime\">Runtime</a>) -&gt; Value</h4></section></summary><div class='docblock'>Convert to OCaml value</div></details></div></details>","IntoValue","kimchi_stubs::arkworks::group_affine::CamlGVesta","kimchi_stubs::arkworks::group_affine::CamlGPallas"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OCamlBinding-for-CamlGroupAffine%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#impl-OCamlBinding-for-CamlGroupAffine%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; OCamlBinding for <a class=\"enum\" href=\"kimchi_stubs/arkworks/group_affine/enum.CamlGroupAffine.html\" title=\"enum kimchi_stubs::arkworks::group_affine::CamlGroupAffine\">CamlGroupAffine</a>&lt;F&gt;<div class=\"where\">where\n    F: OCamlDesc,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ocaml_binding\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#method.ocaml_binding\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ocaml_binding</a>(\n    env: &amp;mut Env,\n    rename: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;,\n    new_type: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>will generate the OCaml bindings for a type (called root type).\nIt takes the current environment [Env],\nas well as an optional name (if you wish to rename the type in OCaml).</div></details></div></details>","OCamlBinding","kimchi_stubs::arkworks::group_affine::CamlGVesta","kimchi_stubs::arkworks::group_affine::CamlGPallas"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OCamlDesc-for-CamlGroupAffine%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#impl-OCamlDesc-for-CamlGroupAffine%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; OCamlDesc for <a class=\"enum\" href=\"kimchi_stubs/arkworks/group_affine/enum.CamlGroupAffine.html\" title=\"enum kimchi_stubs::arkworks::group_affine::CamlGroupAffine\">CamlGroupAffine</a>&lt;F&gt;<div class=\"where\">where\n    F: OCamlDesc,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ocaml_desc\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#method.ocaml_desc\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ocaml_desc</a>(env: &amp;Env, generics: &amp;[&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>]) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>describes the type in OCaml, given the current environment [Env]\nand the list of generic type parameters of the root type\n(the type that makes use of this type)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unique_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#method.unique_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unique_id</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Returns a unique ID for the type. This ID will not change if concrete\ntype parameters are used.</div></details></div></details>","OCamlDesc","kimchi_stubs::arkworks::group_affine::CamlGVesta","kimchi_stubs::arkworks::group_affine::CamlGPallas"],["<section id=\"impl-Copy-for-CamlGroupAffine%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi_stubs/arkworks/group_affine.rs.html#16\">Source</a><a href=\"#impl-Copy-for-CamlGroupAffine%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"kimchi_stubs/arkworks/group_affine/enum.CamlGroupAffine.html\" title=\"enum kimchi_stubs::arkworks::group_affine::CamlGroupAffine\">CamlGroupAffine</a>&lt;F&gt;</h3></section>","Copy","kimchi_stubs::arkworks::group_affine::CamlGVesta","kimchi_stubs::arkworks::group_affine::CamlGPallas"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[12509]}