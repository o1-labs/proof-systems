(function() {
    var type_impls = Object.fromEntries([["kimchi_msm",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-KZGProof%3CPair%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#107\">Source</a><a href=\"#impl-Clone-for-KZGProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Pair&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;<div class=\"where\">where\n    Pair: Pairing,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#108\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#209\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","kimchi_msm::OpeningProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-KZGProof%3CPair%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#86\">Source</a><a href=\"#impl-Debug-for-KZGProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Pair&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;<div class=\"where\">where\n    Pair: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + Pairing,\n    &lt;Pair as Pairing&gt;::G1Affine: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#86\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","kimchi_msm::OpeningProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-KZGProof%3CPair%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#98\">Source</a><a href=\"#impl-Default-for-KZGProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Pair&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;<div class=\"where\">where\n    Pair: Pairing,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#99\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","kimchi_msm::OpeningProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-KZGProof%3CPair%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#86\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-KZGProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, Pair&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;<div class=\"where\">where\n    Pair: Pairing,\n    &lt;Pair as Pairing&gt;::G1Affine: CanonicalDeserialize + CanonicalSerialize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#86\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","kimchi_msm::OpeningProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KZGProof%3CPair%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#377-382\">Source</a><a href=\"#impl-KZGProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, G, G2, Pair&gt; <a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;<div class=\"where\">where\n    F: PrimeField,\n    G: <a class=\"trait\" href=\"poly_commitment/commitment/trait.CommitmentCurve.html\" title=\"trait poly_commitment::commitment::CommitmentCurve\">CommitmentCurve</a>&lt;ScalarField = F&gt;,\n    G2: <a class=\"trait\" href=\"poly_commitment/commitment/trait.CommitmentCurve.html\" title=\"trait poly_commitment::commitment::CommitmentCurve\">CommitmentCurve</a>&lt;ScalarField = F&gt;,\n    Pair: Pairing&lt;G1Affine = G, G2Affine = G2&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.create\" class=\"method\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#394-399\">Source</a><h4 class=\"code-header\">pub fn <a href=\"poly_commitment/kzg/struct.KZGProof.html#tymethod.create\" class=\"fn\">create</a>&lt;D&gt;(\n    srs: &amp;<a class=\"struct\" href=\"poly_commitment/kzg/struct.PairingSRS.html\" title=\"struct poly_commitment::kzg::PairingSRS\">PairingSRS</a>&lt;Pair&gt;,\n    plnms: &amp;[(<a class=\"enum\" href=\"poly_commitment/utils/enum.DensePolynomialOrEvaluations.html\" title=\"enum poly_commitment::utils::DensePolynomialOrEvaluations\">DensePolynomialOrEvaluations</a>&lt;'_, &lt;G as AffineRepr&gt;::ScalarField, D&gt;, <a class=\"struct\" href=\"poly_commitment/commitment/struct.PolyComm.html\" title=\"struct poly_commitment::commitment::PolyComm\">PolyComm</a>&lt;&lt;G as AffineRepr&gt;::ScalarField&gt;)],\n    elm: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[F]</a>,\n    polyscale: F,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;&gt;<div class=\"where\">where\n    D: EvaluationDomain&lt;F&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Create a KZG proof.\nParameters:</p>\n<ul>\n<li><code>srs</code>: the structured reference string used to commit\nto the polynomials</li>\n<li><code>plnms</code>: the list of polynomials to open.\nThe type is simply an alias to handle the polynomials in evaluations or\ncoefficients forms.</li>\n<li><code>elm</code>: vector of evaluation points. Note that it only works for two\nelements for now.</li>\n<li><code>polyscale</code>: a challenge to batch the polynomials.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#432-438\">Source</a><h4 class=\"code-header\">pub fn <a href=\"poly_commitment/kzg/struct.KZGProof.html#tymethod.verify\" class=\"fn\">verify</a>(\n    &amp;self,\n    srs: &amp;<a class=\"struct\" href=\"poly_commitment/kzg/struct.PairingSRS.html\" title=\"struct poly_commitment::kzg::PairingSRS\">PairingSRS</a>&lt;Pair&gt;,\n    evaluations: &amp;[<a class=\"struct\" href=\"poly_commitment/commitment/struct.Evaluation.html\" title=\"struct poly_commitment::commitment::Evaluation\">Evaluation</a>&lt;G&gt;],\n    polyscale: F,\n    elm: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[F]</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Verify a proof. Note that it only works for two elements for now, i.e.\nelm must be of size 2.\nAlso, chunking is not supported.</p>\n</div></details></div></details>",0,"kimchi_msm::OpeningProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OpenProof%3CG%3E-for-KZGProof%3CPair%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#169-174\">Source</a><a href=\"#impl-OpenProof%3CG%3E-for-KZGProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, G, G2, Pair&gt; <a class=\"trait\" href=\"poly_commitment/trait.OpenProof.html\" title=\"trait poly_commitment::OpenProof\">OpenProof</a>&lt;G&gt; for <a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;<div class=\"where\">where\n    F: PrimeField,\n    G: <a class=\"trait\" href=\"poly_commitment/commitment/trait.CommitmentCurve.html\" title=\"trait poly_commitment::commitment::CommitmentCurve\">CommitmentCurve</a>&lt;ScalarField = F&gt;,\n    G2: <a class=\"trait\" href=\"poly_commitment/commitment/trait.CommitmentCurve.html\" title=\"trait poly_commitment::commitment::CommitmentCurve\">CommitmentCurve</a>&lt;ScalarField = F&gt;,\n    Pair: Pairing&lt;G1Affine = G, G2Affine = G2&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.open\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#186-198\">Source</a><a href=\"#method.open\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"poly_commitment/trait.OpenProof.html#tymethod.open\" class=\"fn\">open</a>&lt;EFqSponge, RNG, D&gt;(\n    srs: &amp;&lt;<a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt; as <a class=\"trait\" href=\"poly_commitment/trait.OpenProof.html\" title=\"trait poly_commitment::OpenProof\">OpenProof</a>&lt;G&gt;&gt;::<a class=\"associatedtype\" href=\"poly_commitment/trait.OpenProof.html#associatedtype.SRS\" title=\"type poly_commitment::OpenProof::SRS\">SRS</a>,\n    _group_map: &amp;&lt;G as <a class=\"trait\" href=\"poly_commitment/commitment/trait.CommitmentCurve.html\" title=\"trait poly_commitment::commitment::CommitmentCurve\">CommitmentCurve</a>&gt;::<a class=\"associatedtype\" href=\"poly_commitment/commitment/trait.CommitmentCurve.html#associatedtype.Map\" title=\"type poly_commitment::commitment::CommitmentCurve::Map\">Map</a>,\n    plnms: &amp;[(<a class=\"enum\" href=\"poly_commitment/utils/enum.DensePolynomialOrEvaluations.html\" title=\"enum poly_commitment::utils::DensePolynomialOrEvaluations\">DensePolynomialOrEvaluations</a>&lt;'_, &lt;G as AffineRepr&gt;::ScalarField, D&gt;, <a class=\"struct\" href=\"poly_commitment/commitment/struct.PolyComm.html\" title=\"struct poly_commitment::commitment::PolyComm\">PolyComm</a>&lt;&lt;G as AffineRepr&gt;::ScalarField&gt;)],\n    elm: &amp;[&lt;G as AffineRepr&gt;::ScalarField],\n    polyscale: &lt;G as AffineRepr&gt;::ScalarField,\n    _evalscale: &lt;G as AffineRepr&gt;::ScalarField,\n    _sponge: EFqSponge,\n    _rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut RNG</a>,\n) -&gt; <a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;<div class=\"where\">where\n    D: EvaluationDomain&lt;F&gt;,\n    EFqSponge: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"mina_poseidon/sponge/trait.FqSponge.html\" title=\"trait mina_poseidon::sponge::FqSponge\">FqSponge</a>&lt;&lt;G as AffineRepr&gt;::BaseField, G, F&gt;,\n    RNG: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a>,</div></h4></section></summary><div class=\"docblock\"><p>Parameters:</p>\n<ul>\n<li><code>srs</code>: the structured reference string</li>\n<li><code>plnms</code>: vector of polynomials with optional degree bound and\ncommitment randomness</li>\n<li><code>elm</code>: vector of evaluation points</li>\n<li><code>polyscale</code>: scaling factor for polynoms\ngroup_maps, sponge, rng and evalscale are not used. The parameters are\nkept to fit the trait and to be used generically.</li>\n</ul>\n</div></details><section id=\"associatedtype.SRS\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#176\">Source</a><a href=\"#associatedtype.SRS\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"poly_commitment/trait.OpenProof.html#associatedtype.SRS\" class=\"associatedtype\">SRS</a> = <a class=\"struct\" href=\"poly_commitment/kzg/struct.PairingSRS.html\" title=\"struct poly_commitment::kzg::PairingSRS\">PairingSRS</a>&lt;Pair&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#203-211\">Source</a><a href=\"#method.verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"poly_commitment/trait.OpenProof.html#tymethod.verify\" class=\"fn\">verify</a>&lt;EFqSponge, RNG&gt;(\n    srs: &amp;&lt;<a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt; as <a class=\"trait\" href=\"poly_commitment/trait.OpenProof.html\" title=\"trait poly_commitment::OpenProof\">OpenProof</a>&lt;G&gt;&gt;::<a class=\"associatedtype\" href=\"poly_commitment/trait.OpenProof.html#associatedtype.SRS\" title=\"type poly_commitment::OpenProof::SRS\">SRS</a>,\n    _group_map: &amp;&lt;G as <a class=\"trait\" href=\"poly_commitment/commitment/trait.CommitmentCurve.html\" title=\"trait poly_commitment::commitment::CommitmentCurve\">CommitmentCurve</a>&gt;::<a class=\"associatedtype\" href=\"poly_commitment/commitment/trait.CommitmentCurve.html#associatedtype.Map\" title=\"type poly_commitment::commitment::CommitmentCurve::Map\">Map</a>,\n    batch: &amp;mut [<a class=\"struct\" href=\"poly_commitment/commitment/struct.BatchEvaluationProof.html\" title=\"struct poly_commitment::commitment::BatchEvaluationProof\">BatchEvaluationProof</a>&lt;'_, G, EFqSponge, <a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;&gt;],\n    _rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut RNG</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    EFqSponge: <a class=\"trait\" href=\"mina_poseidon/sponge/trait.FqSponge.html\" title=\"trait mina_poseidon::sponge::FqSponge\">FqSponge</a>&lt;&lt;G as AffineRepr&gt;::BaseField, G, F&gt;,\n    RNG: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a>,</div></h4></section></summary><div class='docblock'>Verify the opening proof</div></details></div></details>","OpenProof<G>","kimchi_msm::OpeningProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-KZGProof%3CPair%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#86\">Source</a><a href=\"#impl-Serialize-for-KZGProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Pair&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"poly_commitment/kzg/struct.KZGProof.html\" title=\"struct poly_commitment::kzg::KZGProof\">KZGProof</a>&lt;Pair&gt;<div class=\"where\">where\n    Pair: Pairing,\n    &lt;Pair as Pairing&gt;::G1Affine: CanonicalDeserialize + CanonicalSerialize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/poly_commitment/kzg.rs.html#86\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","kimchi_msm::OpeningProof"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[22682]}