(function() {
    var type_impls = Object.fromEntries([["arrabbiata",[]],["kimchi",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Operations%3CExprInner%3CF,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2633-2645\">Source</a><a href=\"#impl-AddAssign-for-Operations%3CExprInner%3CF,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Column: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;F, Column&gt;<div class=\"where\">where\n    <a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprInner.html\" title=\"enum kimchi::circuits::expr::ExprInner\">ExprInner</a>&lt;F, Column&gt;: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>,\n    &lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprInner.html\" title=\"enum kimchi::circuits::expr::ExprInner\">ExprInner</a>&lt;F, Column&gt; as <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>&gt;::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>: Field,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2638-2644\">Source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#986-996\">Source</a><a href=\"#impl-Display-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, F, Column: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.FormattedOutput.html\" title=\"trait kimchi::circuits::expr::FormattedOutput\">FormattedOutput</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, ChallengeTerm&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;<div class=\"where\">where\n    F: PrimeField,\n    ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#992-995\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExprOps%3CF,+BerkeleyChallengeTerm%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+BerkeleyChallengeTerm%3E%3E,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3242-3315\">Source</a><a href=\"#impl-ExprOps%3CF,+BerkeleyChallengeTerm%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+BerkeleyChallengeTerm%3E%3E,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; <a class=\"trait\" href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html\" title=\"trait kimchi::circuits::expr::constraints::ExprOps\">ExprOps</a>&lt;F, <a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, <a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;, <a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.Column.html\" title=\"enum kimchi::circuits::berkeley_columns::Column\">Column</a>&gt;<div class=\"where\">where\n    F: PrimeField,\n    <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, <a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;, <a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.Column.html\" title=\"enum kimchi::circuits::berkeley_columns::Column\">Column</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.two_pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3249-3253\">Source</a><a href=\"#method.two_pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.two_pow\" class=\"fn\">two_pow</a>(pow: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class='docblock'>2^pow</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.two_to_limb\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3255-3259\">Source</a><a href=\"#method.two_to_limb\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.two_to_limb\" class=\"fn\">two_to_limb</a>() -&gt; Self</h4></section></summary><div class='docblock'>2^{LIMB_BITS}</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.two_to_2limb\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3261-3265\">Source</a><a href=\"#method.two_to_2limb\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.two_to_2limb\" class=\"fn\">two_to_2limb</a>() -&gt; Self</h4></section></summary><div class='docblock'>2^{2 * LIMB_BITS}</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.two_to_3limb\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3267-3271\">Source</a><a href=\"#method.two_to_3limb\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.two_to_3limb\" class=\"fn\">two_to_3limb</a>() -&gt; Self</h4></section></summary><div class='docblock'>2^{3 * LIMB_BITS}</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.double\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3273-3275\">Source</a><a href=\"#method.double\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.double\" class=\"fn\">double</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Double the value</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.square\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3277-3279\">Source</a><a href=\"#method.square\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.square\" class=\"fn\">square</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Compute the square of this value</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3281-3283\">Source</a><a href=\"#method.pow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.pow\" class=\"fn\">pow</a>(&amp;self, p: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Raise the value to the given power</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boolean\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3285-3287\">Source</a><a href=\"#method.boolean\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.boolean\" class=\"fn\">boolean</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Constrain to boolean</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crumb\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3289-3291\">Source</a><a href=\"#method.crumb\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.crumb\" class=\"fn\">crumb</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Constrain to crumb (i.e. two bits)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.literal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3293-3295\">Source</a><a href=\"#method.literal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.literal\" class=\"fn\">literal</a>(x: F) -&gt; Self</h4></section></summary><div class='docblock'>Create a literal</div></details><section id=\"method.witness\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3297-3299\">Source</a><a href=\"#method.witness\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.witness\" class=\"fn\">witness</a>(row: <a class=\"enum\" href=\"kimchi/circuits/gate/enum.CurrOrNext.html\" title=\"enum kimchi::circuits::gate::CurrOrNext\">CurrOrNext</a>, col: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, _: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"kimchi/circuits/argument/struct.ArgumentData.html\" title=\"struct kimchi::circuits::argument::ArgumentData\">ArgumentData</a>&lt;F&gt;&gt;) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.coeff\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3301-3303\">Source</a><a href=\"#method.coeff\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.coeff\" class=\"fn\">coeff</a>(col: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, _: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"kimchi/circuits/argument/struct.ArgumentData.html\" title=\"struct kimchi::circuits::argument::ArgumentData\">ArgumentData</a>&lt;F&gt;&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Coefficient</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.constant\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3305-3310\">Source</a><a href=\"#method.constant\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.constant\" class=\"fn\">constant</a>(\n    expr: <a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, <a class=\"enum\" href=\"kimchi/circuits/berkeley_columns/enum.BerkeleyChallengeTerm.html\" title=\"enum kimchi::circuits::berkeley_columns::BerkeleyChallengeTerm\">BerkeleyChallengeTerm</a>&gt;,\n    _: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"kimchi/circuits/argument/struct.ArgumentData.html\" title=\"struct kimchi::circuits::argument::ArgumentData\">ArgumentData</a>&lt;F&gt;&gt;,\n) -&gt; Self</h4></section></summary><div class='docblock'>Create a constant</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cache\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3312-3314\">Source</a><a href=\"#method.cache\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/constraints/trait.ExprOps.html#tymethod.cache\" class=\"fn\">cache</a>(&amp;self, cache: &amp;mut <a class=\"struct\" href=\"kimchi/circuits/expr/struct.Cache.html\" title=\"struct kimchi::circuits::expr::Cache\">Cache</a>) -&gt; Self</h4></section></summary><div class='docblock'>Cache item</div></details></div></details>","ExprOps<F, BerkeleyChallengeTerm>","kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FormattedOutput-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2959-3112\">Source</a><a href=\"#impl-FormattedOutput-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, F, Column: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.FormattedOutput.html\" title=\"trait kimchi::circuits::expr::FormattedOutput\">FormattedOutput</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, ChallengeTerm&gt; <a class=\"trait\" href=\"kimchi/circuits/expr/trait.FormattedOutput.html\" title=\"trait kimchi::circuits::expr::FormattedOutput\">FormattedOutput</a> for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;<div class=\"where\">where\n    F: PrimeField,\n    ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ocaml\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2976-3017\">Source</a><a href=\"#method.ocaml\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/trait.FormattedOutput.html#tymethod.ocaml\" class=\"fn\">ocaml</a>(\n    &amp;self,\n    cache: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/expr/struct.CacheId.html\" title=\"struct kimchi::circuits::expr::CacheId\">CacheId</a>, <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Converts the expression in OCaml code\nRecursively print the expression,\nexcept for the cached expression that are stored in the <code>cache</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.text\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3066-3111\">Source</a><a href=\"#method.text\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/trait.FormattedOutput.html#tymethod.text\" class=\"fn\">text</a>(\n    &amp;self,\n    cache: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/expr/struct.CacheId.html\" title=\"struct kimchi::circuits::expr::CacheId\">CacheId</a>, <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Recursively print the expression,\nexcept for the cached expression that are stored in the <code>cache</code>.</p>\n</div></details><section id=\"method.is_alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2965-2972\">Source</a><a href=\"#method.is_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/trait.FormattedOutput.html#tymethod.is_alpha\" class=\"fn\">is_alpha</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.latex\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3019-3062\">Source</a><a href=\"#method.latex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/trait.FormattedOutput.html#tymethod.latex\" class=\"fn\">latex</a>(\n    &amp;self,\n    cache: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/expr/struct.CacheId.html\" title=\"struct kimchi::circuits::expr::CacheId\">CacheId</a>, <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></div></details>","FormattedOutput","kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChallengeTerm%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#633-639\">Source</a><a href=\"#impl-From%3CChallengeTerm%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, F, Column, ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ChallengeTerm&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#636-638\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: ChallengeTerm) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ChallengeTerm>","kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CConstantTerm%3CF%3E%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#625-631\">Source</a><a href=\"#impl-From%3CConstantTerm%3CF%3E%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, F, Column, ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantTerm.html\" title=\"enum kimchi::circuits::expr::ConstantTerm\">ConstantTerm</a>&lt;F&gt;&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#628-630\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantTerm.html\" title=\"enum kimchi::circuits::expr::ConstantTerm\">ConstantTerm</a>&lt;F&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ConstantTerm<F>>","kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#617-623\">Source</a><a href=\"#impl-From%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Column, ChallengeTerm&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantExprInner.html\" title=\"enum kimchi::circuits::expr::ConstantExprInner\">ConstantExprInner</a>&lt;F, ChallengeTerm&gt;&gt;&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#620-622\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Operations<ConstantExprInner<F, ChallengeTerm>>>","kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu64%3E-for-Operations%3CExprInner%3CF,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2665-2669\">Source</a><a href=\"#impl-From%3Cu64%3E-for-Operations%3CExprInner%3CF,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F: Field, Column&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;F, Column&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2666-2668\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u64>","kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu64%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2671-2677\">Source</a><a href=\"#impl-From%3Cu64%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, F: Field, Column, ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2674-2676\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u64>","kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CF%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2685-2693\">Source</a><a href=\"#impl-Mul%3CF%3E-for-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, F: Field, Column: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;F&gt; for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2688\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprInner.html\" title=\"enum kimchi::circuits::expr::ExprInner\">ExprInner</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ConstantExprInner.html\" title=\"enum kimchi::circuits::expr::ConstantExprInner\">ConstantExprInner</a>&lt;F, ChallengeTerm&gt;&gt;, Column&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2690-2692\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, y: F) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<F>","kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-Operations%3CExprInner%3CF,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2647-2663\">Source</a><a href=\"#impl-MulAssign-for-Operations%3CExprInner%3CF,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Column&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;F, Column&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Column: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    <a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprInner.html\" title=\"enum kimchi::circuits::expr::ExprInner\">ExprInner</a>&lt;F, Column&gt;: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>,\n    &lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprInner.html\" title=\"enum kimchi::circuits::expr::ExprInner\">ExprInner</a>&lt;F, Column&gt; as <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>&gt;::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>: Field,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2654-2662\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Operations%3CExprInner%3CC,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#936-984\">Source</a><a href=\"#impl-Operations%3CExprInner%3CC,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, Column&gt; <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;C, Column&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cell\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#938-940\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.cell\" class=\"fn\">cell</a>(col: Column, row: <a class=\"enum\" href=\"kimchi/circuits/gate/enum.CurrOrNext.html\" title=\"enum kimchi::circuits::gate::CurrOrNext\">CurrOrNext</a>) -&gt; <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;C, Column&gt;</h4></section></summary><div class=\"docblock\"><p>Convenience function for constructing cell variables.</p>\n</div></details><section id=\"method.double\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#942-944\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.double\" class=\"fn\">double</a>(self) -&gt; Self</h4></section><section id=\"method.square\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#946-948\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.square\" class=\"fn\">square</a>(self) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.constant\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#951-953\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.constant\" class=\"fn\">constant</a>(c: C) -&gt; <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;C, Column&gt;</h4></section></summary><div class=\"docblock\"><p>Convenience function for constructing constant expressions.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.degree\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#963-983\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.degree\" class=\"fn\">degree</a>(&amp;self, d1_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, zk_rows: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Return the degree of the expression.\nThe degree of a cell is defined by the first argument <code>d1_size</code>, a\nconstant being of degree zero. The degree of the expression is defined\nrecursively using the definition of the degree of a multivariate\npolynomial. The function can be (and is) used to compute the domain\nsize, hence the name of the first argument <code>d1_size</code>.\nThe second parameter <code>zk_rows</code> is used to define the degree of the\nconstructor <code>VanishesOnZeroKnowledgeAndPreviousRows</code>.</p>\n</div></details></div></details>",0,"kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Operations%3CExprInner%3CF,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1871-2151\">Source</a><a href=\"#impl-Operations%3CExprInner%3CF,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F: FftField, Column: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;F, Column&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.evaluate\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1873-1923\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.evaluate\" class=\"fn\">evaluate</a>&lt;Evaluations: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.ColumnEvaluations.html\" title=\"trait kimchi::circuits::expr::ColumnEvaluations\">ColumnEvaluations</a>&lt;F, Column = Column&gt;&gt;(\n    &amp;self,\n    d: D&lt;F&gt;,\n    pt: F,\n    zk_rows: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n    evals: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Evaluations</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;F, <a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprError.html\" title=\"enum kimchi::circuits::expr::ExprError\">ExprError</a>&lt;Column&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Evaluate an expression into a field element.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evaluations\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1926-1978\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.evaluations\" class=\"fn\">evaluations</a>&lt;'a, ChallengeTerm, Challenge: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;ChallengeTerm, Output = F&gt;, Environment: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.ColumnEnvironment.html\" title=\"trait kimchi::circuits::expr::ColumnEnvironment\">ColumnEnvironment</a>&lt;'a, F, ChallengeTerm, Challenge, Column = Column&gt;&gt;(\n    &amp;self,\n    env: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Environment</a>,\n) -&gt; Evaluations&lt;F, D&lt;F&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Compute the polynomial corresponding to this expression, in evaluation form.</p>\n</div></details></div></details>",0,"kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Operations%3CExprInner%3CF,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2304-2508\">Source</a><a href=\"#impl-Operations%3CExprInner%3CF,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&lt;Output = F&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, Column: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>&gt; <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;F, Column&gt;<div class=\"where\">where\n    <a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprInner.html\" title=\"enum kimchi::circuits::expr::ExprInner\">ExprInner</a>&lt;F, Column&gt;: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>,\n    &lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprInner.html\" title=\"enum kimchi::circuits::expr::ExprInner\">ExprInner</a>&lt;F, Column&gt; as <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>&gt;::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>: Field,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.linearize\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2458-2507\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.linearize\" class=\"fn\">linearize</a>(\n    &amp;self,\n    evaluated: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Column&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/expr/struct.Linearization.html\" title=\"struct kimchi::circuits::expr::Linearization\">Linearization</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;F, Column&gt;, Column&gt;, <a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprError.html\" title=\"enum kimchi::circuits::expr::ExprError\">ExprError</a>&lt;Column&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>There is an optimization in PLONK called “linearization” in which a certain\npolynomial is expressed as a linear combination of other polynomials in order\nto reduce the number of evaluations needed in the IOP (by relying on the homomorphic\nproperty of the polynomial commitments used.)</p>\n<p>The function performs this “linearization”, which we now describe in some detail.</p>\n<p>In mathematical language, an expression <code>e: Expr&lt;F&gt;</code>\nis an element of the polynomial ring <code>F[V]</code>, where <code>V</code> is a set of variables.</p>\n<p>Given a subset <code>V_0</code> of <code>V</code> (and letting <code>V_1 = V \\setminus V_0</code>), there is a map\n<code>factor_{V_0}: F[V] -&gt; (F[V_1])[V_0]</code>. That is, polynomials with <code>F</code> coefficients in the variables <code>V = V_0 \\cup V_1</code>\nare the same thing as polynomials with <code>F[V_1]</code> coefficients in variables <code>V_0</code>.</p>\n<p>There is also a function\n<code>lin_or_err : (F[V_1])[V_0] -&gt; Result&lt;Vec&lt;(V_0, F[V_1])&gt;, &amp;str&gt;</code></p>\n<p>which checks if the given input is in fact a degree 1 polynomial in the variables <code>V_0</code>\n(i.e., a linear combination of <code>V_0</code> elements with <code>F[V_1]</code> coefficients)\nreturning this linear combination if so.</p>\n<p>Given an expression <code>e</code> and set of columns <code>C_0</code>, letting\n<code>V_0 = { Variable { col: c, row: r } | c in C_0, r in { Curr, Next } }</code>,\nthis function computes <code>lin_or_err(factor_{V_0}(e))</code>, although it does not\ncompute it in that way. Instead, it computes it by reducing the expression into\na sum of monomials with <code>F</code> coefficients, and then factors the monomials.</p>\n</div></details></div></details>",0,"kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1610-1628\">Source</a><a href=\"#impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, F: Field, Column: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;&gt; <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.literal\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1615-1617\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.literal\" class=\"fn\">literal</a>(x: F) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convenience function for constructing expressions from literal\nfield elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.combine_constraints\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1621-1627\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.combine_constraints\" class=\"fn\">combine_constraints</a>(\n    alphas: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;,\n    cs: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self&gt;,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Combines multiple constraints <code>[c0, ..., cn]</code> into a single constraint\n<code>alpha^alpha0 * c0 + alpha^{alpha0 + 1} * c1 + ... + alpha^{alpha0 + n} * cn</code>.</p>\n</div></details></div></details>",0,"kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1630-1728\">Source</a><a href=\"#impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F: FftField, Column: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, ChallengeTerm: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_polish\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1632-1637\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.to_polish\" class=\"fn\">to_polish</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.PolishToken.html\" title=\"enum kimchi::circuits::expr::PolishToken\">PolishToken</a>&lt;F, Column, ChallengeTerm&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Compile an expression to an RPN expression.</p>\n</div></details></div></details>",0,"kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1730-1861\">Source</a><a href=\"#impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F: FftField, Column: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, ChallengeTerm: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.evaluate\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1764-1777\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.evaluate\" class=\"fn\">evaluate</a>&lt;'a, Evaluations: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.ColumnEvaluations.html\" title=\"trait kimchi::circuits::expr::ColumnEvaluations\">ColumnEvaluations</a>&lt;F, Column = Column&gt;, Challenge: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;ChallengeTerm, Output = F&gt;, Environment: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.ColumnEnvironment.html\" title=\"trait kimchi::circuits::expr::ColumnEnvironment\">ColumnEnvironment</a>&lt;'a, F, ChallengeTerm, Challenge, Column = Column&gt;&gt;(\n    &amp;self,\n    d: D&lt;F&gt;,\n    pt: F,\n    evals: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Evaluations</a>,\n    env: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Environment</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;F, <a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprError.html\" title=\"enum kimchi::circuits::expr::ExprError\">ExprError</a>&lt;Column&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Evaluate an expression as a field element against an environment.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evaluate_\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1780-1831\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.evaluate_\" class=\"fn\">evaluate_</a>&lt;Evaluations: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.ColumnEvaluations.html\" title=\"trait kimchi::circuits::expr::ColumnEvaluations\">ColumnEvaluations</a>&lt;F, Column = Column&gt;&gt;(\n    &amp;self,\n    d: D&lt;F&gt;,\n    pt: F,\n    evals: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Evaluations</a>,\n    c: &amp;<a class=\"struct\" href=\"kimchi/circuits/expr/struct.Constants.html\" title=\"struct kimchi::circuits::expr::Constants\">Constants</a>&lt;F&gt;,\n    chals: &amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;ChallengeTerm, Output = F&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;F, <a class=\"enum\" href=\"kimchi/circuits/expr/enum.ExprError.html\" title=\"enum kimchi::circuits::expr::ExprError\">ExprError</a>&lt;Column&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Evaluate an expression as a field element against the constants.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evaluate_constants\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1834-1843\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.evaluate_constants\" class=\"fn\">evaluate_constants</a>&lt;'a, Challenge: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;ChallengeTerm, Output = F&gt;, Environment: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.ColumnEnvironment.html\" title=\"trait kimchi::circuits::expr::ColumnEnvironment\">ColumnEnvironment</a>&lt;'a, F, ChallengeTerm, Challenge, Column = Column&gt;&gt;(\n    &amp;self,\n    env: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Environment</a>,\n) -&gt; <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;F, Column&gt;</h4></section></summary><div class=\"docblock\"><p>Evaluate the constant expressions in this expression down into field elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.evaluations\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#1851-1860\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.evaluations\" class=\"fn\">evaluations</a>&lt;'a, Challenge: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;ChallengeTerm, Output = F&gt;, Environment: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.ColumnEnvironment.html\" title=\"trait kimchi::circuits::expr::ColumnEnvironment\">ColumnEnvironment</a>&lt;'a, F, ChallengeTerm, Challenge, Column = Column&gt;&gt;(\n    &amp;self,\n    env: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Environment</a>,\n) -&gt; Evaluations&lt;F, D&lt;F&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Compute the polynomial corresponding to this expression, in evaluation form.\nThe routine will first replace the constants (verifier challenges and\nconstants like the matrix used by <code>Poseidon</code>) in the expression with their\nrespective values using <code>evaluate_constants</code> and will after evaluate the\nmonomials with the corresponding column values using the method\n<code>evaluations</code>.</p>\n</div></details></div></details>",0,"kimchi::circuits::berkeley_columns::E"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3114-3162\">Source</a><a href=\"#impl-Operations%3CExprInner%3COperations%3CConstantExprInner%3CF,+ChallengeTerm%3E%3E,+Column%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, F, Column: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.FormattedOutput.html\" title=\"trait kimchi::circuits::expr::FormattedOutput\">FormattedOutput</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, ChallengeTerm&gt; <a class=\"type\" href=\"kimchi/circuits/expr/type.Expr.html\" title=\"type kimchi::circuits::expr::Expr\">Expr</a>&lt;<a class=\"type\" href=\"kimchi/circuits/expr/type.ConstantExpr.html\" title=\"type kimchi::circuits::expr::ConstantExpr\">ConstantExpr</a>&lt;F, ChallengeTerm&gt;, Column&gt;<div class=\"where\">where\n    F: PrimeField,\n    ChallengeTerm: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.AlphaChallengeTerm.html\" title=\"trait kimchi::circuits::expr::AlphaChallengeTerm\">AlphaChallengeTerm</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.latex_str\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3122-3140\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.latex_str\" class=\"fn\">latex_str</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts the expression in LaTeX</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ocaml_str\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#3143-3161\">Source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/type.Expr.html#tymethod.ocaml_str\" class=\"fn\">ocaml_str</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Converts the expression in OCaml code</p>\n</div></details></div></details>",0,"kimchi::circuits::berkeley_columns::E"]]],["kimchi_msm",[]],["o1vm",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[17,65895,18,12]}